{
  "openapi": "3.0.1",
  "info": {
    "title": "Aztrix on-the-go API"
  },
  "servers": [
    {
      "url": "https://aztrix.app.n8n.cloud/webhook/",
      "description": "Aztrix on-the-go server"
    },
    {
      "url": "https://aztrix.app.n8n.cloud/webhook-test/",
      "description": "Aztrix on-the-go test server"
    }
  ],
  "tags": [
    {
      "name": "users"
    },
    {
      "name": "locations"
    },
    {
      "name": "sites"
    },
    {
      "name": "inbox"
    },
    {
      "name": "ai"
    },
    {
      "name": "whitelabel"
    },
    {
      "name": "notifications"
    },
    {
      "name": "publish"
    },
    {
      "name": "analytics"
    }
  ],
  "paths": {
    "/user/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Provide an access_token for the user",
        "description": "Provides an access_token for the email provided in the LoginCommand",
        "requestBody": {
          "description": "A LoginCommand object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User successfully authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Not Authorized"
          },
          "400": {
            "description": "Invalid or Missing Parameter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out"
          },
          "500": {
            "description": "Error occurred during logout"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      }
    },
    "/user/reset-password": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Resets the user's password",
        "description": "Changes the user's password to a new password",
        "requestBody": {
          "description": "A ResetPassword object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User password succesfully changed"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Not Authorized"
          },
          "400": {
            "description": "Invalid or Missing Parameter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get the current user",
        "responses": {
          "200": {
            "description": "Successfully retrieved user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWrapper"
                }
              }
            }
          },
          "400": {
            "description": "Error occurred"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update the current user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully edited user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWrapper"
                }
              }
            }
          },
          "400": {
            "description": "Error occurred"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      }
    },
    "/location": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get a Location",
        "description": "Get all information about a specific location, including listing statuses",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The unique id of the location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationResponseWrapper"
                }
              }
            }
          },
          "403": {
            "description": "Request Forbidden"
          },
          "400": {
            "description": "Invalid or missing parameter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      },
      "patch": {
        "tags": [
          "locations"
        ],
        "summary": "Update a Location",
        "description": "Make changes to a location. Any blank parameter deletes an old value, any unspecified parameter does nothing",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The uberall unique id for the location you want to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Location object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Location successfully edited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationWrapper"
                }
              }
            }
          },
          "403": {
            "description": "Request Forbidden"
          },
          "400": {
            "description": "Invalid or missing parameter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      }
    },
    "/locations": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get Several Locations",
        "description": "Get locations managed by the current API user. Some fields are omitted (such as paymentOptions and services). For a full list use the GET/api/locations/$id endpoint.",
        "parameters": [
          {
            "name": "businessId",
            "in": "query",
            "description": "Only return locations in the business identified by businessId. Allowed multiple businessIds",
            "schema": {
              "type": "string"
            },
            "example": "/api/locations?businessId=123&businessId=456"
          },
          {
            "name": "businessIds",
            "in": "query",
            "description": "Returns all locations associated with multiple business ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "cities",
            "in": "query",
            "description": "Get locations in the requested cities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "classification",
            "in": "query",
            "description": "Possible values: REQUIRED, BASIC, ADVANCED, BONUS and COMPLETE",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countries",
            "in": "query",
            "description": "Get locations in the requested country",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "endDateMax",
            "in": "query",
            "description": "Only locations with an endDate less than or equal to endDateMax will be returned",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-02-05T12:18:12.000+01:00"
          },
          {
            "name": "endDateMin",
            "in": "query",
            "description": "Only locations with an endDate greater than or equal to endDateMin will be returned.",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2018-02-05T12:18:12.000+01:00"
          },
          {
            "name": "excludedLocationIds",
            "in": "query",
            "description": "List of locationIds that should be excluded from the result",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "excludedLocationIds=20&excludedLocationIds=21 for multiple locations"
          },
          {
            "name": "facebookStatus",
            "in": "query",
            "description": "Possible values: CONNECTED, NOT_CONNECTED",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldMask",
            "in": "query",
            "description": "Possible fieldMask options ( 'id', 'name', 'identifier', 'street', 'streetNo', 'streetAndNumber', 'addressExtra', 'zip', 'city', 'country',\n                                                               'dateCreated', 'endDate', 'province', 'lat', 'lng', 'addressDisplay', 'phone', 'fax', 'timeZone',\n                                                               'cellphone', 'website', 'email', 'legalIdent', 'taxNumber', 'descriptionShort',\n                                                               'descriptionLong', 'imprint', 'openingHoursNotes', 'status', 'photos', 'attributes',\n                                                               'firstSyncStarted', 'lastUpdated', 'lastSyncStarted', 'autoSync', 'locationSyncable', 'businessId', 'businessName', 'productPlanName',\n                                                               'googleInsights', 'labels', 'customFields', 'features', 'groups', 'openingHours', 'specialOpeningHours', 'nameDescriptor',\n                                                               'actionsRequired', 'profileCompleteness', 'suggestionsForFieldsAvailable', 'listingsInSync', 'activeListingsCount',\n                                                               'dataPoints', 'averageRating', 'directoriesMissingConnect' )",
            "schema": {
              "type": "string"
            },
            "example": "fieldMask=city&fieldMask=zip"
          },
          {
            "name": "googleDirectoryStatus",
            "in": "query",
            "description": "Possible values: VERIFIED (the Google listing is verified and fully managed by us),\n                            UNVERIFIED (the Google listing is not verified),\n                            DISABLED (the Google listing is disabled),\n                            SUSPENDED (the Google listing is suspended),\n                            DUPLICATE (the Google listing is a duplicate),\n                            PENDING_VERIFICATION (a verification pin has been requested for the Google listing),\n                            NEEDS_REVERIFICATION (the verification process for the Google listing needs to be reverified),\n                            PENDING_REVIEW (there is no Google account connected for the listing)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "googleStatus",
            "in": "query",
            "description": "Possible values: VERIFIED (the Google listing is verified and fully managed by us),\n                            VERIFICATION_STARTED (a verification pin has been requested for the Google listing),\n                            VERIFICATION_NOT_STARTED (the verification process has not been start for the Google listing),\n                            NOT_CONNECTED (there is no Google account connected for the listing),\n                            VERIFIED_BY_THIRD_PARTY (there is a verified listing on Google but we do not manage it)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupIds",
            "in": "query",
            "description": "The groupId to which the location belongs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "groups",
            "in": "query",
            "description": "The name of the group to which the location belongs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "Only return one location (per business) based on your internal identification system",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "description": "Only return locations that contain at least one of the given labels",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "locationIds",
            "in": "query",
            "description": "Only return locations identified by ids listed in locationIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "?locationIds=20&locationIds=22 for multiple locations"
          },
          {
            "name": "max",
            "in": "query",
            "description": "Used for pagination. Maximum number of results per page. Default: 50 (Without a defined FieldMask the maximum number of results is 50.)",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "missingDirectoryField",
            "in": "query",
            "description": "Only return locations that have no value for the given field",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "needsReview",
            "in": "query",
            "description": "If set to true, only return locations with faulty data in need of review. Default: false.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset used for pagination. Default: 0",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "use asc for ascending sort or desc for descending sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postcodes",
            "in": "query",
            "description": "Get locations in the requested post / zip codes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "provinces",
            "in": "query",
            "description": "Get locations in the requested province / state",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Filter by name, zip, street, city, label",
            "schema": {
              "type": "string"
            },
            "example": "Berlin"
          },
          {
            "name": "queryFields",
            "in": "query",
            "description": "The fields that will be searched to contain the value provided in the 'query' query parameter.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "selectAll",
            "in": "query",
            "description": "Setting selectAll to true allows finding ALL locations for any given businessId, locationIds and labels. In other words these fields are OR joined.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The location property to sort by (ascending unless order is specified).\n                            One of name, street, streetNo, zip, city, phone, cellphone, fax, website, email, lastSyncStarted, country",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by locations status. One of ACTIVE, INACTIVE, CANCELLED",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "syncNeeded",
            "in": "query",
            "description": "If set to true, filter locations that have been updated but did not start a sync yet",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "syncStarted",
            "in": "query",
            "description": "If set to true, filter locations that started a sync. If set to false, filter locations that never synced",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "temporarilyClosed",
            "in": "query",
            "description": "Filter for locations that are currently set to temporarily closed (True) or are not temporarily closed (False)",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationSearchParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Locations successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationSearchResponseWrapper"
                }
              }
            }
          },
          "403": {
            "description": "Request Forbidden"
          },
          "400": {
            "description": "Invalid or missing parameter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get All or Several Categories",
        "description": "Get a list of all available location categories, or specific location categories based on the following parameters",
        "parameters": [
          {
            "name": "categories",
            "in": "query",
            "description": "The uberall unique id of the category you want to get",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "Filter categories by a search query",
            "schema": {
              "type": "string"
            },
            "example": "Auto"
          },
          {
            "name": "roots",
            "in": "query",
            "description": "Set to 'true' to show root categories as well (i.e., show all categories)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Show categories in the specified language. One of de, en, es, fr",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "Used for pagination. Maximum number of results per page. Default: 10",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 10
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset used for pagination. Default: 0",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "QUOTA_LIMIT_EXCEED",
                        "NOT_AUTHORIZED",
                        "FORBIDDEN",
                        "BAD_ACCESS_TOKEN",
                        "BAD_PRIVATE_KEY",
                        "BAD_PUBLIC_KEY",
                        "MISSING_PARAMETER",
                        "INVALID_PARAMETER",
                        "WRONG_PARAMETER_TYPE",
                        "CONFLICT",
                        "RESOURCE_LOCKED",
                        "SERVER_ERROR",
                        "ERROR",
                        "NOT_FOUND",
                        "BAD_REQUEST",
                        "USER_ERROR",
                        "PARTIAL_ERROR",
                        "METHOD_NOT_ALLOWED"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "(optional) Holds further information about the response"
                    },
                    "errorCode": {
                      "type": "string",
                      "enum": [
                        "NORMALIZATION_FAILED",
                        "DATA_CORRUPTED",
                        "INVALID_INPUT",
                        "NOT_SYNCABLE",
                        "PAYMENT_FAILED",
                        "FREE_TIER_REACHED",
                        "LIMIT_REACHED",
                        "INACTIVE",
                        "UNKNOWN",
                        "IDENTIFIER_NOT_UNIQUE",
                        "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
                        "NO_ACCOUNT_CONNECTED",
                        "NO_PAGE_SELECTED",
                        "PAGE_NOT_CREATED",
                        "PAGE_IN_REVIEW",
                        "PAGE_CLAIMED_BY_OTHERS",
                        "OVERLAPPING_SOCIALPOST",
                        "TOO_MANY_REPLIES",
                        "REPLY_TOO_LONG",
                        "DEPRECATED"
                      ]
                    },
                    "warnings": {
                      "type": "array",
                      "description": "(optional) Holds further warnings",
                      "items": {
                        "type": "string",
                        "description": "(optional) Holds further warnings"
                      }
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "max": {
                          "type": "integer"
                        },
                        "offset": {
                          "type": "integer"
                        },
                        "results": {
                          "oneOf": [
                            {
                              "type": "array",
                              "description": "A list of categories",
                              "items": {
                                "$ref": "#/components/schemas/Category"
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "resultTotalCount": {
                                  "type": "integer"
                                },
                                "results": {
                                  "type": "array",
                                  "description": "A list of categories",
                                  "items": {
                                    "$ref": "#/components/schemas/Category"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or missing parameter"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      }
    },
    "location/photo": {
      "post": {
        "tags": [
          "locations"
        ],
        "requestBody": {
          "description": "The photo data to upload",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "locationId",
                  "photo",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A description for the photo - max 255 chars"
                  },
                  "locationId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Location ID"
                  },
                  "photo": {
                    "type": "string",
                    "description": "file or base64"
                  },
                  "type": {
                    "$ref": "#/components/schemas/LocationPhotoType"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Not Authorized"
          },
          "400": {
            "description": "Invalid or Missing Parameter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "locations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The photo has been deleted"
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Invalid or Missing parameter"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      }
    },
    "/site/colors": {
      "get": {
        "tags": [
          "sites"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "sites"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "sites"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "primary100": {
                    "type": "string"
                  },
                  "primary300": {
                    "type": "string"
                  },
                  "primary500": {
                    "type": "string"
                  },
                  "primary900": {
                    "type": "string"
                  },
                  "secondary100": {
                    "type": "string"
                  },
                  "secondary300": {
                    "type": "string"
                  },
                  "secondary500": {
                    "type": "string"
                  },
                  "secondary900": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ai/conversation": {
      "post": {
        "tags": [
          "ai"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "conversationId": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "userLocation": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number",
                        "format": "double"
                      },
                      "lng": {
                        "type": "number",
                        "format": "double"
                      },
                      "freeform": {
                        "type": "string"
                      }
                    }
                  },
                  "dateTime": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "string"
                    },
                    "conversationId": {
                      "type": "string"
                    },
                    "messages": {
                      "type": "array",
                      "description": "All messages in the conversation including the assistant response",
                      "items": {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string"
                          },
                          "content": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ai/chat": {
      "post": {
        "tags": [
          "ai"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userId"
                ],
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string"
                        },
                        "content": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "string"
                    },
                    "messages": {
                      "type": "array",
                      "description": "All messages in the conversation including the assistant response",
                      "items": {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string"
                          },
                          "content": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ai/memories": {
      "get": {
        "tags": [
          "ai"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved memories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "next": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "previous": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "memories": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "string"
                          },
                          "categories": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "ai"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "messages"
                ],
                "properties": {
                  "messages": {
                    "type": "array",
                    "description": "The conversation where memories should be retrieved from",
                    "items": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string"
                        },
                        "content": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ai"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted memory"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ai/system": {
      "get": {
        "tags": [
          "ai"
        ],
        "responses": {
          "200": {
            "description": "Successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task": {
                      "type": "string"
                    },
                    "context": {
                      "type": "string"
                    },
                    "exemplar": {
                      "type": "string"
                    },
                    "persona": {
                      "type": "string"
                    },
                    "format": {
                      "type": "string"
                    },
                    "tone": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/inbox": {
      "post": {
        "tags": [
          "inbox"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channels": {
                    "type": "string",
                    "enum": [
                      "cylex-review",
                      "google-review",
                      "iglobal-review",
                      "stadtbranchenbuch-review",
                      "whereto-review",
                      "cylex-comment",
                      "facebook-comment",
                      "facebook-recommendation",
                      "facebook-post",
                      "facebook-recommendationcomment",
                      "google-comment",
                      "google-question",
                      "google-photo",
                      "google-answer",
                      "instagram-comment",
                      "instagram-post",
                      "iglobal-comment",
                      "whereto-comment"
                    ]
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "resolved",
                        "unresolved",
                        "replied",
                        "unreplied",
                        "contentUpdated",
                        "contentNonUpdated"
                      ]
                    }
                  },
                  "page": {
                    "type": "number",
                    "default": 1
                  },
                  "pageSize": {
                    "type": "number",
                    "default": 20
                  },
                  "sort": {
                    "type": "string",
                    "default": "date"
                  },
                  "sortDir": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "default": "desc"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InboxItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      }
    },
    "/inbox/item": {
      "get": {
        "tags": [
          "inbox"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxItem"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Not Authorized"
          },
          "400": {
            "description": "Invalid or Missing Parameter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      }
    },
    "/inbox/item/children": {
      "get": {
        "tags": [
          "inbox"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InboxItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Not Authorized"
          },
          "400": {
            "description": "Invalid or Missing Parameter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      }
    },
    "/inbox/reply": {
      "post": {
        "tags": [
          "inbox"
        ],
        "parameters": [
          {
            "name": "datapointId",
            "in": "path",
            "description": "Data point ID you want to reply to",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "required": [
                    "reply"
                  ],
                  "reply": {
                    "type": "string",
                    "description": "The text you want to reply"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Reply sent",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DataPointResponseWrapper"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or missing parameter"
          },
          "404": {
            "description": "Data point not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      }
    },
    "/whitelabel": {
      "get": {
        "tags": [
          "whitelabel"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelabelData"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Not Authorized"
          },
          "400": {
            "description": "Invalid or Missing Parameter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      }
    },
    "notifications/register": {
      "post": {
        "tags": [
          "notifications"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Not Authorized"
          },
          "400": {
            "description": "Invalid or Missing Parameter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      }
    },
    "notifications/config": {
      "get": {
        "tags": [
          "notifications"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "newReviews": {
                      "type": "boolean"
                    },
                    "newReviewsIgnoreDirectories": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DirectoryType"
                      }
                    },
                    "newReviewsIgnoreStars": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "newSocialComments": {
                      "type": "boolean"
                    },
                    "aiSuggestions": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Not Authorized"
          },
          "400": {
            "description": "Invalid or Missing Parameter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "notifications"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newReviews": {
                    "type": "boolean"
                  },
                  "newReviewsIgnoreDirectories": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DirectoryType"
                    }
                  },
                  "newReviewsIgnoreStars": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "newSocialComments": {
                    "type": "boolean"
                  },
                  "aiSuggestions": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Not Authorized"
          },
          "400": {
            "description": "Invalid or Missing Parameter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      }
    },
    "publish/posts": {
      "get": {
        "tags": [
          "publish"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialPostsResponseWrapper"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Not Authorized"
          },
          "400": {
            "description": "Invalid or Missing Parameter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "publish"
        ],
        "requestBody": {
          "description": "A SocialPost object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Social Posts created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocialPostWrapper"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Not Authorized"
          },
          "400": {
            "description": "Invalid or Missing Parameter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      }
    },
    "/location/listings": {
      "get": {
        "tags": [
          "locations"
        ],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "description": "The unique id of the location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listing details successfully retrieved",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ListingsDetailsResponseWrapper"
                }
              }
            }
          },
          "403": {
            "description": "Request Forbidden"
          },
          "400": {
            "description": "Invalid or missing parameter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      }
    },
    "/analytics": {
      "get": {
        "tags": [
          "analytics"
        ],
        "parameters": [
          {
            "name": "businessIds",
            "in": "query",
            "description": "The ids of the businesses you want insights data for",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "name": "locationIds",
            "in": "query",
            "description": "The ids of the locations you want insights data for",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "name": "textFilter",
            "in": "query",
            "description": "Filter locations to get insights data for by name, zip, street, city, label",
            "schema": {
              "type": "string"
            },
            "example": "Berlin"
          },
          {
            "name": "type",
            "in": "query",
            "description": "The directory you want insights for. Can be GOOGLE, FACEBOOK, BING or YELP_API",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date YYYY-MM-DD",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date YYYY-MM-DD",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "How to group the results, one of: HOUR (only for ACTIONS-PHONE), DAY, WEEK, MONTH, YEAR",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metrics",
            "in": "query",
            "description": "The types of metrics you want to get",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved insights data",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InsightsWrapper"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "400": {
            "description": "Invalid or Missing parameter"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "authToken": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "LocationPhotoType": {
        "type": "string",
        "enum": [
          "MAIN",
          "DOCTOR_COM_PORTRAIT",
          "LOGO",
          "STOREFINDER_LOGO",
          "SQUARED_LOGO",
          "LANDSCAPE",
          "STOREFINDER_COVER",
          "FACEBOOK_LANDSCAPE",
          "MENU",
          "PHOTO",
          "ROOMS",
          "TEAMS",
          "AT_WORK",
          "PRODUCT",
          "EXTERIOR",
          "INTERIOR",
          "COMMON_AREA",
          "FOOD_AND_DRINK"
        ]
      },
      "WhitelabelData": {
        "type": "object",
        "properties": {
          "theme": {
            "type": "string",
            "enum": [
              "light",
              "dark"
            ]
          },
          "primaryColor": {
            "type": "string"
          },
          "secondaryColor": {
            "type": "string"
          },
          "tertiaryColor": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          }
        }
      },
      "InboxItem": {
        "type": "object",
        "properties": {
          "actionDate": {
            "type": "string",
            "format": "date-time"
          },
          "author": {
            "type": "object",
            "properties": {
              "image": {
                "type": "string"
              },
              "isClient": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "businessIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contentType": {
            "type": "string",
            "enum": [
              "review",
              "comment",
              "recommendation",
              "recommendationcomment",
              "post",
              "photo"
            ]
          },
          "dataPointId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "indexedDate": {
            "type": "string",
            "format": "date-time"
          },
          "isBrand": {
            "type": "boolean"
          },
          "isExpandedReviewNetwork": {
            "type": "boolean"
          },
          "location": {
            "$ref": "#/components/schemas/StoreFinderResponse"
          },
          "locationId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "metrics": {
            "type": "object",
            "properties": {
              "likes": {
                "type": "integer"
              }
            }
          },
          "nativeId": {
            "type": "string"
          },
          "nativeLink": {
            "type": "string"
          },
          "nativeVenueLink": {
            "type": "string"
          },
          "parentDataPointId": {
            "type": "string"
          },
          "parentIdLink": {
            "type": "string"
          },
          "priority": {
            "type": "number",
            "format": "double"
          },
          "provider": {
            "type": "string"
          },
          "rating": {
            "type": "number",
            "format": "double"
          },
          "rootDataPointId": {
            "type": "string"
          },
          "rootIdLink": {
            "type": "string"
          },
          "salesPartnerId": {
            "type": "string"
          },
          "sortDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "media": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string"
                },
                "dataPointId": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "AcceptedExtraFieldsResponseObject": {
        "type": "object",
        "properties": {
          "allergens": {
            "type": "array",
            "description": "List of accepted allergens",
            "items": {
              "type": "string",
              "description": "List of accepted allergens"
            }
          },
          "dietaryRestrictions": {
            "type": "array",
            "description": "List of accepted dietary restrictions",
            "items": {
              "type": "string",
              "description": "List of accepted dietary restrictions"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "AcceptedExtraFieldsResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/AcceptedExtraFieldsResponseObject"
          }
        }
      },
      "AssetInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the DAM Asset"
          },
          "description": {
            "type": "string",
            "description": "Description of the DAM Asset"
          },
          "type": {
            "type": "string",
            "description": "Type of the DAM Asset that should be SOCIAL_POST_TEMPLATE"
          },
          "status": {
            "type": "string",
            "description": "Status of the DAM Asset that can be VISIBLE or HIDDEN"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the DAM Asset"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the DAM Asset"
          },
          "allManagedResources": {
            "type": "boolean",
            "description": "Set to true if the Asset should be visible to all managed locations of the user"
          },
          "locationIds": {
            "type": "array",
            "description": "Location IDs of the DAM Asset",
            "items": {
              "type": "integer",
              "description": "Location IDs of the DAM Asset",
              "format": "int64"
            }
          },
          "businessIds": {
            "type": "array",
            "description": "Business IDs of the DAM Asset",
            "items": {
              "type": "integer",
              "description": "Business IDs of the DAM Asset",
              "format": "int64"
            }
          },
          "excludedLocationIds": {
            "type": "array",
            "description": "Excluded location IDs of the DAM Asset",
            "items": {
              "type": "integer",
              "description": "Excluded location IDs of the DAM Asset",
              "format": "int64"
            }
          },
          "labels": {
            "type": "array",
            "description": "Labels of the DAM Asset",
            "items": {
              "type": "string",
              "description": "Labels of the DAM Asset"
            }
          },
          "locationGroupIds": {
            "type": "array",
            "description": "Location Group IDs of the DAM Asset",
            "items": {
              "type": "integer",
              "description": "Location Group IDs of the DAM Asset",
              "format": "int64"
            }
          },
          "folderId": {
            "type": "integer",
            "description": "Folder ID where the DAM asset should be created",
            "format": "int64"
          }
        },
        "description": "DAM Asset Model"
      },
      "AttributeRecommendationsObject": {
        "type": "object",
        "properties": {
          "recommendedAttributeExternalIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "AttributeRecommendationsWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/AttributeRecommendationsObject"
          }
        }
      },
      "AttributeWrapper": {
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "The google attribute id"
          },
          "value": {
            "type": "string",
            "description": "The value of the attribute. The value depends on the valueType.<br>\nBOOL: \"true\" or \"false\"<br>\nSingle URL:\"http://uberall.com\" <br>\nMultiple URLs: [\"http://uberall.com\", \"https://menuari2.com\"] <br>\nENUM:\"supportedValue1\" or \"supportedValue2\"<br>\nREPEATED_ENUM:\"supportedValue1,supportedValue2\""
          },
          "displayName": {
            "type": "string",
            "description": "The attribute''s name in the required language."
          },
          "groupDisplayName": {
            "type": "string",
            "description": "Attribute group name"
          },
          "valueMetadata": {
            "type": "array",
            "description": "List of possible values.",
            "items": {
              "type": "object",
              "description": "List of possible values"
            }
          },
          "valueType": {
            "type": "string",
            "description": "The attribute type.\ne.g. BOOL, URL, ENUM, REPEATED_ENUM",
            "example": "BOOL, URL, ENUM, REPEATED_ENUM",
            "enum": [
              "BOOL",
              "URL",
              "ENUM",
              "REPEATED_ENUM"
            ]
          }
        },
        "description": "Attribute Wrapper Model"
      },
      "AttributesResponseObject": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeWrapper"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "AttributesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/AttributesResponseObject"
          }
        }
      },
      "Attribution": {
        "required": [
          "logoUrl",
          "name",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the attribution"
          },
          "url": {
            "type": "string",
            "description": "URL the attribution should point to"
          },
          "logoUrl": {
            "type": "string",
            "description": "URL pointing to the attribution logo"
          },
          "width": {
            "type": "integer",
            "description": "Width (in px) of the attribution logo",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "Height (in px) of the attribution logo",
            "format": "int32"
          }
        },
        "description": "Attribution Model"
      },
      "AvailablePhotoTypesResponseObject": {
        "type": "object",
        "properties": {
          "availablePhotoTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "AvailablePhotoTypesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/AvailablePhotoTypesResponseObject"
          }
        }
      },
      "BasicListing": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The location''s name used for this listing"
          },
          "nameStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "street": {
            "type": "string",
            "description": "The location''s street address"
          },
          "streetStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "streetNo": {
            "type": "string",
            "description": "The location''s street number"
          },
          "streetNoStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "streetType": {
            "type": "string",
            "description": "Required for Spain. One of ALAMEDA, AVENIDA, CALLE, CAMINO, CARRER, CARRETERA, GLORIETA, KALEA, PASAJE, PASEO, PLACA, PLAZA, RAMBLA, RONDA, RUA, SECTOR, TRAVESERA, TRAVESIA, URBANIZACION",
            "enum": [
              "ALAMEDA",
              "AVENIDA",
              "CALLE",
              "CAMINO",
              "CARRER",
              "CARRETERA",
              "GLORIETA",
              "KALEA",
              "PASAJE",
              "PASEO",
              "PLACA",
              "PLAZA",
              "RAMBLA",
              "RONDA",
              "RUA",
              "SECTOR",
              "TRAVESERA",
              "TRAVESIA",
              "URBANIZACION"
            ]
          },
          "streetTypeStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "streetAndNo": {
            "type": "string",
            "description": "A localized combination of street and streetNo"
          },
          "streetAndNoStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "addressExtra": {
            "type": "string",
            "description": "An address extra: e.g. building, floor...",
            "example": "building, floor, ..."
          },
          "addressExtraStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "zip": {
            "type": "string",
            "description": "Zip code"
          },
          "zipStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "cityStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "addressDisplay": {
            "type": "boolean",
            "description": "If set to false the address will not be published on the directories, this is useful for businesses that don''t have customers come to them ( e.g. a plumber )",
            "example": true
          },
          "addressDisplayStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "example": "PRESENT",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "phone": {
            "type": "string",
            "description": "The location''s contact phone number"
          },
          "phoneStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "fax": {
            "type": "string",
            "description": "The location fax number"
          },
          "faxStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "cellphone": {
            "type": "string",
            "description": "A contact mobile phone number"
          },
          "cellphoneStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "website": {
            "type": "string",
            "description": "A valid url for the location''s website (use UTMs to add tracking)"
          },
          "websiteStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "email": {
            "type": "string",
            "description": "A contact email for the location"
          },
          "emailStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "descriptionLong": {
            "type": "string",
            "description": "A long description (up to 1000 characters) for the location",
            "example": "A long description (up to 1000 characters) for the location"
          },
          "descriptionLongStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "descriptionShort": {
            "type": "string",
            "description": "A short description (up to 200 characters) for the location"
          },
          "descriptionShortStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "imprint": {
            "type": "string",
            "description": "The location''s imprint"
          },
          "imprintStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "openingHours": {
            "type": "array",
            "description": "The location''s opening hours: e.g.\n<pre>[ &#123; \n    \"dayOfWeek\": 1,\n    \"closed\": false,\n    \"from1\": \"08:00\",\n    \"to1\": \"11:00\"\n  &#125;, \n  &#123;\n    \"dayOfWeek\": 2,\n    \"closed\": false,\n    \"from1\": \"08:00\",\n    \"to1\": \"11:00\",\n    \"from2\": \"13:00\",\n    \"to2\": \"21:00\"\n  &#125;,\n  &#123;\n    \"dayOfWeek\": 3,\n    \"closed\": true\n  &#125;\n]</pre>\nPlease note that having more than 2 time periods for each day is not possible.",
            "example": [
              {
                "dayOfWeek": 1,
                "closed": false,
                "from1": "08:00",
                "to1": "11:00"
              },
              {
                "dayOfWeek": 2,
                "closed": false,
                "from1": "08:00",
                "to1": "11:00",
                "from2": "13:00",
                "to2": "21:00"
              },
              {
                "dayOfWeek": 3,
                "closed": true
              }
            ],
            "items": {
              "$ref": "#/components/schemas/OpeningHours"
            }
          },
          "openingHoursStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "openingHoursNotes": {
            "type": "string",
            "description": "Additional info about opening hours: e.g. ''We never open on bank holidays'' - max. 255 characters",
            "example": "We never open on bank holidays"
          },
          "openingHoursNotesStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "moreHours": {
            "type": "array",
            "description": "The location''s additional service hours, such as delivery, pickup, happy hours etc. Submitted to Google.",
            "example": "<pre>[&#123;\n    \"type\": \"ONLINE_SERVICE_HOURS\",\n    \"hours\": [&#123;\n        \"dayOfWeek\": 1,\n        \"from1\": \"09:00\",\n        \"to1\": \"18:00\"\n    &#125;, &#123;\n        \"dayOfWeek\": 2,\n        \"from1\": \"09:00\",\n        \"to1\": \"13:00\"\n    &#125;]\n&#125;, &#123;\n    \"type\": \"ACCESS\",\n    \"hours\": [&#123;\n        \"dayOfWeek\": 1,\n        \"from1\": \"06:00\",\n        \"to1\": \"20:00\"\n    &#125;]\n&#125;]</pre>",
            "items": {
              "$ref": "#/components/schemas/MoreHours"
            }
          },
          "moreHoursStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "specialOpeningHours": {
            "type": "array",
            "description": "The location''s special opening hours: e.g.\n<pre>[ &#123; \n    \"date\": \"2017-06-29\",\n    \"closed\": true\n  &#125;, \n  &#123;\n    \"date\": \"2017-06-30\",\n    \"from1\": \"11:00\",\n    \"to1\": \"14:00\",\n    \"from2\": \"16:00\",\n    \"to2\": \"20:00\"\n  &#125;\n]</pre>\nPlease note that having more than 2 time periods for each day is not possible.",
            "example": [
              {
                "date": "2017-06-29",
                "closed": true
              },
              {
                "date": "2017-06-30",
                "from1": "11:00",
                "to1": "14:00",
                "from2": "16:00",
                "to2": "20:00"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/SpecialOpeningHours"
            }
          },
          "specialOpeningHoursStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "keywordsStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "categoriesStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "attributes": {
            "type": "array",
            "description": "The location''s Google attributes",
            "items": {
              "type": "object",
              "description": "The location's Google attributes"
            }
          },
          "attributesStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "photosStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "legalIdent": {
            "type": "string",
            "description": "A legal identifier of the location. SIRET number in France"
          },
          "legalIdentStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "taxNumber": {
            "type": "string",
            "description": "The tax number of the location. CIF/NIF in Spain"
          },
          "taxNumberStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "province": {
            "type": "string",
            "description": "Province. Only send when not blank"
          },
          "provinceStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "country": {
            "type": "string",
            "description": "Country. One of AT, CH, DE, ES, UK, FR, IT, NL",
            "enum": [
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BQ",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "XK",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "NO",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "BL",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "SS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "UK",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          },
          "countryStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "socialPost": {
            "$ref": "#/components/schemas/SocialPost"
          },
          "socialPostStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "videosStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "contentListsStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "socialProfilesStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "paymentOptions": {
            "type": "array",
            "description": "Payment options available at the location",
            "items": {
              "type": "object",
              "description": "Payment options available at the location"
            }
          },
          "paymentOptionsStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "brandsStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "servicesStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "transactionLinksStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "languagesStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "attribution": {
            "$ref": "#/components/schemas/Attribution"
          },
          "attributionStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "lat": {
            "type": "number",
            "description": "The latitude of the listing",
            "format": "double"
          },
          "latStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "lng": {
            "type": "number",
            "description": "The longitude of the listing",
            "format": "double"
          },
          "lngStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "serviceAreas": {
            "type": "array",
            "description": "Service areas available on the location.",
            "items": {
              "$ref": "#/components/schemas/ServiceArea"
            }
          },
          "serviceAreasStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "rating": {
            "type": "number",
            "description": "Average rating of the listing",
            "format": "double"
          },
          "ratingStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE or PRESENT",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "numberOfRatings": {
            "type": "integer",
            "description": "Number of ratings ",
            "format": "int32"
          },
          "numberOfRatingsStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE or PRESENT",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "listingId": {
            "type": "string",
            "description": "The listing id in the directory''s database"
          },
          "listingUrl": {
            "type": "string",
            "description": "The listing url on the directory''s website"
          },
          "directoryType": {
            "description": "The directory where this listing appears",
            "$ref": "#/components/schemas/DirectoryType"
          },
          "flowStatus": {
            "type": "string",
            "description": "The status of the current listing. One of  SUBMISSION_NEEDED, WAITING_USER_ACTION, WAITING_DIRECTORY_ACTION, ALL_INFORMATION_SUBMITTED, NO_ACTION_NEEDED, NOT_SUPPORTED, INACTIVE, NEEDS_REVIEW, MANUALLY_DEACTIVATED, REMOVAL_REVIEW_NEEDED, REMOVAL_NEEDED, REMOVAL_SUBMITTED, REMOVED, DONT_REMOVE",
            "enum": [
              "SUBMISSION_NEEDED",
              "WAITING_USER_ACTION",
              "WAITING_DIRECTORY_ACTION",
              "ALL_INFORMATION_SUBMITTED",
              "NO_ACTION_NEEDED",
              "NOT_SUPPORTED",
              "INACTIVE",
              "MANUALLY_DEACTIVATED",
              "MANUALLY_CREATED",
              "REMOVAL_REVIEW_NEEDED",
              "REMOVAL_NEEDED",
              "REMOVAL_SUBMITTED",
              "REMOVED",
              "DONT_REMOVE",
              "CANNOT_REMOVE",
              "CANCELLATION_NEEDED",
              "CANCELLATION_SUBMITTED"
            ]
          },
          "syncStatus": {
            "type": "string",
            "description": "The sync status of the listing. One of: IN_SYNC (location found on remote directory and in sync with reference data), NOT_IN_SYNC (location found on remote directory but differs from reference data), NOT_FOUND (location not found (yet) on remote directory), TECHNICAL_PROBLEMS (temporary problems when connecting with the directory),  NOT_SUPPORTED (if the location is incompatible with the directory or if we cannot search on that directory), NO_ONLINE_LISTING (for the types where there is no listing that can be checked online, e.g. GARMIN), LINK_ONLY (for the types where we can only link a listing by not update it)",
            "enum": [
              "IN_SYNC",
              "NOT_IN_SYNC",
              "NOT_FOUND",
              "TECHNICAL_PROBLEMS",
              "NOT_SUPPORTED",
              "NO_ONLINE_LISTING",
              "LINK_ONLY"
            ]
          },
          "claimStatus": {
            "type": "string",
            "description": "Claim status of the listing. One of CLAIMABLE, NOT_CLAIMABLE, CLAIMED_BY_US, CLAIMED_BY_OTHERS, CLAIMING_IN_PROGRESS, UNKNOWN",
            "enum": [
              "CLAIMABLE",
              "NOT_CLAIMABLE",
              "CLAIMED_BY_US",
              "CLAIMED_BY_OTHERS",
              "CLAIMED_BY_ANOTHER_US",
              "CLAIMING_IN_PROGRESS",
              "UNKNOWN"
            ]
          },
          "npi": {
            "type": "string",
            "description": "The National Provider Identifier (NPI) is a Health Insurance Portability and Accountability Act (HIPAA) Administrative Simplification Standard. The NPI is a unique identification number for covered health care providers.",
            "example": "1558444216"
          },
          "npiStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "example": "MISSING",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "doctorCategories": {
            "type": "array",
            "description": "A list of category IDs for Doctor.com directory",
            "example": "[1]",
            "items": {
              "type": "object",
              "description": "A list of category IDs for Doctor.com directory"
            }
          },
          "doctorCategoriesStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "example": "MATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "nameDescriptor": {
            "type": "string",
            "description": "The location''s name descriptor (submitted to Facebook)."
          },
          "nameDescriptorStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "dateCreated": {
            "type": "string",
            "description": "The date and time the listing was created in our database",
            "format": "date-time"
          },
          "openingDate": {
            "type": "string",
            "description": "The original opening date of the business",
            "format": "date"
          },
          "openingDateStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "customFields": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Custom Fields for the directory"
            },
            "description": "Custom Fields for the directory"
          },
          "customFieldsStatus": {
            "type": "string",
            "description": "The sync status of this specific field.",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "sublocality": {
            "type": "string",
            "description": "The sublocality field is only available for countries that require this for their postal address. The following countries have this for: Indonesia - Sub-district, Phillipines - Barangay, Thailand - Tambon / Khwaeng, Vietnam - Sublocality, Malaysia - Village, Nigeria - Local area, South Africa - Suburb."
          },
          "sublocalityStatus": {
            "type": "string",
            "description": "The sync status of this specific field. One of NOT_APPLICABLE, PRESENT, MISSING, MATCH, MISMATCH",
            "enum": [
              "MATCH",
              "MISMATCH",
              "PRESENT",
              "MISSING",
              "NOT_APPLICABLE"
            ]
          },
          "websiteExtra": {
            "type": "string",
            "description": "Utm or tracking path - only sent to GOOGLE"
          },
          "photos": {
            "type": "boolean",
            "description": "Boolean indicating whether or not the listing has photos"
          },
          "services": {
            "type": "array",
            "description": "The video of the social post (can only be one)",
            "items": {
              "type": "string"
            }
          },
          "keywords": {
            "type": "array",
            "description": "The video of the social post (can only be one)",
            "items": {
              "type": "string"
            }
          },
          "brands": {
            "type": "array",
            "description": "The video of the social post (can only be one)",
            "items": {
              "type": "string"
            }
          },
          "languages": {
            "type": "array",
            "description": "The video of the social post (can only be one)",
            "items": {
              "type": "string"
            }
          },
          "categories": {
            "type": "array",
            "description": "Required - A list of category IDs describing the location",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "contentLists": {
            "type": "array",
            "description": "Content lists shown on the listing",
            "items": {
              "$ref": "#/components/schemas/ContentList"
            }
          },
          "socialProfiles": {
            "type": "array",
            "description": "Social profiles of the location",
            "items": {
              "$ref": "#/components/schemas/SocialProfile"
            }
          },
          "videos": {
            "type": "array",
            "description": "A list of videos about the location",
            "items": {
              "$ref": "#/components/schemas/Video"
            }
          }
        },
        "description": "Basic Listings Model"
      },
      "BasicListingResultObject": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/BasicListing"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "BasicListingResultWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/BasicListingResultObject"
          }
        }
      },
      "BrandDataPoint": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The uberall unique id of the data point",
            "format": "int64"
          },
          "liked": {
            "type": "boolean",
            "description": "Whether this datapoint has been liked or not"
          },
          "data": {
            "type": "string",
            "description": "Content of the datapoint (text of the review, url of the photo, count of checkins...)"
          },
          "type": {
            "type": "string",
            "description": "Datapoint Type. Values: [PHOTO, REVIEW, CHECKIN, CONVERSATION, QUESTION]",
            "enum": [
              "REVIEW",
              "PHOTO",
              "CHECKIN",
              "CONVERSATION",
              "COMMENT",
              "QUESTION",
              "POST",
              "IMAGE",
              "VIDEO",
              "CAROUSEL_ALBUM",
              "LINK",
              "EXPANDEDREVIEW",
              "AD_POST"
            ]
          },
          "actionDate": {
            "type": "string",
            "description": "The date when the review/photo/... was published in the online directory",
            "format": "date-time"
          },
          "author": {
            "type": "string",
            "description": "Username of the datapoints author"
          },
          "authorImage": {
            "type": "string",
            "description": "Author profile picture url"
          },
          "countComments": {
            "type": "integer",
            "description": "Number of comments to this item.",
            "format": "int32"
          },
          "dateCreated": {
            "type": "string",
            "description": "The date the datapoint was found",
            "format": "date-time"
          },
          "directLink": {
            "type": "string",
            "description": "A link to the online profile"
          },
          "directoryType": {
            "description": "Online directory reference name",
            "$ref": "#/components/schemas/DirectoryType"
          },
          "flagged": {
            "type": "boolean",
            "description": "Whether the datapoint has been flagged. The exact nature of the flagging depends on the directory, but can be e.g. \"Report as SPAM\""
          },
          "lastUpdated": {
            "type": "string",
            "description": "Date of last update",
            "format": "date-time"
          },
          "rating": {
            "type": "number",
            "description": "Rating given by the user. Float value, max: 5.",
            "format": "float"
          },
          "repliedByOwner": {
            "type": "boolean",
            "description": "True if the owner of the business has replied"
          },
          "secondaryData": {
            "type": "string",
            "description": "Additional info about the datapoint (eg. text content on instagram pictures)"
          },
          "threadActionDate": {
            "type": "string",
            "description": "The date of the last interaction in that thread. When a review receives a new comment, the parent will update.",
            "format": "date-time"
          }
        },
        "description": "Brand Data Point Model"
      },
      "BrandDataPointResponseObject": {
        "type": "object",
        "properties": {
          "dataPoint": {
            "$ref": "#/components/schemas/BrandDataPoint"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "BrandDataPointResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/BrandDataPointResponseObject"
          }
        }
      },
      "BrandPagesResponseObject": {
        "type": "object",
        "properties": {
          "brandPages": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "BrandPagesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/BrandPagesResponseObject"
          }
        }
      },
      "Business": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The uberall unique id for the business",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "The business's name"
          },
          "type": {
            "type": "string",
            "description": "Business type. One of SMB or ENTERPRISE",
            "example": "[SMB, ENTERPRISE]",
            "enum": [
              "SMB",
              "ENTERPRISE"
            ]
          },
          "streetAndNo": {
            "type": "string",
            "description": "Address of the business"
          },
          "addressLine2": {
            "type": "string",
            "description": "An address extra: e.g. building, floor...",
            "example": "building, floor..."
          },
          "province": {
            "type": "string",
            "description": "Province. Only send when not blank"
          },
          "zip": {
            "type": "string",
            "description": "Zipcode of the business"
          },
          "city": {
            "type": "string",
            "description": "City of the business"
          },
          "identifier": {
            "type": "string",
            "description": "The business identifier based on your internal identification system"
          },
          "country": {
            "type": "string",
            "description": "Country of the business",
            "enum": [
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BQ",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "XK",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "NO",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "BL",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "SS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "UK",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          },
          "phone": {
            "type": "string",
            "description": "Business's phone number"
          },
          "productPlan": {
            "$ref": "#/components/schemas/ProductPlan"
          },
          "dateCreated": {
            "type": "string",
            "description": "The date and time the business was created in uberall database",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Business's status",
            "enum": [
              "CREATED",
              "NOT_CONFIRMED",
              "ACTIVE",
              "DELETED"
            ]
          },
          "countryPrices": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of country specific prices",
            "items": {
              "$ref": "#/components/schemas/PricePerCountry"
            }
          },
          "activeLocations": {
            "type": "integer",
            "description": "Number of active locations in the business",
            "format": "int32"
          },
          "defaultPrice": {
            "type": "integer",
            "description": "Business default price in cent",
            "format": "int32"
          },
          "defaultPriceSetup": {
            "type": "integer",
            "description": "Business default setup price in cent",
            "format": "int32"
          },
          "defaultMarketDevelopmentFunds": {
            "type": "integer",
            "format": "int32"
          },
          "defaultOriginalPrice": {
            "type": "integer",
            "description": "Default Original Price in cent",
            "format": "int32"
          },
          "businessSyncable": {
            "type": "boolean",
            "description": "True if the business is allowed to start a sync. Only relevant for Businesses with more than 10 locations."
          },
          "numOfLocations": {
            "type": "integer",
            "description": "Number of active locations",
            "format": "int32"
          },
          "customFields": {
            "type": "string",
            "description": "Custom fields allow for additional information to be added at the location level. All locations within the business will have the same list of custom fields."
          },
          "effectiveDate": {
            "type": "string",
            "description": "Date when the business automatically changes its product plan to the new product plan (defined by nextProductPlanId)",
            "format": "date-time"
          },
          "dateExpiration": {
            "type": "string",
            "description": "The date the business's contract expires",
            "format": "date-time"
          },
          "nextProductPlanId": {
            "type": "integer",
            "description": "ID of the next product plan applied for the business on the defined effectiveDate",
            "format": "int64"
          }
        },
        "description": "Business Model"
      },
      "BusinessConnectionRequest": {
        "type": "object",
        "properties": {
          "connectionId": {
            "type": "string",
            "description": "Connection id that must be passed for directories like Twitter"
          },
          "accountId": {
            "type": "string",
            "description": "Directory account which will be used for establishing connection"
          },
          "deep": {
            "type": "boolean",
            "description": "Boolean flag indicating whether disconnect should remove all created connections originated from business connect (only applies for Facebook)"
          }
        },
        "description": "Business connection parameters"
      },
      "BusinessFiltersResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Business ID",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Business Name"
          }
        },
        "description": "Business"
      },
      "BusinessPageResponse": {
        "type": "object",
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "BusinessPageResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/BusinessPageResponse"
          }
        }
      },
      "BusinessResponseObject": {
        "type": "object",
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "BusinessResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/BusinessResponseObject"
          }
        }
      },
      "BusinessSearchParams": {
        "type": "object"
      },
      "BusinessStatistics": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of businesses",
            "format": "int32"
          },
          "countActive": {
            "type": "integer",
            "description": "Number of active businesses",
            "format": "int32"
          },
          "countWithoutLocations": {
            "type": "integer",
            "description": "Number of businesses without any locations",
            "format": "int32"
          },
          "countWithLocations": {
            "type": "integer",
            "description": "Number of businesses with at least one location",
            "format": "int32"
          }
        },
        "description": "Business Statistics Model"
      },
      "BusinessStatisticsWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/BusinessStatistics"
          }
        }
      },
      "CallToAction": {
        "type": "object",
        "description": "A list of callToAction objects, each wth a title and URL formated as",
        "example": "callToActions: [{ text: 'cta_text1', url: 'cta_url1' }, { text: 'cta_text2', url: 'cta_url2' }]"
      },
      "CallTrackingNumber": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "The call tracking number for the select directory -- must be different than the location''s primary phone number."
          },
          "type": {
            "description": "Google, Facebook, or Bing",
            "$ref": "#/components/schemas/DirectoryType"
          }
        },
        "description": "Call Tracking Number"
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The uberall unique id for the category",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "The category description"
          },
          "parent": {
            "type": "integer",
            "description": "The uberall unique id for the parent category",
            "format": "int64"
          },
          "selectable": {
            "type": "boolean",
            "description": "Boolean indicating whether the category can be used"
          }
        },
        "description": "Represents one of uberall's categories"
      },
      "CheckConflictRequest": {
        "required": [
          "businesses",
          "locations",
          "triggers"
        ],
        "type": "object",
        "properties": {
          "businesses": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "List of business ids. Only check Auto Response Rules identified by the business ids listed in businesses",
              "format": "int64"
            }
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "List of location ids. nly check Auto Response Rules identified by the location ids listed in locations",
              "format": "int64"
            }
          },
          "excludedLocations": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "List of location ids that should be excluded from the check",
              "format": "int64"
            }
          },
          "triggers": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Only check Auto Response Rules that also apply to these triggers, use ONE_STAR, TWO_STAR, THREE_STAR, FOUR_STAR and/or FIVE_STAR"
            }
          },
          "ignoreRule": {
            "type": "integer",
            "description": "When editing an Auto Response Rule, send the id from the rule being edited in this field",
            "format": "int64"
          }
        },
        "description": "Check Conflict Request"
      },
      "CitiesResponse": {
        "type": "object",
        "properties": {
          "cities": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "List of cities",
              "example": "[\"City1\",\"City2\"]"
            }
          }
        },
        "description": "Cities response model"
      },
      "CitiesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/CitiesResponse"
          }
        }
      },
      "ConflictingRuleResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id of conflicting Auto Response Rule"
          },
          "name": {
            "type": "string",
            "description": "Name of conflicting Auto Response Rule"
          }
        },
        "description": "Conflicting Rule Response Model"
      },
      "ConflictingRulesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "uniqueItems": true,
            "type": "array",
            "description": "The actual response object of the response, optional for non 200 responses",
            "items": {
              "$ref": "#/components/schemas/ConflictingRuleResponse"
            }
          }
        }
      },
      "ConnectFlowUserDetails": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Connected account detail (Account name)"
          },
          "email": {
            "type": "string",
            "description": "Connected account detail (email)"
          },
          "dateConnected": {
            "type": "string",
            "description": "his should indicate the date that this user made the connection",
            "format": "date-time"
          },
          "defaultForSalesPartner": {
            "type": "boolean",
            "description": "This should indicate whether the connection in place has been produced by a salesPartner level connection"
          },
          "defaultForBusiness": {
            "type": "boolean",
            "description": "This should indicate whether the connection in place has been produced by a business level connection"
          }
        },
        "description": "Connect Flow User Details model"
      },
      "ContentCollection": {
        "required": [
          "contentLists",
          "identifier",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Mandatory - A unique identifier for the collection"
          },
          "name": {
            "type": "string",
            "description": "Mandatory - Name of the content collection"
          },
          "description": {
            "type": "string",
            "description": "A description of the collection"
          },
          "type": {
            "type": "string",
            "description": "Mandatory - the type of content collection. Values can be: MENU, PEOPLE, PRODUCTS, SERVICES, or CUSTOM",
            "enum": [
              "MENU",
              "PEOPLE",
              "PRODUCTS",
              "CUSTOM",
              "SERVICES",
              "EVENTS"
            ]
          },
          "contentLists": {
            "type": "array",
            "description": "Mandatory - Sections within the content collections",
            "items": {
              "$ref": "#/components/schemas/ContentList"
            }
          },
          "locationIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "Location Ids that should be associated with this collection",
            "items": {
              "type": "integer",
              "description": "Location Ids that should be associated with this collection",
              "format": "int64"
            }
          },
          "cuisineType": {
            "type": "string",
            "description": "Only applicable to Menu content collections - indicates the cuisine the restaurant serves",
            "enum": [
              "AMERICAN",
              "ASIAN",
              "BRAZILIAN",
              "BREAKFAST",
              "BRUNCH",
              "CHICKEN",
              "CHINESE",
              "FAMILY",
              "FAST_FOOD",
              "FRENCH",
              "GREEK",
              "GERMAN",
              "HAMBURGER",
              "INDIAN",
              "INDONESIAN",
              "ITALIAN",
              "JAPANESE",
              "KOREAN",
              "LATIN_AMERICAN",
              "MEDITERRANEAN",
              "MEXICAN",
              "PAKISTANI",
              "PIZZA",
              "SEAFOOD",
              "SPANISH",
              "SUSHI",
              "THAI",
              "TURKISH",
              "VEGETARIAN",
              "VIETNAMESE",
              "OTHER_CUISINE"
            ]
          },
          "url": {
            "type": "string",
            "description": "Applicable to Menu collections only - url to the brand webpage menu"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Content Collection"
      },
      "ContentCollectionSearchParams": {
        "type": "object"
      },
      "ContentItemSearchParams": {
        "type": "object"
      },
      "ContentList": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The name of the content list: e.g. ''Lunch Menu''",
            "example": "Lunch Menu"
          },
          "type": {
            "type": "string",
            "description": "The type of content list. One of SERVICES, PRODUCTS, MENU, PEOPLE or CUSTOM. The type cannot be updated after creation.",
            "enum": [
              "MENU",
              "PEOPLE",
              "PRODUCTS",
              "CUSTOM",
              "SERVICES",
              "EVENTS"
            ]
          },
          "dateCreated": {
            "type": "string",
            "description": "The date the content list was created",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "description": "The date the content list was last updated",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "A description of the content list (section)"
          },
          "orderNumber": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Content List"
      },
      "ContentListResponseObject": {
        "type": "object",
        "properties": {
          "contentList": {
            "$ref": "#/components/schemas/ContentList"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "ContentListResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/ContentListResponseObject"
          }
        }
      },
      "ContentListsObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "Offset for pagination",
            "format": "int32",
            "example": 0
          },
          "max": {
            "type": "integer",
            "description": "Maximum number of results per page",
            "format": "int32",
            "example": 10
          },
          "total": {
            "type": "integer",
            "description": "Total count of results",
            "format": "int32",
            "example": 100
          },
          "totalLocationsCount": {
            "type": "integer",
            "description": "Total count of locations",
            "format": "int32",
            "example": 100
          },
          "contentLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentList"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "ContentListsWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/ContentListsObject"
          }
        }
      },
      "CountriesResponse": {
        "type": "object",
        "properties": {
          "countries": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "List of countries",
              "example": "[\"Country1\",\"Country2\"]"
            }
          }
        },
        "description": "CountriesResponse Model"
      },
      "CountriesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/CountriesResponse"
          }
        }
      },
      "CreateDirectoryBrandRequest": {
        "required": [
          "category",
          "country",
          "name",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name for the directory brand"
          },
          "country": {
            "type": "string",
            "description": "Country for the directory brand"
          },
          "category": {
            "type": "string",
            "description": "Category for the directory brand"
          },
          "url": {
            "type": "string",
            "description": "Website URL for the directory brand"
          },
          "appLink": {
            "type": "string",
            "description": "AppLink for the directory brand"
          }
        },
        "description": "Details for creating a directory brand"
      },
      "CreatePDFValidatorCommand": {
        "type": "object"
      },
      "CreateTemplateRequest": {
        "required": [
          "message",
          "tags",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the template"
          },
          "message": {
            "type": "string",
            "description": "The message that will be used in the response"
          },
          "tags": {
            "type": "string",
            "description": "Template tags used for filtering"
          },
          "businesses": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "List of business ids that have access to the template"
            }
          }
        }
      },
      "CreateUserRequest": {
        "required": [
          "email",
          "firstname",
          "lastname"
        ],
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "description": "User's first name"
          },
          "lastname": {
            "type": "string",
            "description": "User's last name"
          },
          "salutation": {
            "type": "string",
            "description": "User's salutation"
          },
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "salesPartner": {
            "type": "string",
            "description": "Sales partner"
          },
          "emailSettings": {
            "type": "string",
            "description": "Email settings"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          },
          "currentPassword": {
            "type": "string",
            "description": "User's current password"
          },
          "newPassword": {
            "type": "string",
            "description": "User's new password"
          },
          "newPasswordRepeat": {
            "type": "string",
            "description": "Repeat new password"
          }
        },
        "description": "User data to be created"
      },
      "CurrentPreviousValue": {
        "type": "object",
        "properties": {
          "current": {
            "type": "number",
            "description": "The value for the current period"
          },
          "previous": {
            "type": "number",
            "description": "The value for the previous period"
          }
        },
        "description": "CurrentPreviousValue Model"
      },
      "CustomItem": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "mandatory, the custom name, e.g. ''Strong Coffee''"
          },
          "description": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "listName": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "description": "The uberall unique id for the custom item",
            "format": "int64"
          },
          "price": {
            "type": "integer",
            "description": "optional, the price of the custom, e.g. 1500 ( i.e. 15,00 EUR )",
            "format": "int32"
          },
          "currency": {
            "type": "object",
            "description": "optional, indicating the currency for price and priceMax in ISO-4217, e.g. EUR"
          },
          "category": {
            "type": "string",
            "description": "optional, a category name, e.g. ''Coffee''",
            "example": "Coffee"
          },
          "video": {
            "$ref": "#/components/schemas/Video"
          },
          "unit": {
            "type": "string",
            "description": "optional, indicating the unit of measure, e.g. ''per kg''",
            "example": "per kg"
          },
          "url": {
            "type": "string",
            "description": "optional, a url related to the custom item"
          },
          "priceMax": {
            "type": "integer",
            "description": "optional, indicating there is a price range, e.g. 2500 ( i.e. 25,00 EUR )",
            "format": "int32"
          },
          "image": {
            "$ref": "#/components/schemas/SdkImage"
          }
        },
        "description": "Custom Item"
      },
      "CustomItemResponseObject": {
        "type": "object",
        "properties": {
          "customItem": {
            "$ref": "#/components/schemas/CustomItem"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "CustomItemResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/CustomItemResponseObject"
          }
        }
      },
      "CustomItemSearchResponseObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "Offset for pagination",
            "format": "int32",
            "example": 0
          },
          "max": {
            "type": "integer",
            "description": "Maximum number of results per page",
            "format": "int32",
            "example": 10
          },
          "total": {
            "type": "integer",
            "description": "Total count of results",
            "format": "int32",
            "example": 100
          },
          "customItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomItem"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "CustomItemSearchResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/CustomItemSearchResponseObject"
          }
        }
      },
      "CustomerFeedback": {
        "type": "object",
        "properties": {
          "countByRating": {
            "type": "array",
            "description": "Average count by rating",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "Average count by rating"
              },
              "description": "Average count by rating"
            }
          },
          "ratingCount": {
            "type": "integer",
            "description": "The total count of rating",
            "format": "int32"
          },
          "repliedCount": {
            "type": "integer",
            "description": "The count of replied reviews",
            "format": "int32"
          },
          "averageRating": {
            "type": "number",
            "description": "Average rating obtained",
            "format": "float"
          },
          "interactionCount": {
            "type": "integer",
            "description": "The number of review and photos",
            "format": "int32"
          },
          "unreadInteractionCount": {
            "type": "integer",
            "description": "The number of reviews and photos unread",
            "format": "int32"
          },
          "unreadInteractions": {
            "type": "array",
            "description": "The reviews and photos unread",
            "items": {
              "$ref": "#/components/schemas/DataPoint"
            }
          },
          "matchedLocationsCount": {
            "type": "integer",
            "description": "The number of locations matching the given textFilter query",
            "format": "int32"
          }
        },
        "description": "CustomerFeedback Model"
      },
      "CustomerFeedbackByPeriod": {
        "type": "object",
        "properties": {
          "interactionCountByPeriod": {
            "type": "array",
            "description": "The number of reviews and photos unread by period",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "The number of reviews and photos unread by period"
              },
              "description": "The number of reviews and photos unread by period"
            }
          },
          "averageRatingByPeriod": {
            "type": "array",
            "description": "The average ratings of the incoming reviews in the given time periods of the total time span.",
            "items": {
              "$ref": "#/components/schemas/TimeSeriesSegment"
            }
          },
          "matchedLocationsCount": {
            "type": "integer",
            "description": "The number of locations matching the given textFilter query",
            "format": "int32"
          },
          "totalRatingCount": {
            "type": "integer",
            "description": "The total number of reviews with rating in the given time span.",
            "format": "int32"
          }
        },
        "description": "CustomerFeedbackByPeriod Model"
      },
      "CustomerFeedbackByPeriodWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/CustomerFeedbackByPeriod"
          }
        }
      },
      "CustomerFeedbackKeyword": {
        "type": "object",
        "properties": {
          "keyword": {
            "type": "string",
            "description": "The actual Keyword"
          },
          "percentage": {
            "$ref": "#/components/schemas/CurrentPreviousValue"
          },
          "rating": {
            "$ref": "#/components/schemas/CurrentPreviousValue"
          },
          "ratingSum": {
            "$ref": "#/components/schemas/CurrentPreviousValue"
          },
          "aggregatedWords": {
            "type": "array",
            "description": "Contains the list of similar words that have been aggregated to this CustomerFeedbackKeyword object",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "CustomerFeedbackKeyword Model"
      },
      "CustomerFeedbackKeywords": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "array",
            "description": "The list of keywords",
            "items": {
              "$ref": "#/components/schemas/CustomerFeedbackKeyword"
            }
          },
          "totalFeedbacksAnalyzed": {
            "type": "integer",
            "description": "The total number of Feedbacks that have been analyzed.",
            "format": "int32"
          }
        },
        "description": "CustomerFeedbackKeyword Model"
      },
      "CustomerFeedbackKeywordsWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/CustomerFeedbackKeywords"
          }
        }
      },
      "CustomerFeedbackWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/CustomerFeedback"
          }
        }
      },
      "DashboardExportData": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "description": "Start date of export",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "description": "End date of export",
            "format": "date-time"
          },
          "group": {
            "type": "string",
            "description": "A time grouping parameter among HOUR, DAY, WEEK, MONTH, YEAR",
            "enum": [
              "HOUR",
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          "language": {
            "type": "string",
            "description": "Language of a generated PDF report (e.g. ''de'', ''fr'', ''en'')",
            "example": "en"
          },
          "token": {
            "type": "string",
            "description": "Token of the export job"
          },
          "status": {
            "type": "string",
            "description": "Current status of the export process (e.g. ''FINISHED'', ''SCHEDULED'', ''FAILED'')",
            "example": "FINISHED, SCHEDULED, FAILED",
            "enum": [
              "CREATED",
              "SCHEDULED",
              "FAILED",
              "FINISHED"
            ]
          },
          "whitelabelIdentifier": {
            "type": "string",
            "description": "Whitelabel identifier which will be used in the outline of the PDF report"
          },
          "salesPartnerCountry": {
            "type": "string",
            "description": "Country of the SalesPartner"
          },
          "locationIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "A list of location IDs for which to generate a report",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Dashboard Export Data"
      },
      "DashboardExportDataListObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "The offset for pagination",
            "format": "int32",
            "example": 0
          },
          "max": {
            "type": "integer",
            "description": "The maximum number of results to return",
            "format": "int32",
            "example": 10
          },
          "count": {
            "type": "integer",
            "description": "The total count of export data",
            "format": "int32",
            "example": 100
          },
          "exportDatas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DashboardExportData"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "DashboardExportDataListWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/DashboardExportDataListObject"
          }
        }
      },
      "DashboardExportDataWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/DashboardExportData"
          }
        }
      },
      "DashboardExportInsightsDataResponse": {
        "type": "object",
        "properties": {
          "fileUrl": {
            "type": "string",
            "description": "The download link. Only available when status is FINISHED."
          },
          "status": {
            "type": "string",
            "description": "One out of: EMAIL, FINISHED, FAILED\nEMAIL means the export will be send to the users email.\nFINISHED means the export is available at the given fileUrl.\nFAILED means that something went wrong.",
            "enum": [
              "EMAIL",
              "FINISHED",
              "FAILED"
            ]
          }
        },
        "description": "Dashboard Export Insights Data Response Model"
      },
      "DashboardExportInsightsDataResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/DashboardExportInsightsDataResponse"
          }
        }
      },
      "DashboardLocation": {
        "type": "object",
        "properties": {
          "businessName": {
            "type": "string",
            "description": "Name of the business"
          }
        },
        "description": "Dashboard Location Model"
      },
      "DataPoint": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The uberall unique id of the data point",
            "format": "int64"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPoint"
            }
          },
          "liked": {
            "type": "boolean",
            "description": "Whether this datapoint has been liked or not"
          },
          "data": {
            "type": "string",
            "description": "Content of the datapoint (text of the review, url of the photo, count of checkins...)"
          },
          "type": {
            "type": "string",
            "description": "Datapoint Type. Values: [PHOTO, REVIEW, CHECKIN, CONVERSATION, QUESTION]",
            "enum": [
              "REVIEW",
              "PHOTO",
              "CHECKIN",
              "CONVERSATION",
              "COMMENT",
              "QUESTION",
              "POST",
              "IMAGE",
              "VIDEO",
              "CAROUSEL_ALBUM",
              "LINK",
              "EXPANDEDREVIEW",
              "AD_POST"
            ]
          },
          "countLikes": {
            "type": "integer",
            "description": "Number of likes to this item",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "description": "The Location ID associated with this datapoint",
            "format": "int64"
          },
          "actionDate": {
            "type": "string",
            "description": "The date when the review/photo/... was published in the online directory",
            "format": "date-time"
          },
          "author": {
            "type": "string",
            "description": "Username of the datapoint's author"
          },
          "authorImage": {
            "type": "string",
            "description": "Author profile picture url"
          },
          "countComments": {
            "type": "integer",
            "description": "Number of comments to this item.",
            "format": "int32"
          },
          "dateCreated": {
            "type": "string",
            "description": "The date the datapoint was found",
            "format": "date-time"
          },
          "directLink": {
            "type": "string",
            "description": "A link to the online profile"
          },
          "directoryType": {
            "description": "Online directory reference name",
            "$ref": "#/components/schemas/DirectoryType"
          },
          "flagged": {
            "type": "boolean",
            "description": "Whether the datapoint has been flagged. The exact nature of the flagging depends on the directory, but can be e.g. \"Report as SPAM\""
          },
          "lastUpdated": {
            "type": "string",
            "description": "Date of last update.",
            "format": "date-time"
          },
          "rating": {
            "type": "number",
            "description": "Rating given by the user. Float value, max: 5.",
            "format": "float"
          },
          "repliedByOwner": {
            "type": "boolean",
            "description": "True if the owner of the business has replied"
          },
          "secondaryData": {
            "type": "string",
            "description": "Additional info about the datapoint (eg. text content on instagram pictures)"
          },
          "threadActionDate": {
            "type": "string",
            "description": "The date of the last interaction in that thread. When a review receives a new comment, the parent will update.",
            "format": "date-time"
          }
        },
        "description": "Data Point Model"
      },
      "DataPointFilter": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The filter name"
          },
          "shared": {
            "type": "boolean",
            "description": "Defines if the filter is shared or not"
          },
          "directories": {
            "uniqueItems": true,
            "type": "array",
            "description": "The list of directories for which the dataPoints should be filtered",
            "items": {
              "description": "The list of directories for which the dataPoints should be filtered",
              "$ref": "#/components/schemas/DirectoryType"
            }
          },
          "countries": {
            "uniqueItems": true,
            "type": "array",
            "description": "The list of countries for which the dataPoints should be filtered",
            "items": {
              "type": "string",
              "description": "The list of countries for which the dataPoints should be filtered",
              "enum": [
                "AF",
                "AX",
                "AL",
                "DZ",
                "AS",
                "AD",
                "AO",
                "AI",
                "AQ",
                "AG",
                "AR",
                "AM",
                "AW",
                "AU",
                "AT",
                "AZ",
                "BS",
                "BH",
                "BD",
                "BB",
                "BY",
                "BE",
                "BZ",
                "BJ",
                "BM",
                "BT",
                "BO",
                "BQ",
                "BA",
                "BW",
                "BV",
                "BR",
                "IO",
                "BN",
                "BG",
                "BF",
                "BI",
                "KH",
                "CM",
                "CA",
                "CV",
                "KY",
                "CF",
                "TD",
                "CL",
                "CN",
                "CX",
                "CC",
                "CO",
                "KM",
                "CG",
                "CD",
                "CK",
                "CR",
                "CI",
                "HR",
                "CU",
                "CW",
                "CY",
                "CZ",
                "DK",
                "DJ",
                "DM",
                "DO",
                "EC",
                "EG",
                "SV",
                "GQ",
                "ER",
                "EE",
                "ET",
                "FK",
                "FO",
                "FJ",
                "FI",
                "FR",
                "GF",
                "PF",
                "TF",
                "GA",
                "GM",
                "GE",
                "DE",
                "GH",
                "GI",
                "GR",
                "GL",
                "GD",
                "GP",
                "GU",
                "GT",
                "GG",
                "GN",
                "GW",
                "GY",
                "HT",
                "HM",
                "VA",
                "HN",
                "HK",
                "HU",
                "IS",
                "IN",
                "ID",
                "IR",
                "IQ",
                "IE",
                "IM",
                "IL",
                "IT",
                "JM",
                "JP",
                "JE",
                "JO",
                "KZ",
                "KE",
                "KI",
                "KP",
                "KR",
                "XK",
                "KW",
                "KG",
                "LA",
                "LV",
                "LB",
                "LS",
                "LR",
                "LY",
                "LI",
                "LT",
                "LU",
                "MO",
                "MK",
                "MG",
                "MW",
                "MY",
                "MV",
                "ML",
                "MT",
                "MH",
                "MQ",
                "MR",
                "MU",
                "YT",
                "MX",
                "FM",
                "MD",
                "MC",
                "MN",
                "ME",
                "MS",
                "MA",
                "MZ",
                "MM",
                "NA",
                "NR",
                "NP",
                "NL",
                "NC",
                "NZ",
                "NI",
                "NE",
                "NG",
                "NU",
                "NF",
                "MP",
                "NO",
                "OM",
                "PK",
                "PW",
                "PS",
                "PA",
                "PG",
                "PY",
                "PE",
                "PH",
                "PN",
                "PL",
                "PT",
                "PR",
                "QA",
                "RE",
                "RO",
                "RU",
                "RW",
                "BL",
                "SH",
                "KN",
                "LC",
                "MF",
                "PM",
                "VC",
                "WS",
                "SM",
                "ST",
                "SA",
                "SN",
                "RS",
                "SC",
                "SL",
                "SG",
                "SX",
                "SK",
                "SI",
                "SB",
                "SO",
                "ZA",
                "GS",
                "SS",
                "ES",
                "LK",
                "SD",
                "SR",
                "SJ",
                "SZ",
                "SE",
                "CH",
                "SY",
                "TW",
                "TJ",
                "TZ",
                "TH",
                "TL",
                "TG",
                "TK",
                "TO",
                "TT",
                "TN",
                "TR",
                "TM",
                "TC",
                "TV",
                "UG",
                "UA",
                "AE",
                "UK",
                "US",
                "UM",
                "UY",
                "UZ",
                "VU",
                "VE",
                "VN",
                "VG",
                "VI",
                "WF",
                "EH",
                "YE",
                "ZM",
                "ZW"
              ]
            }
          },
          "dataPointTypes": {
            "uniqueItems": true,
            "type": "array",
            "description": "The list of data point types (REVIEW or PHOTO) for which the dataPoints should be filtered",
            "items": {
              "type": "string",
              "description": "The list of data point types (REVIEW or PHOTO) for which the dataPoints should be filtered",
              "enum": [
                "REVIEW",
                "PHOTO",
                "CHECKIN",
                "CONVERSATION",
                "COMMENT",
                "QUESTION",
                "POST",
                "IMAGE",
                "VIDEO",
                "CAROUSEL_ALBUM",
                "LINK",
                "EXPANDEDREVIEW",
                "AD_POST"
              ]
            }
          },
          "ratings": {
            "uniqueItems": true,
            "type": "array",
            "description": "The list of ratings (1, 2, 3, 4 or 5) for which the dataPoints should be filtered",
            "items": {
              "type": "integer",
              "description": "The list of ratings (1, 2, 3, 4 or 5) for which the dataPoints should be filtered",
              "format": "int32"
            }
          },
          "labels": {
            "uniqueItems": true,
            "type": "array",
            "description": "The list of labels for which the dataPoints should be filtered",
            "items": {
              "type": "string",
              "description": "The list of labels for which the dataPoints should be filtered"
            }
          },
          "isRead": {
            "type": "boolean",
            "description": "Flag to set when only datapoints should be shown that the current user already read"
          },
          "hasReply": {
            "type": "boolean",
            "description": "Flag to set when only datapoints with a reply should be shown"
          },
          "hasText": {
            "type": "boolean",
            "description": "Flag to set when only datapoints with text should be shown"
          },
          "query": {
            "type": "string",
            "description": "Any combination of words that should be checked in the dataPoints text, reply messages and author"
          },
          "timeSpan": {
            "type": "string",
            "description": "The date range for which the dataPoints should be filtered.",
            "enum": [
              "TODAY",
              "LAST_7_DAYS",
              "LAST_14_DAYS",
              "LAST_30_DAYS",
              "LAST_90_DAYS",
              "LAST_365_DAYS",
              "ALL_TIME"
            ]
          },
          "crossfeedFilterId": {
            "type": "integer",
            "description": "The id of a filter saved by a user in the Feed",
            "format": "int64"
          },
          "businessIds": {
            "uniqueItems": true,
            "type": "array",
            "description": "The list of businesses IDs for which the dataPoints should be filtered",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "dateEnd": {
            "type": "string",
            "description": "The maximum date for which the dataPoints should be filtered",
            "format": "date-time"
          },
          "dateStart": {
            "type": "string",
            "description": "The minimum date for which the dataPoints should be filtered",
            "format": "date-time"
          },
          "ownerId": {
            "type": "integer",
            "description": "The id of the user that owns the filter",
            "format": "int64"
          },
          "ownerName": {
            "type": "string",
            "description": "The name of the user that owns the filter"
          },
          "salesPartnerId": {
            "type": "integer",
            "description": "The sales partner to which the filter belongs",
            "format": "int64"
          },
          "subscriberIds": {
            "type": "array",
            "description": "The list of user''s ids that are subscribed to the filter",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "description": "Data Point Filter Model"
      },
      "DataPointFilterResponseObject": {
        "type": "object",
        "properties": {
          "dataPointFilter": {
            "$ref": "#/components/schemas/DataPointFilter"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "DataPointFilterResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/DataPointFilterResponseObject"
          }
        }
      },
      "DataPointFiltersResponseObject": {
        "type": "object",
        "properties": {
          "dataPointFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointFilter"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "DataPointFiltersResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/DataPointFiltersResponseObject"
          }
        }
      },
      "DataPointResponseObject": {
        "type": "object",
        "properties": {
          "dataPoint": {
            "$ref": "#/components/schemas/DataPoint"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "DataPointResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/DataPointResponseObject"
          }
        }
      },
      "DataPointTimeSeriesResponse": {
        "type": "object",
        "properties": {
          "timeseries": {
            "type": "array",
            "description": "A list of TimeSeriesValues",
            "items": {
              "$ref": "#/components/schemas/DataPointTimeSeriesValue"
            }
          }
        },
        "description": "DataPoint Time Series Response Model"
      },
      "DataPointTimeSeriesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/DataPointTimeSeriesResponse"
          }
        }
      },
      "DataPointTimeSeriesValue": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "The Date"
          },
          "datapoints": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "A map with the count of Data points, for each type, for the specific date"
            },
            "description": "A map with the count of datapoints, for each type, for the specific date"
          }
        },
        "description": "DataPoint Time Series Value Model"
      },
      "DatapointStatisticsResponse": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "Total number of datapoints",
            "format": "int32"
          },
          "photoCount": {
            "type": "integer",
            "description": "Number of photos",
            "format": "int32"
          },
          "postCount": {
            "type": "integer",
            "description": "Number of posts",
            "format": "int32"
          },
          "reviewCount": {
            "type": "integer",
            "description": "Number of reviews",
            "format": "int32"
          },
          "checkinCount": {
            "type": "integer",
            "description": "Number of checkins",
            "format": "int32"
          },
          "questionCount": {
            "type": "integer",
            "description": "Number of questions",
            "format": "int32"
          },
          "ratingCount": {
            "type": "integer",
            "description": "Number of ratings",
            "format": "int32"
          },
          "unreadCount": {
            "type": "integer",
            "description": "Number of unread datapoints",
            "format": "int32"
          },
          "pendingApprovalCount": {
            "type": "integer",
            "description": "Number of replies pending approval",
            "format": "int32"
          },
          "averageRating": {
            "type": "number",
            "description": "Average rating obtained",
            "format": "float"
          },
          "directories": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Breakdown by directory"
            },
            "description": "Breakdown by directory"
          }
        },
        "description": "Datapoint statistics response Model"
      },
      "DatapointStatisticsResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/DatapointStatisticsResponse"
          }
        }
      },
      "DeleteResponseObject": {
        "type": "object",
        "properties": {
          "deletedCount": {
            "type": "integer",
            "description": "Total count of deleted items",
            "format": "int32",
            "example": 10
          },
          "failedCount": {
            "type": "integer",
            "description": "Total count of failed items",
            "format": "int32",
            "example": 2
          },
          "deletedIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "failed": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "DeleteResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/DeleteResponseObject"
          }
        }
      },
      "DirectoriesDetailsCountriesResponseObject": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectoriesDetailsCountry"
            }
          },
          "count": {
            "type": "integer",
            "description": "Total count of countries",
            "format": "int32",
            "example": 195
          },
          "max": {
            "type": "integer",
            "description": "Maximum number of results per page",
            "format": "int32",
            "example": 10
          },
          "offset": {
            "type": "integer",
            "description": "Offset for pagination",
            "format": "int32",
            "example": 0
          },
          "nextOffset": {
            "type": "integer",
            "description": "Next offset for pagination",
            "format": "int32",
            "example": 10
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "DirectoriesDetailsCountriesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/DirectoriesDetailsCountriesResponseObject"
          }
        }
      },
      "DirectoriesDetailsCountry": {
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string",
            "description": "Code for country that directory supports in ISO 3166 alpha-2 format",
            "example": "US"
          },
          "directoryDetails": {
            "type": "array",
            "description": "Object that holds details for directory",
            "items": {
              "$ref": "#/components/schemas/DirectoryDetails"
            }
          }
        },
        "description": "Details of directories by country"
      },
      "DirectoriesResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The count of directories",
            "format": "int32",
            "example": 5
          },
          "directories": {
            "type": "array",
            "description": "List of directory",
            "example": [
              "Directory1",
              "Directory2"
            ],
            "items": {
              "type": "string",
              "description": "List of directory",
              "example": "[\"Directory1\",\"Directory2\"]"
            }
          }
        },
        "description": "Directories response model"
      },
      "DirectoriesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/DirectoriesResponse"
          }
        }
      },
      "DirectoryBrand": {
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "External ID of the directory brand",
            "example": "12345"
          },
          "status": {
            "type": "string",
            "description": "Status of the directory brand",
            "example": "active"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "country": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "DirectoryBrandPageResponse": {
        "type": "object",
        "properties": {
          "businesses": {
            "type": "array",
            "description": "list of all the business ( directory brands) from the external directory",
            "items": {
              "$ref": "#/components/schemas/DirectoryExternalBusinessResponse"
            }
          },
          "nextPageOffset": {
            "type": "string",
            "description": "offset for the next page from the external directory",
            "example": "10"
          }
        },
        "description": "Page response for directory brands"
      },
      "DirectoryBrandPageResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/DirectoryBrandPageResponse"
          }
        }
      },
      "DirectoryBrandUrl": {
        "type": "object",
        "description": "URLs of the external business"
      },
      "DirectoryBrandWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/DirectoryBrand"
          }
        }
      },
      "DirectoryCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the Directory Category",
            "format": "int64"
          },
          "type": {
            "description": "Type of the Directory",
            "$ref": "#/components/schemas/DirectoryType"
          },
          "name": {
            "type": "string",
            "description": "String representation of the category",
            "example": "Autowerkstatt"
          },
          "externalId": {
            "type": "string",
            "description": "External id used by the directory to describe or chose a category",
            "example": "12345"
          },
          "parent": {
            "$ref": "#/components/schemas/DirectoryCategory"
          },
          "selectable": {
            "type": "boolean",
            "description": "Indicates if the category is selectable",
            "example": false
          },
          "dateCreated": {
            "type": "string",
            "description": "Date when the category was created",
            "format": "date-time",
            "example": "2023-01-01T00:00:00Z"
          },
          "lastUpdated": {
            "type": "string",
            "description": "Date when the category was last updated",
            "format": "date-time",
            "example": "2023-01-01T00:00:00Z"
          },
          "country": {
            "type": "string",
            "description": "Country associated with the category",
            "enum": [
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BQ",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "XK",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "NO",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "BL",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "SS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "UK",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          }
        },
        "description": "Represents a category of a Directory uberall is connected to."
      },
      "DirectoryConnectInfo": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Listing Connect Status [CONNECTED, NOT_CONNECTED, NOT_NEEDED]",
            "enum": [
              "CONNECTED",
              "NOT_CONNECTED",
              "NOT_NEEDED"
            ]
          },
          "userDetails": {
            "$ref": "#/components/schemas/ConnectFlowUserDetails"
          }
        },
        "description": "Directory Connect Info model"
      },
      "DirectoryContactDetails": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address to be used to release a claim from another provider"
          },
          "website": {
            "type": "string",
            "description": "Contact website address to be used to release a claim from another provider"
          }
        },
        "description": "Directory contact details model"
      },
      "DirectoryDetails": {
        "type": "object",
        "properties": {
          "directoryName": {
            "type": "string",
            "description": "Name of the directory",
            "example": "Google"
          },
          "isSearchable": {
            "type": "boolean",
            "description": "Indicates whether directory has a search API that can be used",
            "example": true
          }
        },
        "description": "Details of a directory"
      },
      "DirectoryExternalBusinessResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id of the business on external directory",
            "example": "1"
          },
          "names": {
            "type": "array",
            "description": "list of names for the business",
            "items": {
              "type": "string",
              "description": "Names of the external business",
              "example": "['BusinessName1', 'BusinessName2']"
            }
          },
          "countryCode": {
            "type": "string",
            "description": "country code for the business eg: en-US",
            "example": "US"
          },
          "categories": {
            "type": "array",
            "description": "list of categories - oftenly the external ids being maintained for the categories on uberall side",
            "items": {
              "$ref": "#/components/schemas/DirectoryCategory"
            }
          },
          "urls": {
            "type": "array",
            "description": "list of urls for the business",
            "items": {
              "$ref": "#/components/schemas/DirectoryBrandUrl"
            }
          },
          "etag": {
            "type": "string",
            "description": "ETag of the external business",
            "example": "etag123"
          },
          "state": {
            "type": "string",
            "description": "status of business on external directory",
            "example": "active"
          },
          "locationsCount": {
            "type": "integer",
            "description": "count of locations under the business",
            "format": "int64",
            "example": 10
          },
          "photos": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "A description for the photo - max 255 chars"
              },
              "sourceUrl": {
                "type": "string",
                "description": "The URL to the original photo"
              },
              "identifier": {
                "type": "string",
                "description": "The photo identifier based on your internal identification system"
              },
              "cropOffsetX": {
                "type": "integer",
                "description": "Horizontal pixel offset of the top-left corner of the cropped area [LANDSCAPE photo only]",
                "format": "int32"
              },
              "cropOffsetY": {
                "type": "integer",
                "description": "Vertical pixel offset of the top-left corner of the cropped area [LANDSCAPE photo only]",
                "format": "int32"
              },
              "cropWidth": {
                "type": "integer",
                "description": "Width of the 16:9 cropped area [LANDSCAPE photo only]",
                "format": "int32"
              },
              "cropHeight": {
                "type": "integer",
                "description": "Height of the 16:9 cropped area [LANDSCAPE photo only]",
                "format": "int32"
              }
            },
            "description": "Photos of the external business"
          }
        },
        "description": "Response for external business directory"
      },
      "DirectoryPage": {
        "type": "object",
        "properties": {
          "directoryUserAccount": {
            "$ref": "#/components/schemas/DirectoryUserAccount"
          },
          "token": {
            "$ref": "#/components/schemas/OAuthToken"
          },
          "pageId": {
            "type": "string",
            "description": "External page ID",
            "example": "12345"
          },
          "name": {
            "type": "string",
            "description": "External page name",
            "example": "Main Directory Page"
          },
          "status": {
            "type": "string",
            "description": "Status of the page",
            "enum": [
              "VALID",
              "INVALID",
              "CREATION_NEEDED"
            ]
          },
          "type": {
            "type": "string",
            "description": "Type of the page",
            "enum": [
              "FACEBOOK",
              "INSTAGRAM",
              "GOOGLE",
              "TWITTER",
              "APPLE_MAPS",
              "TRUSTPILOT",
              "LINKED_IN"
            ]
          },
          "dateCreated": {
            "type": "string",
            "description": "Date the page was created",
            "format": "date-time",
            "example": "2023-01-01T00:00:00Z"
          },
          "lastUpdated": {
            "type": "string",
            "description": "Date the page was last updated",
            "format": "date-time",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        "description": "Abstract class representing a directory page"
      },
      "DirectoryPageResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The Uberall unique id for the directory page",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "The Directory Page name on the directory"
          },
          "additionalInfo": {
            "type": "string",
            "description": "Additional info for the page allowing you to distinguish between pages with same name"
          },
          "level": {
            "type": "string",
            "description": "The level of the page. It is either the business or listing page. [BUSINESS, LISTING]",
            "enum": [
              "BUSINESS",
              "LISTING"
            ]
          },
          "type": {
            "description": "The Directory Page type [BUSINESS_PAGE, DIRECTORY_PAGE]",
            "$ref": "#/components/schemas/DirectoryType"
          }
        },
        "description": "Directory Page Response Model"
      },
      "DirectoryPageResponseObject": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/DirectoryPage"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "DirectoryPageResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/DirectoryPageResponseObject"
          }
        }
      },
      "DirectoryUserAccount": {
        "type": "object",
        "description": "Directory user account associated with the page"
      },
      "EmailSettings": {
        "type": "object",
        "properties": {
          "frequency": {
            "type": "string",
            "description": "Frequency of the emailType. The available frequencies by email type are: DIGEST: WEEKLY, MONTHLY or NEVER; ACTIVATION: ALWAYS or NEVER; START_VERIFICATION_GOOGLE: ALWAYS or NEVER; FINISH_VERIFICATION_GOOGLE: ALWAYS or NEVER; UNREAD_REVIEW_NOTIFICATION: ALWAYS or NEVER; PENDING_APPROVAL_REPLY_NOTIFICATION: DAILY, ALWAYS or NEVER.",
            "enum": [
              "ALWAYS",
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "QUARTERLY",
              "NEVER"
            ]
          },
          "emailType": {
            "type": "string",
            "description": "Type of email. Currently, the types of email supported are: DIGEST, ACTIVATION, START_VERIFICATION_GOOGLE, FINISH_VERIFICATION_GOOGLE, UNREAD_REVIEW_NOTIFICATION, PENDING_APPROVAL_REPLY_NOTIFICATION, SOCIAL_POST_PENDING_APPROVAL_NOTIFICATION, NEW_CHATS_NOTIFICATION, NEW_CONTACT_FORM_NOTIFICATION",
            "enum": [
              "DIGEST",
              "UNREAD_REVIEW_NOTIFICATION",
              "PENDING_APPROVAL_REPLY_NOTIFICATION",
              "ACTIVATION",
              "START_VERIFICATION_GOOGLE",
              "FINISH_VERIFICATION_GOOGLE",
              "NEW_CHATS_NOTIFICATION",
              "NEW_CONTACT_FORM_NOTIFICATION",
              "SOCIAL_POST_PENDING_APPROVAL_NOTIFICATION",
              "DASHBOARD_EXPORT",
              "RENEWAL_FAIL",
              "RENEWAL_SUCCESS",
              "RESET_PASSWORD_SP",
              "SALES_PARTNER_APPROVAL",
              "USER_INVITATION",
              "SALES_PARTNER_ENTERPRISE_ONBOARDING_COMPLETE",
              "NEW_CHAT_NOTIFICATION_LOCATION",
              "NEW_CHAT_NOTIFICATION_BUSINESS",
              "NEW_CONTACT_FORM_NOTIFICATION_LOCATION",
              "NEW_CONTACT_FORM_NOTIFICATION_BUSINESS",
              "TIMELY_TASK_NOTIFICATION_1",
              "TIMELY_TASK_NOTIFICATION_2",
              "TIMELY_TASK_NOTIFICATION_3"
            ]
          }
        },
        "description": "Email Settings Model"
      },
      "EvConnector": {
        "required": [
          "amperage",
          "format",
          "identifier",
          "powerType",
          "standard",
          "updateTime",
          "voltage"
        ],
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Required - Identifier of the connector within the EVSE created by the CPO. Two connectors may have the same id as long as they do not belong to the same EVSE object."
          },
          "standard": {
            "type": "string",
            "description": "Required - The socket or plug standard of the charging point",
            "enum": [
              "CHADEMO",
              "CHAOJI",
              "DOMESTIC_A",
              "DOMESTIC_B",
              "DOMESTIC_C",
              "DOMESTIC_D",
              "DOMESTIC_E",
              "DOMESTIC_F",
              "DOMESTIC_G",
              "DOMESTIC_H",
              "DOMESTIC_I",
              "DOMESTIC_J",
              "DOMESTIC_K",
              "DOMESTIC_L",
              "DOMESTIC_M",
              "DOMESTIC_N",
              "DOMESTIC_O",
              "GBT_AC",
              "GBT_DC",
              "IEC_60309_2_single_16",
              "IEC_60309_2_three_16",
              "IEC_60309_2_three_32",
              "IEC_60309_2_three_64",
              "IEC_62196_T1",
              "IEC_62196_T1_COMBO",
              "IEC_62196_T2",
              "IEC_62196_T2_COMBO",
              "IEC_62196_T3A",
              "IEC_62196_T3C",
              "NEMA_5_20",
              "NEMA_6_30",
              "NEMA_6_50",
              "NEMA_10_30",
              "NEMA_10_50",
              "NEMA_14_30",
              "NEMA_14_50",
              "PANTOGRAPH_BOTTOM_UP",
              "PANTOGRAPH_TOP_DOWN",
              "TESLA_R",
              "TESLA_S"
            ]
          },
          "format": {
            "type": "string",
            "description": "Required - The format of the connector, whether it is a socket or a plug",
            "enum": [
              "CABLE",
              "SOCKET"
            ]
          },
          "powerType": {
            "type": "string",
            "description": "Required - Connector Power Type. Values can be: AC_1_PHASE, AC_3_PHASE, DC ",
            "enum": [
              "AC_1_PHASE",
              "AC_2_PHASE",
              "AC_2_PHASE_SPLIT",
              "AC_3_PHASE",
              "DC"
            ]
          },
          "voltage": {
            "type": "integer",
            "description": "Required - The voltage of the connector",
            "format": "int32"
          },
          "amperage": {
            "type": "integer",
            "description": "Required - The maximum amperage of the connector ",
            "format": "int32"
          },
          "updateTime": {
            "type": "string",
            "description": "Date/time of the connector's last update",
            "format": "date-time"
          }
        },
        "description": "EV Connector"
      },
      "EvData": {
        "required": [
          "operator",
          "owner",
          "timezone",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of location of the charging station",
            "enum": [
              "ON_STREET",
              "OTHER",
              "PARKING_GARAGE",
              "PARKING_LOT",
              "UNDERGROUND_GARAGE",
              "ON_DRIVEWAY",
              "ALONG_MOTORWAY",
              "UNKNOWN"
            ]
          },
          "owner": {
            "type": "string",
            "description": "Required - Owner of the location"
          },
          "operator": {
            "type": "string",
            "description": "Required - Operator of the chargepoints of the location "
          },
          "subOperator": {
            "type": "string",
            "description": "Suboperator of the chargepoints of the location"
          },
          "timezone": {
            "type": "string",
            "description": "The time zone of the location"
          },
          "isChargingClosed": {
            "type": "boolean",
            "description": "Indicates if the EVSEs can be used for charging outside the opening hours of the location. E.g. when the parking garage closes its barriers overnight, it will indicate if you still can charge till the next morning"
          },
          "updateTime": {
            "type": "string",
            "description": "Date/time of the last EV data update",
            "format": "date-time"
          },
          "supplyEquipments": {
            "uniqueItems": true,
            "type": "array",
            "description": "Charging Station information",
            "items": {
              "$ref": "#/components/schemas/EvSupplyEquipment"
            }
          }
        },
        "description": "EV Data"
      },
      "EvDynamicDataObject": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "uid": {
            "type": "string",
            "description": "UID"
          },
          "status": {
            "type": "string",
            "description": "Status"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "EvDynamicDataWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/EvDynamicDataObject"
          }
        }
      },
      "EvSupplyEquipment": {
        "required": [
          "connectors",
          "uid",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "Unique ID in the system of the CPO"
          },
          "evseId": {
            "type": "string",
            "description": "Required - Unique id for the outside world. Compliant with “eMI3standard version V1.0” "
          },
          "physicalReference": {
            "type": "string",
            "description": "A number/string printed on the outside of the EVSE for visual identification"
          },
          "updateTime": {
            "type": "string",
            "description": "Date/time of the Equipment's last update",
            "format": "date-time"
          },
          "connectors": {
            "uniqueItems": true,
            "type": "array",
            "description": "Details on each connector",
            "items": {
              "$ref": "#/components/schemas/EvConnector"
            }
          },
          "parkingRestrictions": {
            "uniqueItems": true,
            "type": "array",
            "description": "This value, if provided by CPO, represents the restriction to the parking spot for different purposes",
            "items": {
              "type": "string",
              "description": "This value, if provided by CPO, represents the restriction to the parking spot for different purposes",
              "enum": [
                "CUSTOMERS",
                "DISABLED",
                "EV_ONLY",
                "MOTORCYCLES",
                "PLUGGED"
              ]
            }
          }
        },
        "description": "EV Supply Equipment"
      },
      "Event": {
        "required": [
          "timeEnd",
          "timeStart",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the event"
          },
          "description": {
            "type": "string",
            "description": "The description of the event: e.g. \"Watch a lot of awesome movies.\""
          },
          "identifier": {
            "type": "string",
            "description": "Unique Identifier for the Event"
          },
          "listName": {
            "type": "string",
            "description": "Name of the Event"
          },
          "timeStart": {
            "type": "string",
            "description": "The date the event starts",
            "format": "date-time"
          },
          "timeEnd": {
            "type": "string",
            "description": "The date the event ends",
            "format": "date-time"
          },
          "video": {
            "$ref": "#/components/schemas/Video"
          },
          "url": {
            "type": "string",
            "description": "The url of the page with more details about the event"
          }
        },
        "description": "Event"
      },
      "EventResponseObject": {
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/Event"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "EventResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/EventResponseObject"
          }
        }
      },
      "EventSearchResponseObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "Offset for pagination",
            "format": "int32",
            "example": 0
          },
          "max": {
            "type": "integer",
            "description": "Maximum number of results per page",
            "format": "int32",
            "example": 10
          },
          "total": {
            "type": "integer",
            "description": "Total count of results",
            "format": "int32",
            "example": 100
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "EventSearchResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/EventSearchResponseObject"
          }
        }
      },
      "ExternalEntitiesObject": {
        "type": "object",
        "properties": {
          "pages": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "ExternalEntitiesWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/ExternalEntitiesObject"
          }
        }
      },
      "FeaturesResponse": {
        "type": "object",
        "properties": {
          "locations": {
            "type": "array",
            "description": "Get user features partitioned by location.",
            "items": {
              "$ref": "#/components/schemas/LocationFeatureResponse"
            }
          },
          "defaultFeatures": {
            "type": "array",
            "description": "A list with the default features for the user.",
            "items": {
              "type": "string",
              "description": "A list with the default features for the user",
              "enum": [
                "NEW_PHOTO_TYPES",
                "ADS",
                "ADS_READ",
                "ADS_WRITE",
                "ADVANCED_ANALYTICS",
                "ADVANCED_ANALYTICS_2_0",
                "AI_KNOWLEDGEBASE",
                "AI_LOCALISATION",
                "AI_SUGGESTED_REPLIES",
                "APPLE_POSTING",
                "APPLE_POSTING_WRITE",
                "AUTO_RESPONSE",
                "AUTO_RESPONSE_WRITE",
                "AUTOMATION",
                "BASIC",
                "BASIC_PLUS",
                "BULK_UPDATES",
                "INSTAGRAM_POSTING",
                "INSTAGRAM_POSTING_WRITE",
                "BUSINESS_LEVEL_CONNECT",
                "CALL_TRACKING_NUMBERS",
                "CAN_PAY_INVOICE",
                "CAN_SEE_HELP_SECTION",
                "CHATBOT",
                "CHATBOT_READ",
                "CHATBOT_WRITE",
                "CHAT_READ",
                "CHAT_WRITE",
                "CLEANSING",
                "CONTENT_COLLECTION",
                "DAM",
                "DASHBOARD",
                "ENTERPRISE_ONBOARDING",
                "FACEBOOK_UNOWNED_PAGE_CREATE",
                "FIRST_PARTY_REVIEW_APPROVAL",
                "FORMS",
                "GOOGLE_POSTING",
                "HOMEPAGE",
                "INBOX",
                "INBOX_APPROVAL",
                "INBOX_PREVIEW",
                "INBOX_TEASER",
                "INBOX_TWITTER",
                "INBOX_READ",
                "INBOX_WRITE",
                "INBOX_2_0_BETA",
                "INBOX_2_0_BETA_READ",
                "INBOX_2_0_BETA_WRITE",
                "INBOX_FLAG",
                "LISTINGS",
                "LIVE_CHAT",
                "LOCAL_SEO_REPORT",
                "LOCATION_APPROVAL_REQUESTS",
                "LOCATION_GROUP",
                "LOCATION_STATUS_CHANGE",
                "LOCATION_TRANSLATION",
                "LOCATION_READ",
                "LOCATION_WRITE",
                "LOCAL_INVENTORY",
                "MANUAL_LISTINGS",
                "NEAR_ME_CHECK",
                "PHONE_OPTIONAL",
                "POSTING",
                "POSTING_APPROVAL",
                "POSTING_READ",
                "POSTING_TONE_ADJUST",
                "POSTING_WRITE",
                "POSTING_PREVIEW",
                "PRICE_INFO",
                "QR_CODE_GENERATION",
                "RESPONSE_LIBRARY",
                "RESPONSE_LIBRARY_READ",
                "RESPONSE_LIBRARY_WRITE",
                "REVIEW_GENERATION_EMAIL",
                "REVIEW_GENERATION_SMS",
                "REVIEW_GENERATION_CREATE",
                "REVIEW_GENERATION_SEND",
                "LOCATION_APPROVAL",
                "LOCATION_SCHEDULED_UPDATES",
                "SINGLE_SIGN_ON",
                "SOCIAL_ADS",
                "STOREFINDER",
                "STOREFINDER_TRIAL_MODE",
                "LOCATOR_PAGES_BUILDER",
                "STOREFINDER_ANALYTICS",
                "STOREFINDER_GOOGLE",
                "STOREFINDER_MAPBOX",
                "SUPPORT",
                "SUPPRESSION",
                "TRACKING",
                "TRANSACTION_LINKS",
                "TWITTER_INBOX_READ",
                "TWITTER_INBOX_WRITE",
                "TWITTER_POSTING",
                "TWITTER_POSTING_WRITE",
                "UPGRADE",
                "USER_OTHERS_EDIT",
                "USER_SELF_EDIT",
                "UTMS",
                "WEBSITE_WIDGETS",
                "EXPANDED_REVIEWS_RESTAURANT",
                "EXPANDED_REVIEWS_FINANCE",
                "WHATS_APP_MESSAGES",
                "ACCESS_REQUEST_INVITATIONS",
                "AI_BULK_REPLIES"
              ]
            }
          }
        },
        "description": "Features Response Model"
      },
      "FeaturesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/FeaturesResponse"
          }
        }
      },
      "FeedItem": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Action date of the feed item",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "description": "The Feed item type, one of [INTERACTION, TRACKING, LOCATION_EVENT, LISTING_EVENT]",
            "enum": [
              "INTERACTION",
              "TRACKING",
              "LOCATION_EVENT",
              "LISTING_EVENT"
            ]
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Map containing the specific information related to the Feed"
            },
            "description": "A Map containing the specific information related to the Feed"
          }
        },
        "description": "Feed item Model"
      },
      "FeedItemWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/FeedItem"
          }
        }
      },
      "FiltersResponse": {
        "type": "object",
        "properties": {
          "directories": {
            "type": "array",
            "description": "List of directory names",
            "items": {
              "$ref": "#/components/schemas/DirectoryType"
            }
          },
          "countries": {
            "type": "array",
            "description": "List of countriy names",
            "items": {
              "type": "string",
              "enum": [
                "AF",
                "AX",
                "AL",
                "DZ",
                "AS",
                "AD",
                "AO",
                "AI",
                "AQ",
                "AG",
                "AR",
                "AM",
                "AW",
                "AU",
                "AT",
                "AZ",
                "BS",
                "BH",
                "BD",
                "BB",
                "BY",
                "BE",
                "BZ",
                "BJ",
                "BM",
                "BT",
                "BO",
                "BQ",
                "BA",
                "BW",
                "BV",
                "BR",
                "IO",
                "BN",
                "BG",
                "BF",
                "BI",
                "KH",
                "CM",
                "CA",
                "CV",
                "KY",
                "CF",
                "TD",
                "CL",
                "CN",
                "CX",
                "CC",
                "CO",
                "KM",
                "CG",
                "CD",
                "CK",
                "CR",
                "CI",
                "HR",
                "CU",
                "CW",
                "CY",
                "CZ",
                "DK",
                "DJ",
                "DM",
                "DO",
                "EC",
                "EG",
                "SV",
                "GQ",
                "ER",
                "EE",
                "ET",
                "FK",
                "FO",
                "FJ",
                "FI",
                "FR",
                "GF",
                "PF",
                "TF",
                "GA",
                "GM",
                "GE",
                "DE",
                "GH",
                "GI",
                "GR",
                "GL",
                "GD",
                "GP",
                "GU",
                "GT",
                "GG",
                "GN",
                "GW",
                "GY",
                "HT",
                "HM",
                "VA",
                "HN",
                "HK",
                "HU",
                "IS",
                "IN",
                "ID",
                "IR",
                "IQ",
                "IE",
                "IM",
                "IL",
                "IT",
                "JM",
                "JP",
                "JE",
                "JO",
                "KZ",
                "KE",
                "KI",
                "KP",
                "KR",
                "XK",
                "KW",
                "KG",
                "LA",
                "LV",
                "LB",
                "LS",
                "LR",
                "LY",
                "LI",
                "LT",
                "LU",
                "MO",
                "MK",
                "MG",
                "MW",
                "MY",
                "MV",
                "ML",
                "MT",
                "MH",
                "MQ",
                "MR",
                "MU",
                "YT",
                "MX",
                "FM",
                "MD",
                "MC",
                "MN",
                "ME",
                "MS",
                "MA",
                "MZ",
                "MM",
                "NA",
                "NR",
                "NP",
                "NL",
                "NC",
                "NZ",
                "NI",
                "NE",
                "NG",
                "NU",
                "NF",
                "MP",
                "NO",
                "OM",
                "PK",
                "PW",
                "PS",
                "PA",
                "PG",
                "PY",
                "PE",
                "PH",
                "PN",
                "PL",
                "PT",
                "PR",
                "QA",
                "RE",
                "RO",
                "RU",
                "RW",
                "BL",
                "SH",
                "KN",
                "LC",
                "MF",
                "PM",
                "VC",
                "WS",
                "SM",
                "ST",
                "SA",
                "SN",
                "RS",
                "SC",
                "SL",
                "SG",
                "SX",
                "SK",
                "SI",
                "SB",
                "SO",
                "ZA",
                "GS",
                "SS",
                "ES",
                "LK",
                "SD",
                "SR",
                "SJ",
                "SZ",
                "SE",
                "CH",
                "SY",
                "TW",
                "TJ",
                "TZ",
                "TH",
                "TL",
                "TG",
                "TK",
                "TO",
                "TT",
                "TN",
                "TR",
                "TM",
                "TC",
                "TV",
                "UG",
                "UA",
                "AE",
                "UK",
                "US",
                "UM",
                "UY",
                "UZ",
                "VU",
                "VE",
                "VN",
                "VG",
                "VI",
                "WF",
                "EH",
                "YE",
                "ZM",
                "ZW"
              ]
            }
          },
          "businesses": {
            "type": "array",
            "description": "List of business ids and names",
            "items": {
              "$ref": "#/components/schemas/BusinessFiltersResponse"
            }
          },
          "labels": {
            "type": "array",
            "description": "List of labels",
            "items": {
              "type": "string"
            }
          },
          "timeSpans": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TODAY",
                "LAST_7_DAYS",
                "LAST_14_DAYS",
                "LAST_30_DAYS",
                "LAST_90_DAYS",
                "LAST_365_DAYS",
                "ALL_TIME"
              ]
            }
          }
        },
        "description": "Response object containing various filters for data points"
      },
      "FiltersResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/FiltersResponse"
          }
        }
      },
      "GoogleServiceItem": {
        "type": "object",
        "properties": {
          "serviceTypeId": {
            "type": "string",
            "description": "Service Type ID"
          },
          "displayName": {
            "type": "string",
            "description": "Display Name"
          }
        },
        "description": "Google Service"
      },
      "GoogleServicesResponseObject": {
        "type": "object",
        "properties": {
          "googleServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GoogleServiceItem"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "GoogleServicesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/GoogleServicesResponseObject"
          }
        }
      },
      "GoogleVenueDetailsObject": {
        "type": "object",
        "properties": {
          "page": {
            "type": "object"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "GoogleVenueDetailsWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/GoogleVenueDetailsObject"
          }
        }
      },
      "SdkImage": {
        "required": [
          "type",
          "uid",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The uberall unique id for the image",
            "format": "int64"
          },
          "url": {
            "type": "string",
            "description": "Image url"
          },
          "type": {
            "type": "string",
            "description": "The image type, one of [LOGO, MAIN, IMAGE]",
            "enum": [
              "LOGO",
              "MAIN",
              "IMAGE"
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of the image"
          },
          "uid": {
            "type": "string",
            "description": "user identifier of the image"
          }
        }
      },
      "InboxResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "The page number for pagination",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "The number of datapoints to show on each page",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "description": "The total number of datapoints",
            "format": "int64"
          },
          "dataPoints": {
            "type": "array",
            "description": "A list of datapoints (reviews, photos, check-ins ...)",
            "items": {
              "$ref": "#/components/schemas/DataPoint"
            }
          },
          "status": {
            "type": "string",
            "description": "Status indicating whether 'Inbox' is active for the current location. One of ACTIVE INACTIVE",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "ignoredLocations": {
            "type": "array",
            "description": "A list of locations where datapoints are not tracked",
            "items": {
              "type": "integer",
              "description": "A list of locations where datapoints are not tracked",
              "format": "int64"
            }
          }
        },
        "description": "Inbox Response Model"
      },
      "InboxResponseObject": {
        "type": "object",
        "properties": {
          "inbox": {
            "$ref": "#/components/schemas/InboxResponse"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "InboxResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/InboxResponseObject"
          }
        }
      },
      "Insights": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "period": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "count": {
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                }
              }
            },
            "description": "<b>Google:</b>\n<pre>\nBUSINESS_IMPRESSIONS_DESKTOP_MAPS \nBUSINESS_IMPRESSIONS_DESKTOP_SEARCH \nBUSINESS_IMPRESSIONS_MOBILE_MAPS \nBUSINESS_IMPRESSIONS_MOBILE_SEARCH \nBUSINESS_CONVERSATIONS \nBUSINESS_DIRECTION_REQUESTS \nCALL_CLICKS \nWEBSITE_CLICKS \nBUSINESS_BOOKINGS \nBUSINESS_FOOD_ORDERS \nBUSINESS_FOOD_MENU_CLICKS\n</pre>\n\n<b>Deprecated Google Metrics:</b>\n<br>(To be used to fetch historical data)\n<pre>\nQUERIES_DIRECT \nQUERIES_INDIRECT \nVIEWS_MAPS \nVIEWS_SEARCH \nACTIONS_WEBSITE \nACTIONS_PHONE \nACTIONS_DRIVING_DIRECTIONS \nPHOTOS_VIEWS_MERCHANT \nPHOTOS_VIEWS_CUSTOMERS \nLOCAL_POST_VIEWS_SEARCH \nLOCAL_POST_ACTIONS_CALL_TO_ACTION\n</pre>\n\n<b>Facebook:</b>\n<pre>\nPAGE_IMPRESSIONS \nPAGE_CONSUMPTIONS\n</pre>\n\n<b>Bing:</b>\n<pre>\nCLICKS_DESKTOP_CORTANA_CALL \nCLICKS_DESKTOP_CORTANA_DIRECTIONS \nCLICKS_DESKTOP_CORTANA_PHOTOS \nCLICKS_DESKTOP_CORTANA_WEBSITE \nCLICKS_DESKTOP_MAPS_CALL \nCLICKS_DESKTOP_MAPS_DIRECTIONS \nCLICKS_DESKTOP_MAPS_PHOTOS \nCLICKS_DESKTOP_MAPS_WEBSITE \nCLICKS_DESKTOP_SEARCH_PAGE_CALL \nCLICKS_DESKTOP_SEARCH_PAGE_DIRECTIONS \nCLICKS_DESKTOP_SEARCH_PAGE_PHOTOS \nCLICKS_DESKTOP_SEARCH_PAGE_WEBSITE \nCLICKS_MOBILE_CORTANA_CALL\nCLICKS_MOBILE_CORTANA_DIRECTIONS \nCLICKS_MOBILE_CORTANA_PHOTOS \nCLICKS_MOBILE_CORTANA_WEBSITE \nCLICKS_MOBILE_MAPS_CALL \nCLICKS_MOBILE_MAPS_DIRECTIONS\nCLICKS_MOBILE_MAPS_PHOTOS \nCLICKS_MOBILE_MAPS_WEBSITE \nCLICKS_MOBILE_SEARCH_PAGE_CALL \nCLICKS_MOBILE_SEARCH_PAGE_DIRECTIONS \nCLICKS_MOBILE_SEARCH_PAGE_PHOTOS \nCLICKS_MOBILE_SEARCH_PAGE_WEBSITE \nIMPRESSIONS_DESKTOP_CORTANA \nIMPRESSIONS_DESKTOP_MAPS \nIMPRESSIONS_DESKTOP_SEARCH_PAGE \nIMPRESSIONS_MOBILE_CORTANA \nIMPRESSIONS_MOBILE_MAPS \nIMPRESSIONS_MOBILE_SEARCH_PAGE\n</pre>\n<b>Yelp:</b>\n<pre>\nNUM_CALLS \nNUM_DIRECTIONS_AND_MAP_VIEWS \nNUM_PAGE_VIEWS URL_CLICKS\n</pre>"
          },
          "matchedLocationsCount": {
            "type": "integer",
            "description": "The number of locations matching the filter which the insights are returned for",
            "format": "int32"
          }
        },
        "description": "Insights Model"
      },
      "InsightsWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/Insights"
          }
        }
      },
      "KeywordsObject": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "KeywordsWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/KeywordsObject"
          }
        }
      },
      "Label": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Label name as String."
          },
          "adminOnly": {
            "type": "boolean",
            "description": "Permission on label, whether it can be used by admins or everyone."
          }
        },
        "description": "Label"
      },
      "LabelListObject": {
        "type": "object",
        "properties": {
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Label"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "LabelListWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/LabelListObject"
          }
        }
      },
      "LabelsResponse": {
        "type": "object",
        "properties": {
          "labels": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "List of labels"
            }
          }
        },
        "description": "Labels response model"
      },
      "LabelsResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/LabelsResponse"
          }
        }
      },
      "ListDirectoryPagesRequest": {
        "type": "object"
      },
      "ListDirectoryPagesResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "The page number",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "description": "The number of elements in the page",
            "format": "int32"
          },
          "totalSize": {
            "type": "integer",
            "description": "The total number of elements",
            "format": "int64"
          },
          "directoryPages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectoryPageResponse"
            }
          }
        },
        "description": "List Directory Pages Response Model"
      },
      "ListDirectoryPagesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/ListDirectoryPagesResponse"
          }
        }
      },
      "DirectoryType": {
        "type": "string",
        "enum": [
          "FOURSQUARE",
          "UBER",
          "GOOGLE",
          "WAZE",
          "GOOGLE_MAPS",
          "YELP",
          "YELP_API",
          "MEINESTADT",
          "YELLOW_MAP",
          "FOCUS",
          "LOKALEAUSKUNFT",
          "WEB_DE",
          "GMX",
          "ONE_AND_ONE",
          "FREIEAUSKUNFT",
          "POINTOO",
          "NOKIA_HERE",
          "FACEBOOK",
          "TOMTOM",
          "STADTBRANCHENBUCH",
          "CYLEX",
          "UNTERNEHMENSAUSKUNFT",
          "ACOMPIO",
          "BUSINESSBRANCHENBUCH",
          "YALWA",
          "THE_PHONEBOOK",
          "SCOOT",
          "CENTRAL_INDEX",
          "CITIPAGES",
          "ONE_NINE_TWO",
          "ONE_ONE_EIGHT",
          "THE_DAILY_RECORD",
          "THE_EVENING_STANDARD",
          "THE_SCOTSMAN",
          "LIVERPOOL_ECHO",
          "THE_SUN",
          "THE_INDEPENDENT",
          "TOUCH_LOCAL",
          "THE_MIRROR",
          "ANNUAIRE",
          "INFOBEL",
          "US_INFO_COM",
          "GARMIN",
          "FACTUAL",
          "BING",
          "WO_GIBTS_WAS",
          "KOOMIO",
          "ABCLOCAL",
          "YELLBO",
          "JELLOO",
          "GUIDELOCAL",
          "OEFFNUNGSZEITENBUCH",
          "APPLE_MAPS",
          "LOOCAL",
          "REGIONAL_DE",
          "WHERE_TO",
          "TUPALO",
          "GELBE_SEITEN",
          "DAS_OERTLICHE",
          "DIALO",
          "BUNDES_TELEFONBUCH",
          "BRANCHENBUCH_DEUTSCHLAND",
          "MARKTPLATZ_MITTELSTAND",
          "BUSQUEDA_LOCAL",
          "RICERCARE_IMPRESE",
          "PAGES24",
          "NAVMII",
          "AUDI",
          "BMW",
          "MERCEDES",
          "VW",
          "TOYOTA",
          "FORD",
          "FIAT",
          "GM",
          "ETRUSTED",
          "INSTAGRAM",
          "SHOPPING_TIME_NETWORK",
          "CITY_SQUARES",
          "SHOWMELOCAL",
          "LOCALSTACK",
          "CHAMBER_OF_COMMERCE",
          "JUDYS_BOOK",
          "BROWNBOOK",
          "MY_LOCAL_SERVICES",
          "YA_SABE",
          "UNIVISION",
          "AL_DIA_TX",
          "LA_VOZ_TX",
          "CHRON",
          "STATESMAN",
          "PALM_BEACH_POST",
          "MUNDO_HISPANICO",
          "EL_TIEMPO_LATINO",
          "LATINOS_US",
          "HOTFROG",
          "INFO_IS_INFO",
          "MANTA",
          "US_CITY",
          "GO_YELLOW",
          "N49",
          "PRATIQUE",
          "JUSTACOTE",
          "EZLOCAL",
          "ELOCAL",
          "TRUE_LOCAL",
          "START_LOCAL",
          "WOMO",
          "AUSSIE_WEB",
          "YELLOW_PAGES",
          "SUPER_PAGES",
          "WHITE_PAGES",
          "DEX_KNOWS",
          "KAUFDA_MANUAL",
          "I_GLOBAL",
          "BRANCHEN_INFO_MANUAL",
          "GUTE_BANKEN_MANUAL",
          "D_11880_COM_MANUAL",
          "BANKOEFFNUNGSZEITEN_DE_MANUAL",
          "BANK_OEFFNUNGSZEITEN_DE_MANUAL",
          "CYLEX_MANUAL",
          "FINDE_OFFEN_MANUAL",
          "MEIN_PROSPEKT_MANUAL",
          "DAS_SCHNELLE",
          "SENSIS_WHITE_PAGES",
          "SENSIS_TRUE_LOCAL",
          "SENSIS_YELLOW_PAGES",
          "FIND_OPEN",
          "WAND",
          "BELL_CA",
          "GO_LOCAL",
          "MEINUNGSMEISTER",
          "YANDEX",
          "YAHOO_MANUAL",
          "HOLIDAY_CHECK",
          "TRIP_ADVISOR",
          "BONIAL_FR",
          "ZIP_CH",
          "PAGES_JAUNES",
          "YELLOW_PAGES_SINGAPORE",
          "INFOGROUP",
          "WAZE_NEW",
          "UBER_NEW",
          "NEUSTAR",
          "TRUSTPILOT",
          "AUSKUNFT",
          "BAIDU",
          "NEXT_DOOR",
          "MICROSOFT_CORTANA",
          "GOOGLE_ASSISTANT",
          "CBANQUE",
          "ORANGE_118_712",
          "SIRI",
          "HUAWEI",
          "DOCTOR_COM",
          "CARE_DASH",
          "DENTAL_PLANS",
          "DOC_SPOT",
          "HEALTHGRADES",
          "SHARE_CARE",
          "VITALS",
          "WEB_MD",
          "WELLNESS",
          "ZOC_DOC",
          "ZWIVEL",
          "YP_COM_HEALTH",
          "BING_HEALTH",
          "NPPES",
          "RATE_MDS",
          "CITYSEARCH",
          "INSIDER_PAGES",
          "TWITTER",
          "ALEXA",
          "MAP_QUEST",
          "WEBSITE_WIDGETS",
          "ECO_MOVEMENT",
          "GOOGLE_EV",
          "APPLE_EV",
          "TESLA_EV",
          "EUROWAG_EV",
          "OPIS_EV",
          "TOMTOM_EV",
          "HERE_EV",
          "YELLOW_PAGES_CANADA",
          "BBB",
          "UBERALL_SOCIAL_ADS",
          "APPLE_APPS",
          "CONSUMER_AFFAIRS",
          "CREDIT_KARMA",
          "DELIVERY",
          "GLASSDOOR",
          "PLAY_GOOGLE",
          "GRUBHUB",
          "INDEED",
          "LENDING_TREE",
          "MENUISM",
          "OPEN_TABLE",
          "OPEN_TABLE_USA",
          "WALLET_HUB",
          "ZILLOW",
          "ZOMATO",
          "WHATS_APP",
          "FOUR_SCREEN",
          "AND_CHARGE",
          "LINKED_IN"
        ]
      },
      "Listing": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the listing.",
            "format": "int64"
          },
          "type": {
            "description": "The directory where this listing appears.",
            "$ref": "#/components/schemas/DirectoryType"
          },
          "syncStatus": {
            "type": "string",
            "description": "The listing''s sync status.",
            "enum": [
              "IN_SYNC",
              "NOT_IN_SYNC",
              "NOT_FOUND",
              "TECHNICAL_PROBLEMS",
              "NOT_SUPPORTED",
              "NO_ONLINE_LISTING",
              "LINK_ONLY"
            ]
          },
          "claimStatus": {
            "type": "string",
            "description": "Claim status of the listing.",
            "enum": [
              "CLAIMABLE",
              "NOT_CLAIMABLE",
              "CLAIMED_BY_US",
              "CLAIMED_BY_OTHERS",
              "CLAIMED_BY_ANOTHER_US",
              "CLAIMING_IN_PROGRESS",
              "UNKNOWN"
            ]
          },
          "listingId": {
            "type": "string",
            "description": "The listing''s id in the directory''s database."
          },
          "listingUrl": {
            "type": "string",
            "description": "The listing''s URL on the directory''s website."
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "A map containing optional information about the listing",
              "example": "latestVisibilityIndex"
            },
            "description": "A map containing optional information about the listing, e.g. latestVisibilityIndex.",
            "example": "latestVisibilityIndex"
          },
          "lastChecked": {
            "type": "string",
            "description": "The last time the listing was sync-checked.",
            "format": "date-time"
          },
          "lastSuccessfulUpdate": {
            "type": "string",
            "description": "The last time the listing was successfully updated.",
            "format": "date-time"
          },
          "accountInfo": {
            "type": "object",
            "description": "A map consisting of the name and pageId of the connected account if the listing is either Google or Facebook."
          },
          "connectSecret": {
            "type": "string"
          },
          "connectStatus": {
            "type": "string",
            "description": "Connect status of the listing.",
            "enum": [
              "CONNECTED",
              "NOT_CONNECTED",
              "NOT_NEEDED"
            ]
          },
          "mandatoryFields": {
            "type": "array",
            "description": "Mandatory fields for the specific Directory that are not set yet",
            "items": {
              "type": "string",
              "enum": [
                "NAME",
                "NAME_DESCRIPTOR",
                "STREET_NO",
                "STREET",
                "STREET_TYPE",
                "ADDRESS_EXTRA",
                "PROVINCE",
                "ZIP",
                "CITY",
                "COUNTRY",
                "LATITUDE",
                "LONGITUDE",
                "ADDRESS_DISPLAY",
                "SERVICE_AREAS",
                "CATEGORIES",
                "OPENING_DATE",
                "PHONE",
                "CELLPHONE",
                "FAX",
                "WEBSITE",
                "WEBSITE_EXTRA",
                "EMAIL",
                "OPENINGHOURS",
                "OPENINGHOURS_NOTES",
                "SPECIAL_OPENINGHOURS",
                "MORE_HOURS",
                "KEYWORDS",
                "DESCRIPTION_SHORT",
                "DESCRIPTION_LONG",
                "IMPRINT",
                "LEGAL_IDENT",
                "TAX_NUMBER",
                "ATTRIBUTION",
                "IS_PUBLISHED",
                "SOCIAL_PROFILES",
                "ATTRIBUTES",
                "PAYMENT_OPTIONS",
                "BRANDS",
                "LANGUAGES",
                "SERVICES",
                "CONTENT_LISTS",
                "PHOTOS",
                "VIDEOS",
                "SOCIAL_POST",
                "DOCTOR_CATEGORIES",
                "NPI",
                "EV_DATA",
                "TRANSACTION_LINKS",
                "SUBLOCALITY",
                "CUSTOM_FIELDS"
              ]
            }
          },
          "status": {
            "type": "string",
            "description": "The listing''s status.",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "MANUAL"
            ]
          },
          "typeName": {
            "type": "string",
            "description": "The directory''s name in the language of the current locale."
          }
        },
        "description": "Listing"
      },
      "ListingDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the listing details",
            "format": "int64"
          },
          "type": {
            "description": "The directory where this listing appears",
            "$ref": "#/components/schemas/DirectoryType"
          },
          "typeName": {
            "type": "string",
            "description": "Listing type / Publisher name"
          },
          "listingUrl": {
            "type": "string",
            "description": "Listing URL"
          },
          "category": {
            "type": "string",
            "description": "The category of the directory of this listing",
            "example": "social, search"
          },
          "mandatoryFieldsMissing": {
            "type": "array",
            "description": "Mandatory field missing on the location which prevents the data to be submitted to the publisher",
            "items": {
              "type": "string",
              "description": "Mandatory field missing on the location which prevents the data to be submitted to the publisher"
            }
          },
          "directoryContactDetails": {
            "$ref": "#/components/schemas/DirectoryContactDetails"
          },
          "directoryConnectInfo": {
            "$ref": "#/components/schemas/DirectoryConnectInfo"
          },
          "status": {
            "type": "string",
            "description": "Listing Status [SYNCED, SUBMITTED, UPDATING, ACTION_REQUIRED, LINKED]",
            "enum": [
              "SYNCED",
              "SUBMITTED",
              "UPDATING",
              "LINKED",
              "ACTION_REQUIRED"
            ]
          },
          "action": {
            "type": "string",
            "description": "Action Required [CONNECT, VERIFY, CLAIM, ADD_MANDATORY_FIELDS, ACCESS]",
            "enum": [
              "CONNECT",
              "VERIFY",
              "CLAIM",
              "ADD_MANDATORY_FIELDS",
              "ACCESS"
            ]
          }
        },
        "description": "Listing details model"
      },
      "ListingHealth": {
        "type": "object",
        "properties": {
          "countFieldsInSync": {
            "type": "integer",
            "description": "(Deprecated - will always return 0) The number of fields in sync",
            "format": "int32",
            "deprecated": true
          },
          "countListingsInSync": {
            "type": "integer",
            "description": "The number of listings in sync",
            "format": "int32"
          },
          "countListingsSubmitted": {
            "type": "integer",
            "description": "The number of listings in successfully submitted. These listings don''t have live sync checks.",
            "format": "int32"
          },
          "countListingsBeingUpdated": {
            "type": "integer",
            "description": "The number of listings which are in the process of being updated",
            "format": "int32"
          },
          "countListingsLinked": {
            "type": "integer",
            "description": "The number of listings which have been linked. These listings do not get updated.",
            "format": "int32"
          },
          "countListingsActionRequired": {
            "type": "integer",
            "description": "The number of listings where client action is required.",
            "format": "int32"
          },
          "countLocationsRequireSync": {
            "type": "integer",
            "description": "The number of locations which require to be syncronized",
            "format": "int32"
          },
          "countLocationsNeedsReview": {
            "type": "integer",
            "description": "The number of locations which are in needs review.",
            "format": "int32",
            "deprecated": true
          },
          "directoriesMissingConnect": {
            "uniqueItems": true,
            "type": "array",
            "description": "The list of DirectoryType missing connection",
            "deprecated": true,
            "items": {
              "description": "The list of DirectoryType missing connection",
              "deprecated": true,
              "$ref": "#/components/schemas/DirectoryType"
            }
          }
        },
        "description": "ListingHealth Model"
      },
      "ListingHealthWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/ListingHealth"
          }
        }
      },
      "ListingsDetailsResponse": {
        "type": "object",
        "properties": {
          "statistic": {
            "$ref": "#/components/schemas/Statistic"
          },
          "listingsResponse": {
            "type": "array",
            "description": "Detailed response for the listings",
            "items": {
              "$ref": "#/components/schemas/ListingDetails"
            }
          },
          "firstSyncStarted": {
            "type": "string",
            "description": "Date & time the first sync was started on the location.",
            "format": "date-time"
          }
        },
        "description": "Listings details response model"
      },
      "ListingsDetailsResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/ListingsDetailsResponse"
          }
        }
      },
      "Location": {
        "required": [
          "categories",
          "city",
          "country",
          "name",
          "street"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Output only. The uberall unique id for the location",
            "format": "int64"
          },
          "listings": {
            "uniqueItems": true,
            "type": "array",
            "description": "Output only. List of this location''s online listings together with their sync status",
            "items": {
              "$ref": "#/components/schemas/Listing"
            }
          },
          "openingHours": {
            "uniqueItems": true,
            "type": "array",
            "description": "The location''s opening hours: e.g.\n<pre>[ &#123; \n    \"dayOfWeek\": 1,\n    \"closed\": false,\n    \"from1\": \"08:00\",\n    \"to1\": \"11:00\"\n  &#125;, \n  &#123;\n    \"dayOfWeek\": 2,\n    \"closed\": false,\n    \"from1\": \"08:00\",\n    \"to1\": \"11:00\",\n    \"from2\": \"13:00\",\n    \"to2\": \"21:00\"\n  &#125;,\n  &#123;\n    \"dayOfWeek\": 3,\n    \"closed\": true\n  &#125;\n]</pre>\nPlease note that having more than 2 time periods for each day is not possible.",
            "example": [
              {
                "dayOfWeek": 1,
                "closed": false,
                "from1": "08:00",
                "to1": "11:00"
              },
              {
                "dayOfWeek": 2,
                "closed": false,
                "from1": "08:00",
                "to1": "11:00",
                "from2": "13:00",
                "to2": "21:00"
              },
              {
                "dayOfWeek": 3,
                "closed": true
              }
            ],
            "items": {
              "$ref": "#/components/schemas/OpeningHours"
            }
          },
          "specialOpeningHours": {
            "uniqueItems": true,
            "type": "array",
            "description": "The location''s special opening hours: e.g.\n<pre>[ &#123;\n\"date\": \"2017-06-29\",\n\"closed\": true\n&#125;,\n&#123;\n\"date\": \"2017-06-30\",\n\"from1\": \"11:00\",\n\"to1\": \"14:00\",\n\"from2\": 16:00\",\n\"to2\": \"20:00\"\n&#125;\n]</pre>\nPlease note that having more than 2 time periods for each day is not possible.",
            "example": "\n                    [{\n                        \"date\": \"2017-06-29\",\n                        \"closed\": true\n                    },\n                    {\n                        \"date\": \"2017-06-30\",\n                        \"from1\": \"11:00\",\n                        \"to1\": \"14:00\",\n                        \"from2\": 16:00\",\n                        \"to2\": \"20:00\"\n                    }]",
            "items": {
              "$ref": "#/components/schemas/SpecialOpeningHours"
            }
          },
          "name": {
            "type": "string",
            "description": "The location''s name"
          },
          "street": {
            "type": "string",
            "description": "The location''s street address"
          },
          "streetNo": {
            "type": "string",
            "description": "The location''s street number"
          },
          "streetType": {
            "type": "string",
            "description": "Required for Spain. One of ALAMEDA, AVENIDA, CALLE, CAMINO, CARRER, CARRETERA, GLORIETA, KALEA, PASAJE, PASEO, PLACA, PLAZA, RAMBLA, RONDA, RUA, SECTOR, TRAVESERA, TRAVESIA, URBANIZACION",
            "enum": [
              "ALAMEDA",
              "AVENIDA",
              "CALLE",
              "CAMINO",
              "CARRER",
              "CARRETERA",
              "GLORIETA",
              "KALEA",
              "PASAJE",
              "PASEO",
              "PLACA",
              "PLAZA",
              "RAMBLA",
              "RONDA",
              "RUA",
              "SECTOR",
              "TRAVESERA",
              "TRAVESIA",
              "URBANIZACION"
            ]
          },
          "addressExtra": {
            "type": "string",
            "description": "An address extra: e.g. building, floor...",
            "example": "building, floor, ..."
          },
          "zip": {
            "type": "string",
            "description": "Zip code, optional only for some countries."
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "province": {
            "type": "string",
            "description": "Province. Only send when not blank"
          },
          "country": {
            "type": "string",
            "description": "Country of the location",
            "enum": [
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BQ",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "XK",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "NO",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "BL",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "SS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "UK",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          },
          "lat": {
            "type": "number",
            "description": "The latitude coordinate of the location",
            "format": "double"
          },
          "lng": {
            "type": "number",
            "description": "The longitude coordinate of the location",
            "format": "double"
          },
          "addressDisplay": {
            "type": "boolean",
            "description": "Indicates if the address should be displayed or hidden"
          },
          "phone": {
            "type": "string",
            "description": "The location''s contact phone number, a valid phone number has to be provided."
          },
          "fax": {
            "type": "string",
            "description": "The location fax number"
          },
          "cellphone": {
            "type": "string",
            "description": "A contact mobile phone number"
          },
          "website": {
            "type": "string",
            "description": "A valid url for the location''s website (use UTMs to add tracking)"
          },
          "email": {
            "type": "string",
            "description": "A contact email for the location"
          },
          "legalIdent": {
            "type": "string",
            "description": "A legal identifier of the location. SIRET  number in France"
          },
          "taxNumber": {
            "type": "string",
            "description": "The tax number of the location. CIF/NIF in Spain"
          },
          "emailVerification": {
            "type": "string",
            "description": "The locations verification status",
            "enum": [
              "UNVERIFIED",
              "VERIFIED"
            ]
          },
          "descriptionShort": {
            "type": "string",
            "description": "A short description - up to 200 characters, all characters must match this regexp: <pre>[0-9\\p'{'L'}'\\(\\)\\[\\] \\?:;\\/!\\\\,\\.\\-%\\\\&=\\r\\n\\t_\\*§²`´·\"''\\+¡¿@°€£$] </pre>"
          },
          "descriptionLong": {
            "type": "string",
            "description": "A long description - up to 1000 characters, all characters must match this regexp: <pre>[0-9\\p'{'L'}'\\(\\)\\[\\] \\?:;\\/!\\\\,\\.\\-%\\\\&=\\r\\n\\t_\\*§²³`´·\"''\\+¡¿@°€\\^£$] </pre>"
          },
          "imprint": {
            "type": "string",
            "description": "The imprint of the location"
          },
          "openingHoursNotes": {
            "type": "string",
            "description": "Additional info about opening hours: e.g. ''We never open on bank holidays'' - max. 255 characters, all characters must match this regexp: <pre>[0-9\\p'{'L'}'\\(\\)\\[\\] \\?:;\\/!\\\\,\\.\\-%\\\\&\\r\\n\\t_\\*§²`´·\"''\\+¡¿@] </pre>",
            "example": "We never open on bank holidays"
          },
          "keywords": {
            "type": "array",
            "description": "Keywords describing the location's activity",
            "items": {
              "type": "string",
              "description": "Keywords describing the locations activity"
            }
          },
          "labels": {
            "uniqueItems": true,
            "type": "array",
            "description": "Labels grouping similar locations",
            "example": "[''Campaign2018'', ''EastCoast'']",
            "items": {
              "$ref": "#/components/schemas/Label"
            }
          },
          "brands": {
            "type": "array",
            "description": "The brands offered by the location to its customers",
            "items": {
              "type": "string",
              "description": "The brands offered by the location to its customers"
            }
          },
          "paymentOptions": {
            "uniqueItems": true,
            "type": "array",
            "description": "The payment options accepted at the location (eg. cash, bank transfer, ...)",
            "example": [
              "cash",
              "credit card",
              "invoice"
            ],
            "items": {
              "type": "string",
              "description": "The payment options accepted at the location",
              "example": "[\"cash\",\"credit card\",\"invoice\"]"
            }
          },
          "languages": {
            "uniqueItems": true,
            "type": "array",
            "description": "The language(s) in which customers can interact with the location''s staff",
            "items": {
              "type": "string",
              "description": "The language(s) in which customers can interact with the location's staff"
            }
          },
          "categories": {
            "type": "array",
            "description": "Required to start location sync  - A list of category IDs describing the location",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "status": {
            "type": "string",
            "description": "The status of the location. One of:\n<ul><li>ACTIVE - will be synced and renewed</li>\n<li>INACTIVE - will not be synced anymore, claims of listings will be released where possible</li>\n<li>CANCELLED - will be synced, will not be renewed. Once endDate is reached, location will switch to INACTIVE</li>\n<li>CLOSED - location has shut down, we''ll mark listings as permanently closed or remove listings from the internet where permanently closed status is not supported</li></ul>",
            "enum": [
              "CREATED",
              "ACTIVE",
              "INACTIVE",
              "CANCELLED",
              "DELETED",
              "CLOSED"
            ]
          },
          "lastSyncStarted": {
            "type": "string",
            "description": "Output only. Date of the last sync for the location",
            "format": "date-time"
          },
          "identifier": {
            "type": "string",
            "description": "The location identifier based on your internal identification system"
          },
          "photos": {
            "type": "array",
            "description": "The location''s photos",
            "items": {
              "$ref": "#/components/schemas/LocationPhoto"
            }
          },
          "dateCreated": {
            "type": "string",
            "description": "Output only. The date and time the location was created in our database",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "description": "Output only. Date of the last changes made to the location. Includes updates by users, API, location cleansing, and duplicate checks",
            "format": "date-time"
          },
          "autoSync": {
            "type": "boolean",
            "description": "When autosync is set to true, information changed for the location in Uberall will automatically be syncronized to all connected listings without the need to explicitly start a sync again after it''s been started once."
          },
          "openingDate": {
            "type": "string",
            "description": "The date the location will first open. Must be formatted YYYY-MM-DD",
            "format": "date"
          },
          "serviceAreas": {
            "type": "array",
            "description": "Service areas available on the location.",
            "items": {
              "$ref": "#/components/schemas/ServiceArea"
            }
          },
          "callTrackingNumbers": {
            "uniqueItems": true,
            "type": "array",
            "description": "Add call tracking numbers for distribution to Google, Facebook, and Bing. The call tracking numbers must be different from the location''s primary phone number",
            "items": {
              "$ref": "#/components/schemas/CallTrackingNumber"
            }
          },
          "utms": {
            "uniqueItems": true,
            "type": "array",
            "description": "UTM parameter to be appended to the location''s website. Codes can be sent to Google, Facebook, and Bing.",
            "items": {
              "$ref": "#/components/schemas/UTM"
            }
          },
          "transactionLinks": {
            "uniqueItems": true,
            "type": "array",
            "description": "Links that appear on some directories for specific types of customer actions, such as food ordering, appointment setting, and booking reservations. Only available for specific business categories.",
            "items": {
              "$ref": "#/components/schemas/LocationTransactionLink"
            }
          },
          "temporarilyClosed": {
            "$ref": "#/components/schemas/LocationTemporarilyClosed"
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "description": "Output only. List of features available to the location",
            "items": {
              "type": "string",
              "enum": [
                "NEW_PHOTO_TYPES",
                "ADS",
                "ADS_READ",
                "ADS_WRITE",
                "ADVANCED_ANALYTICS",
                "ADVANCED_ANALYTICS_2_0",
                "AI_KNOWLEDGEBASE",
                "AI_LOCALISATION",
                "AI_SUGGESTED_REPLIES",
                "APPLE_POSTING",
                "APPLE_POSTING_WRITE",
                "AUTO_RESPONSE",
                "AUTO_RESPONSE_WRITE",
                "AUTOMATION",
                "BASIC",
                "BASIC_PLUS",
                "BULK_UPDATES",
                "INSTAGRAM_POSTING",
                "INSTAGRAM_POSTING_WRITE",
                "BUSINESS_LEVEL_CONNECT",
                "CALL_TRACKING_NUMBERS",
                "CAN_PAY_INVOICE",
                "CAN_SEE_HELP_SECTION",
                "CHATBOT",
                "CHATBOT_READ",
                "CHATBOT_WRITE",
                "CHAT_READ",
                "CHAT_WRITE",
                "CLEANSING",
                "CONTENT_COLLECTION",
                "DAM",
                "DASHBOARD",
                "ENTERPRISE_ONBOARDING",
                "FACEBOOK_UNOWNED_PAGE_CREATE",
                "FIRST_PARTY_REVIEW_APPROVAL",
                "FORMS",
                "GOOGLE_POSTING",
                "HOMEPAGE",
                "INBOX",
                "INBOX_APPROVAL",
                "INBOX_PREVIEW",
                "INBOX_TEASER",
                "INBOX_TWITTER",
                "INBOX_READ",
                "INBOX_WRITE",
                "INBOX_2_0_BETA",
                "INBOX_2_0_BETA_READ",
                "INBOX_2_0_BETA_WRITE",
                "INBOX_FLAG",
                "LISTINGS",
                "LIVE_CHAT",
                "LOCAL_SEO_REPORT",
                "LOCATION_APPROVAL_REQUESTS",
                "LOCATION_GROUP",
                "LOCATION_STATUS_CHANGE",
                "LOCATION_TRANSLATION",
                "LOCATION_READ",
                "LOCATION_WRITE",
                "LOCAL_INVENTORY",
                "MANUAL_LISTINGS",
                "NEAR_ME_CHECK",
                "PHONE_OPTIONAL",
                "POSTING",
                "POSTING_APPROVAL",
                "POSTING_READ",
                "POSTING_TONE_ADJUST",
                "POSTING_WRITE",
                "POSTING_PREVIEW",
                "PRICE_INFO",
                "QR_CODE_GENERATION",
                "RESPONSE_LIBRARY",
                "RESPONSE_LIBRARY_READ",
                "RESPONSE_LIBRARY_WRITE",
                "REVIEW_GENERATION_EMAIL",
                "REVIEW_GENERATION_SMS",
                "REVIEW_GENERATION_CREATE",
                "REVIEW_GENERATION_SEND",
                "LOCATION_APPROVAL",
                "LOCATION_SCHEDULED_UPDATES",
                "SINGLE_SIGN_ON",
                "SOCIAL_ADS",
                "STOREFINDER",
                "STOREFINDER_TRIAL_MODE",
                "LOCATOR_PAGES_BUILDER",
                "STOREFINDER_ANALYTICS",
                "STOREFINDER_GOOGLE",
                "STOREFINDER_MAPBOX",
                "SUPPORT",
                "SUPPRESSION",
                "TRACKING",
                "TRANSACTION_LINKS",
                "TWITTER_INBOX_READ",
                "TWITTER_INBOX_WRITE",
                "TWITTER_POSTING",
                "TWITTER_POSTING_WRITE",
                "UPGRADE",
                "USER_OTHERS_EDIT",
                "USER_SELF_EDIT",
                "UTMS",
                "WEBSITE_WIDGETS",
                "EXPANDED_REVIEWS_RESTAURANT",
                "EXPANDED_REVIEWS_FINANCE",
                "WHATS_APP_MESSAGES",
                "ACCESS_REQUEST_INVITATIONS",
                "AI_BULK_REPLIES"
              ]
            }
          },
          "nameDescriptor": {
            "type": "string",
            "description": "An addition to the location''s name which gives specific info about the location''s address (e.g. Mall level 2 OR Inside Departures). Sent only to FACEBOOK"
          },
          "evData": {
            "$ref": "#/components/schemas/EvData"
          },
          "customFields": {
            "type": "object",
            "description": "A Map for identifying the value input for a specific custom field name on the location. Custom fields are created at the business level.\n<pre>\n  \"customFields\": [\n    '{'\n      \"name\": \"foo\",\n      \"value\": \"bar\"\n    '}',\n    '{'\n      \"name\": \"baz\",\n      \"value\": \"qux\"\n    '}'\n  ]\n</pre>"
          },
          "services": {
            "type": "array",
            "description": "Services offered at the location. Do not use if Content Collections is enabled. Instead use the Service Item and Collection endpoints",
            "items": {
              "$ref": "#/components/schemas/ServiceItem"
            }
          },
          "activeDirectoriesCount": {
            "type": "integer",
            "description": "Output only. Number of active directories",
            "format": "int32"
          },
          "activeListingsCount": {
            "type": "integer",
            "description": "Output only. Number of active listings",
            "format": "int32"
          },
          "attributes": {
            "type": "array",
            "description": "Google attributes",
            "items": {
              "$ref": "#/components/schemas/AttributeWrapper"
            }
          },
          "businessId": {
            "type": "integer",
            "description": "ID of the business this location is linked to. Mandatory when creating a location. Sending a different ID than the current businessId when updating will lead to changing the business. This is only possible in case all connected accounts (Facebook, Google, …) are compatible. ",
            "format": "int32",
            "example": "1234"
          },
          "cleansingComment": {
            "type": "string",
            "description": "Cleansing comment by user, set only when cleansingStatus is INVALID_DATA.\nPossible Values (ADDRESS_DETAILS_VERIFIED, NAME_ADDRESS_DETAILS_UPDATED, NON_CLOSURE_CONFIRMATION,)",
            "enum": [
              "ADDRESS_DETAILS_VERIFIED",
              "NAME_ADDRESS_DETAILS_UPDATED",
              "NON_CLOSURE_CONFIRMATION"
            ]
          },
          "cleansingInvalidDataReason": {
            "type": "string",
            "description": "Output only. Invalid Cleansing Reason (eg. INCOMPLETE_ADDRESS,ADDRESS_ IS_PO_BOX,ADDRESS_ DOES_NOT_EXIST, LOCATION_IS_CLOSED, INFORMATION_IS_WRONG, LOCATION_IS_MOVED, NON_LATIN_CHARACTERS_ADDRESS, OTHER).\nGuide on how to fix invalid data issues - http://ubr.al/fix_invalid_data"
          },
          "cleansingStatus": {
            "type": "string",
            "description": "Output only. Current cleansing status for the location. Possible values: NOT_CLEANSED, PENDING, CLEANSED, INVALID_DATA",
            "enum": [
              "NOT_CLEANSED",
              "PENDING",
              "CLEANSED",
              "INVALID_DATA"
            ]
          },
          "contentLists": {
            "type": "array",
            "description": "The content list IDs (EVENTS, PRODUCTS, MENU, PEOPLE) describing the location",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "dataPoints": {
            "type": "integer",
            "description": "Output only. Number of dataPoints (reviews, photos) left by users at this location",
            "format": "int32"
          },
          "listingsBeingUpdated": {
            "type": "integer",
            "description": "Output only. Number of listings still being updated",
            "format": "int32"
          },
          "listingsInSync": {
            "type": "integer",
            "description": "Output only. The number of listings in sync",
            "format": "int32"
          },
          "mainPhoto": {
            "$ref": "#/components/schemas/LocationPhoto"
          },
          "missingMandatoryFields": {
            "uniqueItems": true,
            "type": "array",
            "description": "Output only. Compile all the fields that are currently missing but mandatory for some directories. They have to be set in the Location object, so that the Listing can be created / updated on the respective platform. List of Strings, e.g. [NAME, ZIP, PHONE]",
            "items": {
              "type": "string",
              "enum": [
                "NAME",
                "NAME_DESCRIPTOR",
                "STREET_NO",
                "STREET",
                "STREET_TYPE",
                "ADDRESS_EXTRA",
                "PROVINCE",
                "ZIP",
                "CITY",
                "COUNTRY",
                "LATITUDE",
                "LONGITUDE",
                "ADDRESS_DISPLAY",
                "SERVICE_AREAS",
                "CATEGORIES",
                "OPENING_DATE",
                "PHONE",
                "CELLPHONE",
                "FAX",
                "WEBSITE",
                "WEBSITE_EXTRA",
                "EMAIL",
                "OPENINGHOURS",
                "OPENINGHOURS_NOTES",
                "SPECIAL_OPENINGHOURS",
                "MORE_HOURS",
                "KEYWORDS",
                "DESCRIPTION_SHORT",
                "DESCRIPTION_LONG",
                "IMPRINT",
                "LEGAL_IDENT",
                "TAX_NUMBER",
                "ATTRIBUTION",
                "IS_PUBLISHED",
                "SOCIAL_PROFILES",
                "ATTRIBUTES",
                "PAYMENT_OPTIONS",
                "BRANDS",
                "LANGUAGES",
                "SERVICES",
                "CONTENT_LISTS",
                "PHOTOS",
                "VIDEOS",
                "SOCIAL_POST",
                "DOCTOR_CATEGORIES",
                "NPI",
                "EV_DATA",
                "TRANSACTION_LINKS",
                "SUBLOCALITY",
                "CUSTOM_FIELDS"
              ]
            }
          },
          "moreHours": {
            "uniqueItems": true,
            "type": "array",
            "description": "The location''s additional service hours, such as delivery, pickup, happy hours etc. Submitted to Google. e.g.\n<pre>[&#123;\n    \"type\": \"ONLINE_SERVICE_HOURS\",\n    \"hours\": [&#123;\n        \"dayOfWeek\": 1,\n        \"from1\": \"09:00\",\n        \"to1\": \"18:00\"\n    &#125;, &#123;\n        \"dayOfWeek\": 2,\n        \"from1\": \"09:00\",\n        \"to1\": \"13:00\"\n    &#125;]\n&#125;, &#123;\n    \"type\": \"ACCESS\",\n    \"hours\": [&#123;\n        \"dayOfWeek\": 1,\n        \"from1\": \"06:00\",\n        \"to1\": \"20:00\"\n    &#125;]\n&#125;]</pre>",
            "items": {
              "$ref": "#/components/schemas/MoreHoursResponse"
            }
          },
          "profileCompleteness": {
            "type": "integer",
            "description": "Output only. Number representing completeness of location data, up to 100",
            "format": "int32"
          },
          "publishedListingsCount": {
            "type": "integer",
            "description": "Output only. Number of published listings",
            "format": "int32"
          },
          "socialProfiles": {
            "uniqueItems": true,
            "type": "array",
            "description": "The profiles of the location on social and professional networks (FACEBOOK, FOURSQUARE, INSTAGRAM, LINKEDIN, PINTEREST, TWITTER, VIMEO, XING, YOUTUBE)",
            "items": {
              "$ref": "#/components/schemas/SocialProfile"
            }
          },
          "timeZone": {
            "type": "string",
            "description": "The location''s timezone "
          },
          "videos": {
            "type": "array",
            "description": "The location''s videos",
            "items": {
              "$ref": "#/components/schemas/Video"
            }
          },
          "visibilityIndex": {
            "type": "integer",
            "description": "Output only. The location''s latest visibility index",
            "format": "int32"
          },
          "averageRating": {
            "type": "number",
            "description": "The average rating of all Google Reviews",
            "format": "float"
          }
        },
        "description": "Location"
      },
      "LocationDashboardResponse": {
        "type": "object",
        "properties": {
          "stats": {
            "$ref": "#/components/schemas/LocationDashboardStatistics"
          },
          "location": {
            "$ref": "#/components/schemas/DashboardLocation"
          },
          "todos": {
            "type": "object",
            "description": "Todos related to the current location"
          }
        },
        "description": "Location dashboard response model"
      },
      "LocationDashboardResponseObject": {
        "type": "object",
        "properties": {
          "dashboard": {
            "$ref": "#/components/schemas/LocationDashboardResponse"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "LocationDashboardResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/LocationDashboardResponseObject"
          }
        }
      },
      "LocationDashboardStatistics": {
        "type": "object",
        "properties": {
          "activeDirectoriesCount": {
            "type": "integer",
            "description": "Output only. Number of active directories",
            "format": "int32"
          },
          "activeListingsCount": {
            "type": "integer",
            "description": "Output only. Number of active listings",
            "format": "int32"
          },
          "inboxActive": {
            "type": "string",
            "description": "ACTIVE if the inbox feature is included in the plan"
          },
          "inboxTotal": {
            "type": "integer",
            "description": "Total number of datapoints",
            "format": "int32"
          },
          "inboxPhotos": {
            "type": "integer",
            "description": "Number of photo datapoints",
            "format": "int32"
          },
          "inboxReviews": {
            "type": "integer",
            "description": "Number of review datapoints",
            "format": "int32"
          },
          "managersCount": {
            "type": "integer",
            "description": "Number of users that manage this location",
            "format": "int32"
          },
          "profileCompleteness": {
            "type": "integer",
            "description": "Percentage of profile completeness",
            "format": "int32"
          },
          "publishedListingsCount": {
            "type": "integer",
            "description": "Number of managed online listings",
            "format": "int32"
          },
          "synced": {
            "type": "integer",
            "description": "Number of synced listings",
            "format": "int32"
          },
          "visibilityIndex": {
            "$ref": "#/components/schemas/VisibilityIndex"
          },
          "activeDirectories": {
            "type": "array",
            "description": "List of active directories",
            "items": {
              "type": "string",
              "description": "List of active directories"
            }
          },
          "inactiveDirectories": {
            "type": "array",
            "description": "List of inactive directories",
            "items": {
              "type": "string",
              "description": "List of inactive directories"
            }
          },
          "unfilledFields": {
            "type": "array",
            "description": "Unfilled location fields",
            "items": {
              "type": "string",
              "description": "Unfilled location fields"
            }
          }
        },
        "description": "Location dashboard statistics model"
      },
      "LocationFeatureResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the location.",
            "format": "int64"
          },
          "businessId": {
            "type": "integer",
            "description": "Business the location belongs to.",
            "format": "int64"
          },
          "currentFeatures": {
            "type": "array",
            "description": "The features enabled for the location.",
            "items": {
              "type": "string",
              "description": "The features enabled for the location.",
              "enum": [
                "NEW_PHOTO_TYPES",
                "ADS",
                "ADS_READ",
                "ADS_WRITE",
                "ADVANCED_ANALYTICS",
                "ADVANCED_ANALYTICS_2_0",
                "AI_KNOWLEDGEBASE",
                "AI_LOCALISATION",
                "AI_SUGGESTED_REPLIES",
                "APPLE_POSTING",
                "APPLE_POSTING_WRITE",
                "AUTO_RESPONSE",
                "AUTO_RESPONSE_WRITE",
                "AUTOMATION",
                "BASIC",
                "BASIC_PLUS",
                "BULK_UPDATES",
                "INSTAGRAM_POSTING",
                "INSTAGRAM_POSTING_WRITE",
                "BUSINESS_LEVEL_CONNECT",
                "CALL_TRACKING_NUMBERS",
                "CAN_PAY_INVOICE",
                "CAN_SEE_HELP_SECTION",
                "CHATBOT",
                "CHATBOT_READ",
                "CHATBOT_WRITE",
                "CHAT_READ",
                "CHAT_WRITE",
                "CLEANSING",
                "CONTENT_COLLECTION",
                "DAM",
                "DASHBOARD",
                "ENTERPRISE_ONBOARDING",
                "FACEBOOK_UNOWNED_PAGE_CREATE",
                "FIRST_PARTY_REVIEW_APPROVAL",
                "FORMS",
                "GOOGLE_POSTING",
                "HOMEPAGE",
                "INBOX",
                "INBOX_APPROVAL",
                "INBOX_PREVIEW",
                "INBOX_TEASER",
                "INBOX_TWITTER",
                "INBOX_READ",
                "INBOX_WRITE",
                "INBOX_2_0_BETA",
                "INBOX_2_0_BETA_READ",
                "INBOX_2_0_BETA_WRITE",
                "INBOX_FLAG",
                "LISTINGS",
                "LIVE_CHAT",
                "LOCAL_SEO_REPORT",
                "LOCATION_APPROVAL_REQUESTS",
                "LOCATION_GROUP",
                "LOCATION_STATUS_CHANGE",
                "LOCATION_TRANSLATION",
                "LOCATION_READ",
                "LOCATION_WRITE",
                "LOCAL_INVENTORY",
                "MANUAL_LISTINGS",
                "NEAR_ME_CHECK",
                "PHONE_OPTIONAL",
                "POSTING",
                "POSTING_APPROVAL",
                "POSTING_READ",
                "POSTING_TONE_ADJUST",
                "POSTING_WRITE",
                "POSTING_PREVIEW",
                "PRICE_INFO",
                "QR_CODE_GENERATION",
                "RESPONSE_LIBRARY",
                "RESPONSE_LIBRARY_READ",
                "RESPONSE_LIBRARY_WRITE",
                "REVIEW_GENERATION_EMAIL",
                "REVIEW_GENERATION_SMS",
                "REVIEW_GENERATION_CREATE",
                "REVIEW_GENERATION_SEND",
                "LOCATION_APPROVAL",
                "LOCATION_SCHEDULED_UPDATES",
                "SINGLE_SIGN_ON",
                "SOCIAL_ADS",
                "STOREFINDER",
                "STOREFINDER_TRIAL_MODE",
                "LOCATOR_PAGES_BUILDER",
                "STOREFINDER_ANALYTICS",
                "STOREFINDER_GOOGLE",
                "STOREFINDER_MAPBOX",
                "SUPPORT",
                "SUPPRESSION",
                "TRACKING",
                "TRANSACTION_LINKS",
                "TWITTER_INBOX_READ",
                "TWITTER_INBOX_WRITE",
                "TWITTER_POSTING",
                "TWITTER_POSTING_WRITE",
                "UPGRADE",
                "USER_OTHERS_EDIT",
                "USER_SELF_EDIT",
                "UTMS",
                "WEBSITE_WIDGETS",
                "EXPANDED_REVIEWS_RESTAURANT",
                "EXPANDED_REVIEWS_FINANCE",
                "WHATS_APP_MESSAGES",
                "ACCESS_REQUEST_INVITATIONS",
                "AI_BULK_REPLIES"
              ]
            }
          },
          "potentialFeatures": {
            "uniqueItems": true,
            "type": "array",
            "description": "Features that are currently not available for this location, but can potentially be enabled.",
            "items": {
              "type": "string",
              "description": "Features that are currently not available for this location, but can potentially be enabled.",
              "enum": [
                "NEW_PHOTO_TYPES",
                "ADS",
                "ADS_READ",
                "ADS_WRITE",
                "ADVANCED_ANALYTICS",
                "ADVANCED_ANALYTICS_2_0",
                "AI_KNOWLEDGEBASE",
                "AI_LOCALISATION",
                "AI_SUGGESTED_REPLIES",
                "APPLE_POSTING",
                "APPLE_POSTING_WRITE",
                "AUTO_RESPONSE",
                "AUTO_RESPONSE_WRITE",
                "AUTOMATION",
                "BASIC",
                "BASIC_PLUS",
                "BULK_UPDATES",
                "INSTAGRAM_POSTING",
                "INSTAGRAM_POSTING_WRITE",
                "BUSINESS_LEVEL_CONNECT",
                "CALL_TRACKING_NUMBERS",
                "CAN_PAY_INVOICE",
                "CAN_SEE_HELP_SECTION",
                "CHATBOT",
                "CHATBOT_READ",
                "CHATBOT_WRITE",
                "CHAT_READ",
                "CHAT_WRITE",
                "CLEANSING",
                "CONTENT_COLLECTION",
                "DAM",
                "DASHBOARD",
                "ENTERPRISE_ONBOARDING",
                "FACEBOOK_UNOWNED_PAGE_CREATE",
                "FIRST_PARTY_REVIEW_APPROVAL",
                "FORMS",
                "GOOGLE_POSTING",
                "HOMEPAGE",
                "INBOX",
                "INBOX_APPROVAL",
                "INBOX_PREVIEW",
                "INBOX_TEASER",
                "INBOX_TWITTER",
                "INBOX_READ",
                "INBOX_WRITE",
                "INBOX_2_0_BETA",
                "INBOX_2_0_BETA_READ",
                "INBOX_2_0_BETA_WRITE",
                "INBOX_FLAG",
                "LISTINGS",
                "LIVE_CHAT",
                "LOCAL_SEO_REPORT",
                "LOCATION_APPROVAL_REQUESTS",
                "LOCATION_GROUP",
                "LOCATION_STATUS_CHANGE",
                "LOCATION_TRANSLATION",
                "LOCATION_READ",
                "LOCATION_WRITE",
                "LOCAL_INVENTORY",
                "MANUAL_LISTINGS",
                "NEAR_ME_CHECK",
                "PHONE_OPTIONAL",
                "POSTING",
                "POSTING_APPROVAL",
                "POSTING_READ",
                "POSTING_TONE_ADJUST",
                "POSTING_WRITE",
                "POSTING_PREVIEW",
                "PRICE_INFO",
                "QR_CODE_GENERATION",
                "RESPONSE_LIBRARY",
                "RESPONSE_LIBRARY_READ",
                "RESPONSE_LIBRARY_WRITE",
                "REVIEW_GENERATION_EMAIL",
                "REVIEW_GENERATION_SMS",
                "REVIEW_GENERATION_CREATE",
                "REVIEW_GENERATION_SEND",
                "LOCATION_APPROVAL",
                "LOCATION_SCHEDULED_UPDATES",
                "SINGLE_SIGN_ON",
                "SOCIAL_ADS",
                "STOREFINDER",
                "STOREFINDER_TRIAL_MODE",
                "LOCATOR_PAGES_BUILDER",
                "STOREFINDER_ANALYTICS",
                "STOREFINDER_GOOGLE",
                "STOREFINDER_MAPBOX",
                "SUPPORT",
                "SUPPRESSION",
                "TRACKING",
                "TRANSACTION_LINKS",
                "TWITTER_INBOX_READ",
                "TWITTER_INBOX_WRITE",
                "TWITTER_POSTING",
                "TWITTER_POSTING_WRITE",
                "UPGRADE",
                "USER_OTHERS_EDIT",
                "USER_SELF_EDIT",
                "UTMS",
                "WEBSITE_WIDGETS",
                "EXPANDED_REVIEWS_RESTAURANT",
                "EXPANDED_REVIEWS_FINANCE",
                "WHATS_APP_MESSAGES",
                "ACCESS_REQUEST_INVITATIONS",
                "AI_BULK_REPLIES"
              ]
            }
          },
          "limitReached": {
            "uniqueItems": true,
            "type": "array",
            "description": "indicates if location has reached its limit for given set of Features",
            "items": {
              "type": "string",
              "description": "Indicates if location has reached its limit for given set of Features",
              "enum": [
                "NEW_PHOTO_TYPES",
                "ADS",
                "ADS_READ",
                "ADS_WRITE",
                "ADVANCED_ANALYTICS",
                "ADVANCED_ANALYTICS_2_0",
                "AI_KNOWLEDGEBASE",
                "AI_LOCALISATION",
                "AI_SUGGESTED_REPLIES",
                "APPLE_POSTING",
                "APPLE_POSTING_WRITE",
                "AUTO_RESPONSE",
                "AUTO_RESPONSE_WRITE",
                "AUTOMATION",
                "BASIC",
                "BASIC_PLUS",
                "BULK_UPDATES",
                "INSTAGRAM_POSTING",
                "INSTAGRAM_POSTING_WRITE",
                "BUSINESS_LEVEL_CONNECT",
                "CALL_TRACKING_NUMBERS",
                "CAN_PAY_INVOICE",
                "CAN_SEE_HELP_SECTION",
                "CHATBOT",
                "CHATBOT_READ",
                "CHATBOT_WRITE",
                "CHAT_READ",
                "CHAT_WRITE",
                "CLEANSING",
                "CONTENT_COLLECTION",
                "DAM",
                "DASHBOARD",
                "ENTERPRISE_ONBOARDING",
                "FACEBOOK_UNOWNED_PAGE_CREATE",
                "FIRST_PARTY_REVIEW_APPROVAL",
                "FORMS",
                "GOOGLE_POSTING",
                "HOMEPAGE",
                "INBOX",
                "INBOX_APPROVAL",
                "INBOX_PREVIEW",
                "INBOX_TEASER",
                "INBOX_TWITTER",
                "INBOX_READ",
                "INBOX_WRITE",
                "INBOX_2_0_BETA",
                "INBOX_2_0_BETA_READ",
                "INBOX_2_0_BETA_WRITE",
                "INBOX_FLAG",
                "LISTINGS",
                "LIVE_CHAT",
                "LOCAL_SEO_REPORT",
                "LOCATION_APPROVAL_REQUESTS",
                "LOCATION_GROUP",
                "LOCATION_STATUS_CHANGE",
                "LOCATION_TRANSLATION",
                "LOCATION_READ",
                "LOCATION_WRITE",
                "LOCAL_INVENTORY",
                "MANUAL_LISTINGS",
                "NEAR_ME_CHECK",
                "PHONE_OPTIONAL",
                "POSTING",
                "POSTING_APPROVAL",
                "POSTING_READ",
                "POSTING_TONE_ADJUST",
                "POSTING_WRITE",
                "POSTING_PREVIEW",
                "PRICE_INFO",
                "QR_CODE_GENERATION",
                "RESPONSE_LIBRARY",
                "RESPONSE_LIBRARY_READ",
                "RESPONSE_LIBRARY_WRITE",
                "REVIEW_GENERATION_EMAIL",
                "REVIEW_GENERATION_SMS",
                "REVIEW_GENERATION_CREATE",
                "REVIEW_GENERATION_SEND",
                "LOCATION_APPROVAL",
                "LOCATION_SCHEDULED_UPDATES",
                "SINGLE_SIGN_ON",
                "SOCIAL_ADS",
                "STOREFINDER",
                "STOREFINDER_TRIAL_MODE",
                "LOCATOR_PAGES_BUILDER",
                "STOREFINDER_ANALYTICS",
                "STOREFINDER_GOOGLE",
                "STOREFINDER_MAPBOX",
                "SUPPORT",
                "SUPPRESSION",
                "TRACKING",
                "TRANSACTION_LINKS",
                "TWITTER_INBOX_READ",
                "TWITTER_INBOX_WRITE",
                "TWITTER_POSTING",
                "TWITTER_POSTING_WRITE",
                "UPGRADE",
                "USER_OTHERS_EDIT",
                "USER_SELF_EDIT",
                "UTMS",
                "WEBSITE_WIDGETS",
                "EXPANDED_REVIEWS_RESTAURANT",
                "EXPANDED_REVIEWS_FINANCE",
                "WHATS_APP_MESSAGES",
                "ACCESS_REQUEST_INVITATIONS",
                "AI_BULK_REPLIES"
              ]
            }
          },
          "status": {
            "type": "string",
            "description": "Status of the location",
            "enum": [
              "CREATED",
              "ACTIVE",
              "INACTIVE",
              "CANCELLED",
              "DELETED",
              "CLOSED"
            ]
          }
        },
        "description": "Location Feature Response Model"
      },
      "LocationGroupListResponseModel": {
        "type": "object",
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "LocationGroupListResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/LocationGroupListResponseModel"
          }
        }
      },
      "LocationGroupModel": {
        "type": "object",
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "LocationGroupParams": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the LocationGroup"
          },
          "status": {
            "type": "string",
            "description": "The status of the LocationGroup",
            "enum": [
              "ACTIVE",
              "DELETED"
            ]
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "The locations that should be assigned to the LocationGroup",
              "format": "int64"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "The users that should be assigned to the LocationGroup",
              "format": "int64"
            }
          }
        },
        "description": "LocationGroup parameters model"
      },
      "LocationGroupSearchParams": {
        "type": "object"
      },
      "LocationGroupWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/LocationGroupModel"
          }
        }
      },
      "LocationImport": {
        "type": "object",
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "LocationImportListObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "Offset for the current page",
            "format": "int32",
            "example": 0
          },
          "max": {
            "type": "integer",
            "description": "Maximum number of items per page",
            "format": "int32",
            "example": 10
          },
          "count": {
            "type": "integer",
            "description": "Total count of location imports",
            "format": "int32",
            "example": 100
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationImport"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "LocationImportListWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/LocationImportListObject"
          }
        }
      },
      "LocationManagersCount": {
        "type": "object",
        "properties": {
          "managersCount": {
            "type": "integer",
            "description": "The number of managers managing the location",
            "format": "int32"
          }
        },
        "description": "Location Managers Count Model"
      },
      "LocationManagersCountWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/LocationManagersCount"
          }
        }
      },
      "LocationObject": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "LocationPhoto": {
        "required": [
          "type",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The uberall unique id for the photo",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "description": "A description for the photo - max 255 chars"
          },
          "sourceUrl": {
            "type": "string",
            "description": "The URL to the original photo"
          },
          "identifier": {
            "type": "string",
            "description": "The photo identifier based on your internal identification system"
          },
          "cropOffsetX": {
            "type": "integer",
            "description": "Horizontal pixel offset of the top-left corner of the cropped area [LANDSCAPE photo only]",
            "format": "int32"
          },
          "cropOffsetY": {
            "type": "integer",
            "description": "Vertical pixel offset of the top-left corner of the cropped area [LANDSCAPE photo only]",
            "format": "int32"
          },
          "cropWidth": {
            "type": "integer",
            "description": "Width of the 16:9 cropped area [LANDSCAPE photo only]",
            "format": "int32"
          },
          "cropHeight": {
            "type": "integer",
            "description": "Height of the 16:9 cropped area [LANDSCAPE photo only]",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/LocationPhotoType"
          },
          "order": {
            "type": "integer",
            "description": "Sets the order in which the photos should be shown",
            "format": "int32"
          },
          "dateCreated": {
            "type": "string",
            "description": "The date when the object was created in uberall database",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "description": "Date of the last changes made to the photo",
            "format": "date-time"
          },
          "url": {
            "type": "string",
            "description": "url of the photo"
          },
          "publicUrl": {
            "type": "string",
            "description": "A public url for this photo"
          },
          "thumbnailUrl": {
            "type": "string",
            "description": "Url for the image thumbnail"
          }
        },
        "description": "Location Photo"
      },
      "LocationPhotoResponse": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The uberall unique id for the photo",
            "format": "int64"
          },
          "dateCreated": {
            "type": "string",
            "description": "The date when the object was created in uberall database",
            "format": "date-time"
          },
          "repoKey": {
            "type": "string",
            "description": "File name"
          },
          "locationId": {
            "type": "integer",
            "description": "The uberall unique id of this photo''s location",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "description": "A description for the photo"
          },
          "identifier": {
            "type": "string",
            "description": "The photo identifier based on your internal identification system"
          },
          "main": {
            "type": "boolean",
            "description": "A boolean indicating whether this photo is the location''s main photo. Maximum one per location"
          },
          "logo": {
            "type": "boolean",
            "description": "A boolean indicating whether this photo is the location''s logo. Maximum one logo per location"
          },
          "type": {
            "$ref": "#/components/schemas/LocationPhotoType"
          },
          "publicUrl": {
            "type": "string",
            "description": "A public url for this photo"
          },
          "thumbnailUrl": {
            "type": "string",
            "description": "Url for the image thumbnail"
          },
          "cropOffsetX": {
            "type": "integer",
            "description": "Horizontal pixel offset of the top-left corner of the cropped area [LANDSCAPE photo only]",
            "format": "int32"
          },
          "cropOffsetY": {
            "type": "integer",
            "description": "Vertical pixel offset of the top-left corner of the cropped area [LANDSCAPE photo only]",
            "format": "int32"
          },
          "cropWidth": {
            "type": "integer",
            "description": "Width of the 16:9 cropped area [LANDSCAPE photo only]",
            "format": "int32"
          },
          "cropHeight": {
            "type": "integer",
            "description": "Height of the 16:9 cropped area [LANDSCAPE photo only]",
            "format": "int32"
          },
          "sourceUrl": {
            "type": "string",
            "description": "The client supplied url for a photo"
          }
        },
        "description": "Location photo response model"
      },
      "LocationPhotoResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/LocationPhotoResponse"
          }
        }
      },
      "LocationResponse": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "suggestionsForFields": {
            "type": "array",
            "description": "Map containing fields and the suggested values from different directories.",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "Map containing fields and the suggested values from different directories."
              },
              "description": "Map containing fields and the suggested values from different directories."
            }
          },
          "suggestionsForFieldsAvailable": {
            "type": "boolean",
            "description": "true if any suggetions are available"
          }
        },
        "description": "Location Response Model"
      },
      "LocationResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/LocationResponse"
          }
        }
      },
      "LocationSearchParams": {
        "type": "object",
        "description": "LocationSearchParams"
      },
      "LocationSearchResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreFinderResponse"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "LocationSearchResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/LocationSearchResponse"
          }
        }
      },
      "LocationStatisticsResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of locations",
            "format": "int32"
          },
          "countActive": {
            "type": "integer",
            "description": "Number of active locations",
            "format": "int32"
          },
          "countInactive": {
            "type": "integer",
            "description": "Number of inactive locations",
            "format": "int32"
          },
          "countCancelled": {
            "type": "integer",
            "description": "Number of cancelled locations",
            "format": "int32"
          },
          "countClosed": {
            "type": "integer",
            "description": "Number of closed locations",
            "format": "int32"
          },
          "countSyncStarted": {
            "type": "integer",
            "description": "Number of locations where sync has been started",
            "format": "int32"
          },
          "countSyncNotStarted": {
            "type": "integer",
            "description": "Number of locations where sync has not been started",
            "format": "int32"
          },
          "countSyncNeeded": {
            "type": "integer",
            "description": "Number of locations where sync is needed",
            "format": "int32"
          },
          "suggestionsAvailable": {
            "type": "boolean",
            "description": "true if any suggetions are available"
          }
        },
        "description": "Location statistics response model"
      },
      "LocationTask": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the task. The value could be on of [LISTING_FACEBOOK_CONNECTION_MISSING, LISTING_GOOGLE_CONNECTION_MISSING, LISTING_GOOGLE_VERIFICATION_MISSING, LISTING_GOOGLE_PIN_MISSING, LISTING_FIELDS_MISSING, DATAPOINT_UNREPLIED_RECENT, DATAPOINT_UNREAD, DATAPOINT_UNREPLIED_OLD, LOCATION_PROPERTIES_MISSING, LOCATION_ADD_PHOTOS, LOCATION_SOCIAL_POST_MISSING, LOCATION_RICH_DATA_MISSING, LOCATION_ADD_NEW_PHOTOS]",
            "enum": [
              "LOCATION_START_FIRST_SYNC",
              "LOCATION_START_NEW_SYNC",
              "LISTING_FACEBOOK_CONNECTION_MISSING",
              "LISTING_GOOGLE_CONNECTION_MISSING",
              "LISTING_GOOGLE_VERIFICATION_MISSING",
              "LISTING_GOOGLE_PIN_MISSING",
              "LISTING_FIELDS_MISSING",
              "DATAPOINT_UNREPLIED_RECENT",
              "DATAPOINT_UNREAD",
              "DATAPOINT_UNREPLIED_OLD",
              "LOCATION_SUGGESTIONS_PROPERTIES",
              "LOCATION_PROPERTIES_MISSING",
              "LOCATION_SOCIAL_POST_MISSING",
              "LOCATION_RICH_DATA_MISSING",
              "LOCATION_ADD_NEW_PHOTOS"
            ]
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "A map with info related to the specific task"
            },
            "description": "A Map with info related to the specific task"
          },
          "priority": {
            "type": "integer",
            "description": "The priority of the task to be performed on the location. The value is from 1 to 90 and depends on the Task''s type",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "description": "The location id which the next best action refers to",
            "format": "int64"
          }
        },
        "description": "LocationTask Model"
      },
      "LocationTaskWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/LocationTask"
          }
        }
      },
      "LocationTemporarilyClosed": {
        "required": [
          "temporarilyClosed"
        ],
        "type": "object",
        "properties": {
          "temporarilyClosed": {
            "type": "boolean",
            "description": "Locations must have either TRUE or FALSE for this field to indicate if they are temporarily closed (TRUE) or not (FALSE)."
          },
          "reopenDate": {
            "type": "string",
            "description": "Set a re-open date for a temporarily closed location (Format: YYYY-MM-DD). The location will re-open at 12:01am local time. Leave null if the re-open date is unknown."
          }
        },
        "description": "Location Temporarily Closed"
      },
      "LocationTransactionLink": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The deep-link to the page where the customer can facilitate the transaction. This should not be a homepage or location page unless the customer can make their request directly on that page. UTM parameters are not recommended and may be stripped by specific directories."
          },
          "isPreferred": {
            "type": "boolean",
            "description": "Indicates to Google which one url per transaction link type should be set as the preferred flow for customers. Not required, but it is recommended to always flag one url, even if there is only one, as preferred because Google may pull in urls from third party partners."
          }
        },
        "description": "Location Transaction Link"
      },
      "LocationWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/LocationObject"
          }
        }
      },
      "LodgingField": {
        "required": [
          "category",
          "externalId"
        ],
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "The Google external id for each lodging amenity. Examples include: watercraftRental, turndownService, patio"
          },
          "category": {
            "type": "string",
            "description": "High-level grouping of Lodging Amenity types, such as SERVICES, TRANSPORTATION, FAMILIES, etc"
          },
          "displayName": {
            "type": "string",
            "description": "Amenity name as displayed in the UI, available in DE, EN, FR, ES, JA, and FI"
          }
        },
        "description": "Represents a Google hotel lodging field."
      },
      "LodgingFieldResponseObject": {
        "type": "object",
        "properties": {
          "availableLodgingFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LodgingField"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "LodgingFieldResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/LodgingFieldResponseObject"
          }
        }
      },
      "LoggingEvent": {
        "type": "object",
        "description": "Reasons explaining the current visibility index"
      },
      "LoginCommand": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email (email or userId is required)"
          },
          "password": {
            "type": "string",
            "description": "User Password (password or private_key is required)"
          }
        },
        "description": "Login Command"
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Access Token"
          }
        },
        "description": "User access_token "
      },
      "LoginResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/LoginResponse"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "True if logout was successful",
            "example": true
          },
          "redirectUrl": {
            "type": "string",
            "description": "The URL that a user is redirected to when logging out\n",
            "example": "http://example.com/redirect"
          }
        },
        "description": "Details about the LogoutResponse"
      },
      "LogoutResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/LogoutResponse"
          }
        }
      },
      "ResetPassword": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        },
        "description": "Login Command"
      },
      "MenuItem": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title"
          },
          "description": {
            "type": "string",
            "description": "Description of the menu item: e.g. 'With mozzarella, fresh basil and tomatoes'"
          },
          "identifier": {
            "type": "string",
            "description": "Unique Identifier for the Menu"
          },
          "listName": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "description": "The uberall unique id for the menu item",
            "format": "int64"
          },
          "price": {
            "type": "integer",
            "description": "Price of the menu item in cents: e.g. '1500' for 15 €",
            "format": "int32"
          },
          "currency": {
            "type": "object",
            "description": "Currency used for prices in ISO-4217: e.g. EUR, USD, CHF"
          },
          "category": {
            "type": "string",
            "description": "Category or section of the menu item (e.g. Starters, Drinks, Desert, etc.)",
            "example": "Starters, Drinks, Desert, etc."
          },
          "image": {
            "$ref": "#/components/schemas/SdkImage"
          },
          "url": {
            "type": "string",
            "description": "A valid page url with more details about the item"
          },
          "priceMax": {
            "type": "integer",
            "description": "Maximum price if you want to use a price range for the item",
            "format": "int32"
          },
          "caloriesLow": {
            "type": "integer",
            "description": "The lowest possible number of calories for a menu item",
            "format": "int32"
          },
          "caloriesHigh": {
            "type": "integer",
            "description": "The high end of the range of calories for a menu item",
            "format": "int32"
          },
          "allergens": {
            "type": "array",
            "description": "Allergens in the food item (e.g. Eggs, Dairy, Wheat, etc.)",
            "example": "Eggs, Dairy, Wheat, etc.",
            "items": {
              "type": "string",
              "description": "Allergens in the food item",
              "example": "Eggs, Dairy, Wheat, etc."
            }
          },
          "dietaryRestrictions": {
            "type": "array",
            "description": "Restrictive diet the menu item fits into (e.g. Vegetarian, Halal, etc.)",
            "example": "Vegetarian, Halal, etc.",
            "items": {
              "type": "string",
              "description": "Restrictive diet the menu item fits into",
              "example": "Vegetarian, Halal, etc."
            }
          }
        },
        "description": "Menu Item"
      },
      "MenuItemResponseObject": {
        "type": "object",
        "properties": {
          "menuItem": {
            "$ref": "#/components/schemas/MenuItem"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "MenuItemResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/MenuItemResponseObject"
          }
        }
      },
      "MenuItemSearchResponseObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "Offset for pagination",
            "format": "int32",
            "example": 0
          },
          "max": {
            "type": "integer",
            "description": "Maximum number of results per page",
            "format": "int32",
            "example": 10
          },
          "total": {
            "type": "integer",
            "description": "Total count of results",
            "format": "int32",
            "example": 100
          },
          "menuItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuItem"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "MenuItemSearchResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/MenuItemSearchResponseObject"
          }
        }
      },
      "MoreHours": {
        "type": "object",
        "description": "The location's additional service hours, such as delivery, pickup, happy hours etc. Submitted to Google.\n"
      },
      "MoreHoursObject": {
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "type": "integer",
            "description": "The MoreHours dayOfWeek, represented by a number",
            "format": "int32",
            "example": 1
          },
          "from": {
            "type": "string",
            "description": "The MoreHours from as a String",
            "example": "08:00"
          },
          "to": {
            "type": "string",
            "description": "The MoreHours to as a String",
            "example": "18:00"
          }
        },
        "description": "The MoreHours of the given type"
      },
      "MoreHoursResponse": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MoreHoursType"
          },
          "hours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MoreHoursObject"
            }
          }
        }
      },
      "MoreHoursType": {
        "type": "object",
        "description": "The MoreHours type"
      },
      "MoreHoursWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/MoreHoursObject"
          }
        }
      },
      "NextOpen": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "date when the location will be opened; for example \"2018-11-16\" (string) (this parameter is used only if closedNow true and neverOpens false)",
            "format": "date",
            "example": "2018-11-16"
          },
          "dayOfWeek": {
            "type": "string",
            "description": "day of week when the location will be opened; format like OpeningHours: 1 for Monday, 2 for Tuesday, etc (this parameter is used only if closedNow true and neverOpens false)",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "hour": {
            "type": "integer",
            "description": "defines at which time at the date \"date\" the location will be open; for example: \"13:00\" (this parameter is used only if closedNow true and neverOpens false)",
            "format": "int32"
          },
          "closedNow": {
            "type": "boolean",
            "description": "true if the location is closed now; otherwise false"
          },
          "neverOpens": {
            "type": "boolean",
            "description": "true if the location will never open again; otherwise false (this parameter is used only if closedNow true)"
          }
        },
        "description": "Next Open Model"
      },
      "OAuthToken": {
        "type": "object",
        "description": "OAuth token for the page"
      },
      "OpeningHours": {
        "required": [
          "dayOfWeek"
        ],
        "type": "object",
        "properties": {
          "closed": {
            "type": "boolean",
            "description": "Indicates whether a location is closed on a day."
          },
          "dayOfWeek": {
            "type": "integer",
            "description": "The weekday of an opening hours, e.g.: 1 for Monday, 2 for Tuesday, ...",
            "format": "int32"
          },
          "from1": {
            "type": "string",
            "description": "A beginning of a period. One or multiple periods are supported per dayOfWeek, e.g.: \"from1\": \"09:00\", \"from2\": \"15:00\""
          },
          "from2": {
            "type": "string",
            "description": "A beginning of a period. One or multiple periods are supported per dayOfWeek, e.g.: \"from1\": \"09:00\", \"from2\": \"15:00\""
          },
          "to1": {
            "type": "string",
            "description": "An end of a period. One or multiple periods are supported per dayOfWeek, e.g.: \"to1\": \"14:30\", \"to2\": \"17:00\""
          },
          "to2": {
            "type": "string",
            "description": "An end of a period. One or multiple periods are supported per dayOfWeek, e.g.: \"to1\": \"14:30\", \"to2\": \"17:00\""
          }
        },
        "description": "Opening Hours",
        "example": [
          {
            "dayOfWeek": 1,
            "closed": false,
            "from1": "08:00",
            "to1": "11:00"
          },
          {
            "dayOfWeek": 2,
            "closed": false,
            "from1": "08:00",
            "to1": "11:00",
            "from2": "13:00",
            "to2": "21:00"
          },
          {
            "dayOfWeek": 3,
            "closed": true
          }
        ]
      },
      "Person": {
        "required": [
          "name",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The person''s title: e.g. 'Store manager'"
          },
          "description": {
            "type": "string",
            "description": "Description for the person: e.g. 'Responsible for the day-to-day operations of the store'"
          },
          "identifier": {
            "type": "string",
            "description": "Unique Identifier for the Person"
          },
          "listName": {
            "type": "string",
            "description": "Name of the section this person belongs to"
          },
          "id": {
            "type": "integer",
            "description": "The uberall unique id for the person",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "The person''s full name"
          },
          "image": {
            "$ref": "#/components/schemas/SdkImage"
          },
          "url": {
            "type": "string",
            "description": "A valid url of a page with more details about the person"
          }
        },
        "description": "Person"
      },
      "PersonResponseObject": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/Person"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "PersonResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/PersonResponseObject"
          }
        }
      },
      "PersonSearchResponseObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "Offset for pagination",
            "format": "int32",
            "example": 0
          },
          "max": {
            "type": "integer",
            "description": "Maximum number of results per page",
            "format": "int32",
            "example": 10
          },
          "total": {
            "type": "integer",
            "description": "Total count of results",
            "format": "int32",
            "example": 100
          },
          "persons": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "PersonSearchResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/PersonSearchResponseObject"
          }
        }
      },
      "PhotoContainer": {
        "type": "object",
        "properties": {
          "photo": {
            "type": "object",
            "description": "Placeholder to represent photo for a social post which can either be a base64 encoded string or a S3 link for image"
          },
          "description": {
            "type": "string",
            "description": "Description for the social post photo"
          },
          "redirectUrl": {
            "type": "string",
            "description": "The URL that a user is redirected to when clicking the photo"
          }
        },
        "description": "Photo Container Model"
      },
      "PostcodesResponse": {
        "type": "object",
        "properties": {
          "postcodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Response object containing a list of postcodes"
      },
      "PostcodesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/PostcodesResponse"
          }
        }
      },
      "PricePerCountry": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "Country",
            "enum": [
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BQ",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "XK",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "NO",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "BL",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "SS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "UK",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          },
          "price": {
            "type": "integer",
            "description": "Price for the country in cents: e.g. 1500 for 15 €",
            "format": "int32"
          },
          "marketDevelopmentFunds": {
            "type": "integer",
            "description": "Market Development Funds (MDF)",
            "format": "int32",
            "example": 99
          },
          "priceSetup": {
            "type": "integer",
            "description": "Setup fee",
            "format": "int32"
          }
        },
        "description": "Price per country Model"
      },
      "Product": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The name of the product: e.g. Strong Coffee"
          },
          "description": {
            "type": "string",
            "description": "Description of the product: e.g. 'The strongest coffee in the world'"
          },
          "identifier": {
            "type": "string",
            "description": "Unique Identifier for the Product"
          },
          "listName": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "description": "The uberall unique id for the product",
            "format": "int64"
          },
          "price": {
            "type": "integer",
            "description": "Price of the product in cents: e.g. '1500' for 15 €",
            "format": "int32"
          },
          "currency": {
            "type": "object",
            "description": "Currency used for prices in ISO-4217: e.g. EUR, USD, CHF"
          },
          "category": {
            "type": "string",
            "description": "A category the product belongs to: e.g. 'Coffee'",
            "example": "Coffee"
          },
          "video": {
            "$ref": "#/components/schemas/Video"
          },
          "unit": {
            "type": "string",
            "description": "A unit of measure, e.g. 'per kg'",
            "example": "per kg"
          },
          "url": {
            "type": "string",
            "description": "A valid page url with more details about the product"
          },
          "priceMax": {
            "type": "integer",
            "description": "Maximum price if you want to use a price range for the product",
            "format": "int32"
          },
          "image": {
            "$ref": "#/components/schemas/SdkImage"
          }
        },
        "description": "Product Model"
      },
      "ProductObject": {
        "type": "object",
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "ProductPlan": {
        "required": [
          "duration",
          "name"
        ],
        "type": "object",
        "properties": {
          "defaultPlan": {
            "type": "boolean",
            "description": "True, if this is the default ProductPlan. A new created business will get this product plan, if not declared differently."
          },
          "description": {
            "type": "string",
            "description": "Description of the plan"
          },
          "identifier": {
            "type": "string",
            "description": "The Product Plan identifier based on your internal identification system"
          },
          "name": {
            "type": "string",
            "description": "The name of the product plan"
          },
          "status": {
            "type": "string",
            "description": "One among PENDING_APPROVAL, ACTIVE, INACTIVE",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_APPROVAL",
              "DELETED"
            ]
          },
          "automationDirectories": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of directories supported by this plan",
            "items": {
              "description": "List of directories supported by this plan",
              "$ref": "#/components/schemas/DirectoryType"
            }
          },
          "billingPeriod": {
            "type": "integer",
            "description": "Period in months for which the location is billed",
            "format": "int32"
          },
          "countryPrices": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of country specific prices",
            "items": {
              "$ref": "#/components/schemas/PricePerCountry"
            }
          },
          "defaultMarketDevelopmentFunds": {
            "type": "integer",
            "description": "Default Market Development Funds",
            "format": "int32"
          },
          "defaultOriginalPrice": {
            "type": "integer",
            "description": "Default Original Price in cent",
            "format": "int32"
          },
          "defaultPrice": {
            "type": "integer",
            "description": "Mandatory if countryPrices is not populated. Define a global price for the Product Plan that gets applied for all countries",
            "format": "int32"
          },
          "defaultPriceSetup": {
            "type": "integer",
            "description": "Set-up price per location in cent",
            "format": "int32"
          },
          "duration": {
            "type": "integer",
            "description": "Duration of the Product Plan in months",
            "format": "int32"
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of features supported by this plan",
            "items": {
              "type": "string",
              "description": "List of features supported by this plan",
              "enum": [
                "NEW_PHOTO_TYPES",
                "ADS",
                "ADS_READ",
                "ADS_WRITE",
                "ADVANCED_ANALYTICS",
                "ADVANCED_ANALYTICS_2_0",
                "AI_KNOWLEDGEBASE",
                "AI_LOCALISATION",
                "AI_SUGGESTED_REPLIES",
                "APPLE_POSTING",
                "APPLE_POSTING_WRITE",
                "AUTO_RESPONSE",
                "AUTO_RESPONSE_WRITE",
                "AUTOMATION",
                "BASIC",
                "BASIC_PLUS",
                "BULK_UPDATES",
                "INSTAGRAM_POSTING",
                "INSTAGRAM_POSTING_WRITE",
                "BUSINESS_LEVEL_CONNECT",
                "CALL_TRACKING_NUMBERS",
                "CAN_PAY_INVOICE",
                "CAN_SEE_HELP_SECTION",
                "CHATBOT",
                "CHATBOT_READ",
                "CHATBOT_WRITE",
                "CHAT_READ",
                "CHAT_WRITE",
                "CLEANSING",
                "CONTENT_COLLECTION",
                "DAM",
                "DASHBOARD",
                "ENTERPRISE_ONBOARDING",
                "FACEBOOK_UNOWNED_PAGE_CREATE",
                "FIRST_PARTY_REVIEW_APPROVAL",
                "FORMS",
                "GOOGLE_POSTING",
                "HOMEPAGE",
                "INBOX",
                "INBOX_APPROVAL",
                "INBOX_PREVIEW",
                "INBOX_TEASER",
                "INBOX_TWITTER",
                "INBOX_READ",
                "INBOX_WRITE",
                "INBOX_2_0_BETA",
                "INBOX_2_0_BETA_READ",
                "INBOX_2_0_BETA_WRITE",
                "INBOX_FLAG",
                "LISTINGS",
                "LIVE_CHAT",
                "LOCAL_SEO_REPORT",
                "LOCATION_APPROVAL_REQUESTS",
                "LOCATION_GROUP",
                "LOCATION_STATUS_CHANGE",
                "LOCATION_TRANSLATION",
                "LOCATION_READ",
                "LOCATION_WRITE",
                "LOCAL_INVENTORY",
                "MANUAL_LISTINGS",
                "NEAR_ME_CHECK",
                "PHONE_OPTIONAL",
                "POSTING",
                "POSTING_APPROVAL",
                "POSTING_READ",
                "POSTING_TONE_ADJUST",
                "POSTING_WRITE",
                "POSTING_PREVIEW",
                "PRICE_INFO",
                "QR_CODE_GENERATION",
                "RESPONSE_LIBRARY",
                "RESPONSE_LIBRARY_READ",
                "RESPONSE_LIBRARY_WRITE",
                "REVIEW_GENERATION_EMAIL",
                "REVIEW_GENERATION_SMS",
                "REVIEW_GENERATION_CREATE",
                "REVIEW_GENERATION_SEND",
                "LOCATION_APPROVAL",
                "LOCATION_SCHEDULED_UPDATES",
                "SINGLE_SIGN_ON",
                "SOCIAL_ADS",
                "STOREFINDER",
                "STOREFINDER_TRIAL_MODE",
                "LOCATOR_PAGES_BUILDER",
                "STOREFINDER_ANALYTICS",
                "STOREFINDER_GOOGLE",
                "STOREFINDER_MAPBOX",
                "SUPPORT",
                "SUPPRESSION",
                "TRACKING",
                "TRANSACTION_LINKS",
                "TWITTER_INBOX_READ",
                "TWITTER_INBOX_WRITE",
                "TWITTER_POSTING",
                "TWITTER_POSTING_WRITE",
                "UPGRADE",
                "USER_OTHERS_EDIT",
                "USER_SELF_EDIT",
                "UTMS",
                "WEBSITE_WIDGETS",
                "EXPANDED_REVIEWS_RESTAURANT",
                "EXPANDED_REVIEWS_FINANCE",
                "WHATS_APP_MESSAGES",
                "ACCESS_REQUEST_INVITATIONS",
                "AI_BULK_REPLIES"
              ]
            }
          },
          "initialBillingPeriod": {
            "type": "integer",
            "description": "Initial Billing Period",
            "format": "int32"
          },
          "initialDuration": {
            "type": "integer",
            "description": "Initial Duration",
            "format": "int32"
          }
        },
        "description": "Product Plan Model"
      },
      "ProductPlanListResponseObject": {
        "type": "object",
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPlan"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "ProductPlanListResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/ProductPlanListResponseObject"
          }
        }
      },
      "ProductPlanResponseObject": {
        "type": "object",
        "properties": {
          "productPlan": {
            "$ref": "#/components/schemas/ProductPlan"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "ProductPlanResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/ProductPlanResponseObject"
          }
        }
      },
      "ProductSearchObject": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "The total number of results",
            "format": "int32",
            "example": 100
          },
          "offset": {
            "type": "integer",
            "description": "The offset for pagination",
            "format": "int32",
            "example": 0
          },
          "max": {
            "type": "integer",
            "description": "The maximum number of results to return",
            "format": "int32",
            "example": 10
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "ProductSearchWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/ProductSearchObject"
          }
        }
      },
      "ProductWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/ProductObject"
          }
        }
      },
      "ProfileCompleteness": {
        "type": "object",
        "properties": {
          "averageProfileCompleteness": {
            "type": "integer",
            "description": "The average of the profile completeness across the locations managed by the user",
            "format": "int32"
          },
          "locationClassificationCounts": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "description": "The number of locations in each classification",
              "format": "int32"
            },
            "description": "The number of locations in each classification"
          }
        },
        "description": "ProfileCompleteness Model"
      },
      "ProfileCompletenessWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/ProfileCompleteness"
          }
        }
      },
      "ProvincesResponse": {
        "type": "object",
        "properties": {
          "provinces": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "List of provinces",
              "example": "[\"Province1\",\"Province2\"]"
            }
          }
        },
        "description": "Provinces response model"
      },
      "ProvincesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/ProvincesResponse"
          }
        }
      },
      "Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "type": "object",
            "description": "The actual response object of the response, optional for non 200 responses"
          }
        },
        "description": "Formatted Uberall Response"
      },
      "ResponseBusiness": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Business id",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Business name"
          }
        },
        "description": "Response business model"
      },
      "ResponseLocation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Location id",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Location name"
          },
          "business": {
            "$ref": "#/components/schemas/ResponseBusiness"
          }
        },
        "description": "Response Location Model"
      },
      "ResponseTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The Uberall unique id of the template",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "description": "The title of the template"
          },
          "message": {
            "type": "string",
            "description": "The reply''s text of the template"
          },
          "usageCount": {
            "type": "integer",
            "description": "Number of times a template has been used",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "description": "The status of the template"
          },
          "tags": {
            "type": "array",
            "description": "The list of tags for the template",
            "items": {
              "type": "string",
              "description": "The list of tags for the template"
            }
          },
          "dateCreated": {
            "type": "string",
            "description": "The date in which the template was created",
            "format": "date-time"
          },
          "lastEdited": {
            "type": "string",
            "description": "The date in which the template was last edited",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ResponseUser"
          },
          "lastEditedBy": {
            "$ref": "#/components/schemas/ResponseUser"
          },
          "businesses": {
            "type": "array",
            "description": "The list of business ids the templated was created for",
            "items": {
              "$ref": "#/components/schemas/ResponseBusiness"
            }
          }
        },
        "description": "Response Template Model"
      },
      "ResponseTemplateWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/ResponseTemplate"
          }
        }
      },
      "ResponseTemplatesWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "type": "array",
            "description": "The actual response object of the response, optional for non 200 responses",
            "items": {
              "$ref": "#/components/schemas/ResponseTemplate"
            }
          }
        }
      },
      "ResponseUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "User id",
            "format": "int64"
          },
          "firstname": {
            "type": "string",
            "description": "User First Name"
          },
          "lastname": {
            "type": "string",
            "description": "User Last Name"
          }
        },
        "description": "Response User Model"
      },
      "ResponseUsersWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "type": "array",
            "description": "The actual response object of the response, optional for non 200 responses",
            "items": {
              "$ref": "#/components/schemas/ResponseUser"
            }
          }
        }
      },
      "ResponseValue": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string",
            "description": "The review response text"
          },
          "isOpenAI": {
            "type": "boolean",
            "description": "Whether or not the review response was generated with AI"
          }
        },
        "description": "Response Value Model"
      },
      "RuleResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Uniquely identifies this Auto Response Rule",
            "readOnly": true
          },
          "businesses": {
            "type": "array",
            "description": "List of business ids that identify this Auto Response Rule",
            "items": {
              "$ref": "#/components/schemas/ResponseBusiness"
            }
          },
          "locations": {
            "type": "array",
            "description": "List of location ids that identify this Auto Response Rule",
            "items": {
              "$ref": "#/components/schemas/ResponseLocation"
            }
          },
          "excludedLocations": {
            "type": "array",
            "description": "List of location ids that do not identify this Auto Response Rule, even when they might belong to a business that does identify this rule",
            "items": {
              "$ref": "#/components/schemas/ResponseLocation"
            }
          },
          "name": {
            "type": "string",
            "description": "Name for this Auto Response Rule"
          },
          "status": {
            "type": "string",
            "description": "Status of this Auto Response Rule, either ACTIVE or INACTIVE",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DELETED"
            ]
          },
          "triggers": {
            "type": "array",
            "description": "Triggers that apply to this Auto Response Rule, can be ONE_STAR, TWO_STAR, THREE_STAR, FOUR_STAR and/or FIVE_STAR",
            "items": {
              "type": "string",
              "description": "Triggers that apply to this Auto Response Rule, can be ONE_STAR, TWO_STAR, THREE_STAR, FOUR_STAR and/or FIVE_STAR"
            }
          },
          "responses": {
            "type": "array",
            "description": "Possible responses for this Auto Response Rule",
            "items": {
              "$ref": "#/components/schemas/ResponseValue"
            }
          },
          "dateCreated": {
            "type": "string",
            "description": "Date and time of creation",
            "format": "date-time",
            "readOnly": true
          },
          "dateUpdated": {
            "type": "string",
            "description": "Date and time of last update",
            "format": "date-time",
            "readOnly": true
          },
          "canEdit": {
            "type": "boolean",
            "description": "The current user can edit this rule when they have access to all businesses and locations that identify this rule",
            "readOnly": true
          },
          "locationCount": {
            "type": "integer",
            "description": "Count of locations to which this rule applies",
            "format": "int32",
            "readOnly": true
          }
        },
        "description": "Rule Response"
      },
      "RuleResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/RuleResponse"
          }
        }
      },
      "RulesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "type": "array",
            "description": "The actual response object of the response, optional for non 200 responses",
            "items": {
              "$ref": "#/components/schemas/RuleResponse"
            }
          }
        }
      },
      "SalesPartner": {
        "type": "object",
        "properties": {
          "aggregateInvoicesToParent": {
            "type": "boolean",
            "description": "(only used for child SalesPartner) Indicates if the invoice for this SalesPartner should be aggregated to the parent invoice"
          },
          "attribution": {
            "$ref": "#/components/schemas/Attribution"
          },
          "canSeePrices": {
            "type": "boolean",
            "description": "Indicates if the SalesPartner should be allowed to see price information for e.g. product plans"
          },
          "emailCustomerSupport": {
            "type": "string",
            "description": "Customer support email of the SalesPartner"
          },
          "emailProjectLead": {
            "type": "string",
            "description": "Project lead email of the SalesPartner"
          },
          "forceSso": {
            "type": "boolean",
            "description": "If set to true, all users of this SalesPartner will only be allowed to log in our app via the SSO flow. Users cannot be created or updated directly - only via SSO. If set to false and \"isSsoActive\" is set, users can either log in via normal login or SSO"
          },
          "identifier": {
            "type": "string",
            "description": "Identifier for SalesPartner, must be unique for child SalesPartner within parent SalesPartner"
          },
          "minPasswordLength": {
            "type": "integer",
            "description": "Minimum password length",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name"
          },
          "phone": {
            "type": "string",
            "description": "The phone number"
          },
          "preferredLanguage": {
            "type": "object",
            "description": "Preferred language of the SalesPartner, for invoice purpose (either ''de'' oder ''en'')"
          },
          "salesPartnerStatus": {
            "type": "string",
            "description": "SalesPartner status of the SalesPartner (Be aware: Only sending ''INACTIVE'' for child SalesPartner update is allowed)",
            "enum": [
              "CREATED",
              "APPROVED",
              "DECLINED",
              "DELETED",
              "INACTIVE"
            ]
          },
          "whitelistedRedirectUrls": {
            "uniqueItems": true,
            "type": "array",
            "description": "Domains that are allowed to be redirected to upon finalizing a directory connect flow",
            "example": "Domains that are allowed to be redirected to upon finalizing a directory connect flow",
            "items": {
              "type": "string",
              "description": "Domains that are allowed to be redirected to upon finalizing a directory connect flow"
            }
          },
          "isSsoActive": {
            "type": "boolean",
            "description": "If set to true this will activate the single sign-on flow for logging into our app. Note that all more details need to be set before it can be used."
          },
          "type": {
            "type": "string",
            "description": "The type, e.g. STANDARD or CUSTOM",
            "enum": [
              "STANDARD",
              "CUSTOM",
              "ENTERPRISE"
            ]
          },
          "resellerType": {
            "type": "string",
            "description": "Applicable only for Sales Partner type = CUSTOM. Can be one of OEM_RESELLER or STANRAD_RESELLER. Depending on the selection, different reports in Advanced Analytics will be shown.",
            "enum": [
              "OEM_RESELLER",
              "STANDARD_RESELLER"
            ]
          },
          "whitelabelInformations": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of the sales partner''s white-label information",
            "items": {
              "$ref": "#/components/schemas/WhitelabelInformation"
            }
          },
          "activeLocations": {
            "type": "integer",
            "format": "int32"
          },
          "contractualMaxLocations": {
            "type": "integer",
            "format": "int32"
          },
          "contactPerson": {
            "type": "integer",
            "format": "int32"
          },
          "usersLeft": {
            "type": "integer",
            "format": "int32"
          },
          "locationsLeft": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Sales Partner Model"
      },
      "SalesPartnerListResponseObject": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The total count of found children",
            "format": "int32",
            "example": 100
          },
          "pageCount": {
            "type": "integer",
            "description": "The number of children on the current page",
            "format": "int32",
            "example": 10
          },
          "max": {
            "type": "integer",
            "description": "The maximum number of results to return",
            "format": "int32",
            "example": 10
          },
          "offset": {
            "type": "integer",
            "description": "The offset for pagination",
            "format": "int32",
            "example": 0
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesPartnerResponse"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "SalesPartnerListResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/SalesPartnerListResponseObject"
          }
        }
      },
      "SalesPartnerResponse": {
        "type": "object"
      },
      "SalesPartnerSearchParams": {
        "type": "object"
      },
      "SalesPartnerWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/SalesPartnerWrapperObject"
          }
        }
      },
      "SalesPartnerWrapperObject": {
        "type": "object",
        "properties": {
          "salesPartner": {
            "$ref": "#/components/schemas/SalesPartner"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "SearchData": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The uberall unique id",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "The location''s name"
          },
          "street": {
            "type": "string",
            "description": "The location''s street address"
          },
          "streetNo": {
            "type": "string",
            "description": "The location''s street number"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "zip": {
            "type": "string",
            "description": "Zip code"
          },
          "country": {
            "type": "string",
            "description": "Country. One of AT, CH, DE, ES, UK, FR, IT, NL",
            "enum": [
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BQ",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "XK",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "NO",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "BL",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "SS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "UK",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          },
          "token": {
            "type": "string",
            "description": "The token you will need for /api/search/$id"
          }
        },
        "description": "Search Data"
      },
      "SearchDataListObject": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchData"
            }
          },
          "offset": {
            "type": "integer",
            "description": "The offset for pagination",
            "format": "int32",
            "example": 0
          },
          "max": {
            "type": "integer",
            "description": "The maximum number of results to return",
            "format": "int32",
            "example": 10
          },
          "count": {
            "type": "integer",
            "description": "The total count of search data",
            "format": "int32",
            "example": 100
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "SearchDataListWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/SearchDataListObject"
          }
        }
      },
      "SearchDataObject": {
        "type": "object",
        "properties": {
          "searchData": {
            "$ref": "#/components/schemas/SearchData"
          },
          "alreadyManaged": {
            "type": "boolean",
            "description": "Indicates if the search data is already managed",
            "example": true
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "SearchDataWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/SearchDataObject"
          }
        }
      },
      "ServiceArea": {
        "required": [
          "name",
          "placeId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the service area, e.g. Berlin, Deutschland",
            "example": "Berlin, Deutschland"
          },
          "placeId": {
            "type": "string",
            "description": "A unique place id , e.g. ChIJAVkDPzdOqEcRcDteW0YgIQQ, Place IDs uniquely identify a place in the Google Places database and on Google Maps. Please visit https://developers.google.com/places/place-id for more info",
            "example": "ChIJAVkDPzdOqEcRcDteW0YgIQQ"
          }
        },
        "description": "The areas where this location offers service, e.g. useful for food delivery "
      },
      "ServiceItem": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Name of the service item as represented at the location",
            "example": "Strong Coffee"
          },
          "description": {
            "type": "string",
            "description": "A description of the service"
          },
          "identifier": {
            "type": "string",
            "description": "Required - A unique identifier for this service"
          },
          "listName": {
            "type": "string",
            "description": "Name of the section this item belongs to",
            "example": "Weekly menu"
          },
          "price": {
            "type": "integer",
            "description": "Price of the service item",
            "format": "int32"
          },
          "currency": {
            "type": "string",
            "description": "The currency of the price for this service - required when a price is given",
            "enum": [
              "EUR",
              "USD",
              "GBP",
              "CHF",
              "AUD",
              "RUB",
              "JPY",
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BOV",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYR",
              "BZD",
              "CAD",
              "CDF",
              "CHE",
              "CHW",
              "CLF",
              "CLP",
              "CNY",
              "COP",
              "COU",
              "CRC",
              "CUC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "FJD",
              "FKP",
              "GEL",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JMD",
              "JOD",
              "KES",
              "KGS",
              "KHR",
              "KMF",
              "KPW",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LTL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRO",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MXV",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLL",
              "SOS",
              "SRD",
              "SSP",
              "STD",
              "SVC",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USN",
              "UYI",
              "UYU",
              "UZS",
              "VEF",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "XSU",
              "XUA",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL"
            ]
          }
        },
        "description": "Service Item"
      },
      "ServiceItemObject": {
        "type": "object",
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "ServiceItemSearchObject": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "The search query",
            "example": "service"
          },
          "offset": {
            "type": "integer",
            "description": "The offset for pagination",
            "format": "int32",
            "example": 0
          },
          "max": {
            "type": "integer",
            "description": "The maximum number of results to return",
            "format": "int32",
            "example": 10
          },
          "serviceItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceItem"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "ServiceItemSearchWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/ServiceItemSearchObject"
          }
        }
      },
      "ServiceItemWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/ServiceItemObject"
          }
        }
      },
      "SocialPost": {
        "required": [
          "directories",
          "publicationDate",
          "type"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the Social Post. For type QUESTION_AND_ANSWER this is going to be the question."
          },
          "description": {
            "type": "string",
            "description": "The description of the Social Post. For type QUESTION_AND_ANSWER this is going to be the answer."
          },
          "url": {
            "type": "string",
            "description": "A link for the Social Post. This is mandatory for a \"Special Offer\" and should point to a page concerning the offer."
          },
          "type": {
            "type": "string",
            "description": "The type of the Social Post. POST, OFFER, QUESTION_AND_ANSWER, EVENT or ALERT.",
            "enum": [
              "POST",
              "OFFER",
              "ALERT",
              "EVENT",
              "QUESTION_AND_ANSWER",
              "REEL",
              "STORY",
              "CAROUSEL"
            ]
          },
          "alertType": {
            "type": "string",
            "description": "A special type for Google ALERT posts. Possible values are COVID_19.",
            "enum": [
              "COVID_19"
            ]
          },
          "status": {
            "type": "string",
            "description": "The current status of the Social Post (scheduled, active, inactive, deleted, not_published, published, impossible)",
            "enum": [
              "SCHEDULED",
              "APPROVAL_NEEDED",
              "ACTIVE",
              "INACTIVE",
              "DELETED",
              "IMPOSSIBLE",
              "INCOMPLETE",
              "ENDED",
              "REJECTED"
            ]
          },
          "dateStart": {
            "type": "string",
            "description": "The starting date of EVENT and OFFER type Social Posts. It is used to indicate when an EVENT/OFFER will start. For API versions older than 20210804, it is used as publicationDate. ",
            "format": "date-time"
          },
          "dateEnd": {
            "type": "string",
            "description": "The ending date of the Social Post (type=OFFER). The post will be removed from the listings at that date. It also determines when a special offer should end.",
            "format": "date-time"
          },
          "publicationDate": {
            "type": "string",
            "description": "The date on which the Social Post will be published. It is used to schedule posts in the future. Format: YYYY-MM-dd''T''HH:mm:ssXXXXX  (Example: 2007-12-03T10:15:30+01:00)",
            "format": "date-time",
            "example": "2024-06-25T11:01:00Z"
          },
          "isStoreLocator": {
            "type": "boolean",
            "description": "When enabled, the SocialPost will be visible in StoreLocator."
          },
          "timeZone": {
            "type": "string",
            "description": "The timezone in which the Social Post should be created",
            "example": "Europe/Berlin"
          },
          "labels": {
            "uniqueItems": true,
            "type": "array",
            "description": "The list of location labels as entered when creating/updating the Social Post.",
            "example": "[''Campaign2018'', ''EastCoast'']",
            "items": {
              "type": "string",
              "description": "The list of location labels as entered when creating/updating the Social Post"
            }
          },
          "callToActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialPostCallToAction"
            }
          },
          "firstComment": {
            "type": "string",
            "description": "The first comment to be posted after a post creation. Only available for INSTAGRAM"
          },
          "businessIds": {
            "type": "array",
            "description": "The list of location group IDs as entered when creating/updating the Social Post.",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "locationIds": {
            "type": "array",
            "description": "The list of location group IDs as entered when creating/updating the Social Post.",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "listingPageIds": {
            "type": "array",
            "description": "The list of location group IDs as entered when creating/updating the Social Post.",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "businessPageIds": {
            "type": "array",
            "description": "The list of location group IDs as entered when creating/updating the Social Post.",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "excludedLocationIds": {
            "type": "array",
            "description": "The list of location group IDs as entered when creating/updating the Social Post.",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "directories": {
            "type": "array",
            "description": "The video of the social post (can only be one)",
            "items": {
              "type": "string"
            }
          },
          "photos": {
            "type": "array",
            "description": "The social post''s photos",
            "items": {
              "$ref": "#/components/schemas/PhotoContainer"
            }
          },
          "couponCode": {
            "type": "string",
            "description": "A couponCode for redeeming a \"Special Offer\" (SocialPost.type=OFFER). Currently only supported for Google Posts."
          },
          "termsAndConditions": {
            "type": "string",
            "description": "Terms and Conditions for redeeming a \"Special Offer\" (SocialPost.type=OFFER). Currently only supported for Google Posts."
          },
          "locationGroupIds": {
            "type": "array",
            "description": "The list of location group IDs as entered when creating/updating the Social Post.",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "videos": {
            "type": "array",
            "description": "The video of the social post (can only be one)",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "A Social Post is a message for your customers that will be published on some of your listings. This can be a \"News\", a \"Special Offer\" or a \"Question and Answer\"."
      },
      "SocialPostCallToAction": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The url of the call to action."
          },
          "directory": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Social Post Call to Action"
      },
      "SocialPostDirectoriesResponse": {
        "type": "object",
        "properties": {
          "directories": {
            "type": "array",
            "items": {
              "description": "List of directories that are eligible for a post",
              "$ref": "#/components/schemas/DirectoryType"
            }
          },
          "totalLocationsCount": {
            "type": "integer",
            "description": "Total amount of considered directories",
            "format": "int32"
          },
          "directoryWarnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialPostDirectoryWarning"
            }
          },
          "locationWarnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialPostWarning"
            }
          },
          "googleAlertTypes": {
            "type": "array",
            "description": "Currently active types for Google ALERT",
            "items": {
              "type": "string",
              "description": "Currently active types for Google ALERT"
            }
          }
        },
        "description": "Social Post Directories Response Model"
      },
      "SocialPostDirectoriesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/SocialPostDirectoriesResponse"
          }
        }
      },
      "SocialPostDirectoryWarning": {
        "type": "object",
        "description": "List of warnings for directories"
      },
      "SocialPostResponseObject": {
        "type": "object",
        "properties": {
          "socialPost": {
            "$ref": "#/components/schemas/SocialPost"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "SocialPostResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/SocialPostResponseObject"
          }
        }
      },
      "SocialPostTemplate": {
        "required": [
          "directories",
          "type",
          "userId"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the Social Post Template."
          },
          "description": {
            "type": "string",
            "description": "The description of the Social Post Template. It is required if the template has no photos."
          },
          "url": {
            "type": "string",
            "description": "A link for the Social Post Template."
          },
          "type": {
            "type": "string",
            "description": "The type of the Social Post Template. POST, OFFER or QUESTION_AND_ANSWER, EVENT or ALERT.",
            "enum": [
              "POST",
              "OFFER",
              "ALERT",
              "EVENT",
              "QUESTION_AND_ANSWER",
              "REEL",
              "STORY",
              "CAROUSEL"
            ]
          },
          "alertType": {
            "type": "string",
            "description": "Set to COVID_19 if this Social Post Template is a COVID-19 Google Alert Post",
            "enum": [
              "COVID_19"
            ]
          },
          "shared": {
            "type": "boolean",
            "description": "Defines if the Social Post Template is shared or not."
          },
          "isStoreLocator": {
            "type": "boolean",
            "description": "When enabled, the SocialPost will be visible in StoreLocator"
          },
          "callToActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialPostTemplateCallToAction"
            }
          },
          "directories": {
            "type": "array",
            "description": "List of videos (currently only supports one element)",
            "items": {
              "type": "string"
            }
          },
          "photos": {
            "type": "array",
            "description": "The Social Post Template''s photos. It should be a list containing BASE64 converted images or urls of photos from a previous Social Post. It is required if the template has no description.",
            "items": {
              "$ref": "#/components/schemas/PhotoContainer"
            }
          },
          "ownerId": {
            "type": "integer",
            "description": "The id of the user that owns the Social Post Template. (Only informational. If included in the request, it will be ignored.)",
            "format": "int64"
          },
          "ownerName": {
            "type": "string",
            "description": "The name of the user that owns the Social Post Template. (Only informational. If included in the request, it will be ignored.)"
          },
          "userId": {
            "type": "integer",
            "description": "Id of the user that is doing the action",
            "format": "int64"
          },
          "videos": {
            "type": "array",
            "description": "List of videos (currently only supports one element)",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Social Post Template Model"
      },
      "SocialPostTemplateCallToAction": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The url of the call to action."
          },
          "type": {
            "type": "string",
            "description": "The type of the call to action.",
            "enum": [
              "CALL",
              "LEARN_MORE",
              "SIGN_UP",
              "DIRECTIONS",
              "WEBSITE",
              "BOOK_TRAVEL",
              "DOWNLOAD",
              "INSTALL_APP",
              "LISTEN_MUSIC",
              "NO_BUTTON",
              "USE_APP",
              "WATCH_MORE",
              "WATCH_VIDEO",
              "BOOK",
              "ORDER",
              "SHOP"
            ]
          },
          "directory": {
            "type": "string",
            "description": "The directory of the call to action.",
            "enum": [
              "FACEBOOK",
              "GOOGLE",
              "APPLE_MAPS"
            ]
          }
        },
        "description": "Social Post Template Call To Action Model"
      },
      "SocialPostTemplateResponseObject": {
        "type": "object",
        "properties": {
          "socialPostTemplate": {
            "$ref": "#/components/schemas/SocialPostTemplate"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "SocialPostTemplateResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/SocialPostTemplateResponseObject"
          }
        }
      },
      "SocialPostTemplatesResponseObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "Offset for pagination",
            "format": "int32",
            "example": 0
          },
          "max": {
            "type": "integer",
            "description": "Maximum number of results per page",
            "format": "int32",
            "example": 10
          },
          "count": {
            "type": "integer",
            "description": "Count of social post templates",
            "format": "int32",
            "example": 5
          },
          "socialPostTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialPostTemplate"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "SocialPostTemplatesResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/SocialPostTemplatesResponseObject"
          }
        }
      },
      "SocialPostWarning": {
        "type": "object",
        "description": "List of warnings for locations"
      },
      "SocialPostWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/SocialPost"
          }
        }
      },
      "SocialPostsResponseObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "Offset for pagination",
            "format": "int32",
            "example": 0
          },
          "max": {
            "type": "integer",
            "description": "Maximum number of results per page",
            "format": "int32",
            "example": 10
          },
          "count": {
            "type": "integer",
            "description": "Count of social posts",
            "format": "int32",
            "example": 5
          },
          "socialPosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocialPost"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "SocialPostsResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/SocialPostsResponseObject"
          }
        }
      },
      "SocialProfile": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Url of the Social Profile"
          },
          "type": {
            "type": "string",
            "description": "Social Profile Type. Values: [FACEBOOK, LINKEDIN, TWITTER, YOUTUBE, XING, INSTAGRAM, FOURSQUARE, PINTEREST]",
            "enum": [
              "FACEBOOK",
              "LINKEDIN",
              "TWITTER",
              "YOUTUBE",
              "XING",
              "INSTAGRAM",
              "FOURSQUARE",
              "PINTEREST",
              "VIMEO"
            ]
          }
        },
        "description": "Social Profile"
      },
      "SpecialOpeningHours": {
        "required": [
          "date"
        ],
        "type": "object",
        "properties": {
          "closed": {
            "type": "boolean",
            "description": "Indicates whether a location is closed on a date."
          },
          "date": {
            "type": "string",
            "description": "The date of a special opening hour, e.g.: 2017-06-30"
          },
          "from1": {
            "type": "string",
            "description": "A beginning of a period. Up to two periods are supported per date, e.g.: \"from1\": \"09:00\", \"from2\": \"15:00\""
          },
          "from2": {
            "type": "string",
            "description": "A beginning of a period. Up to two periods are supported per date, e.g.: \"from1\": \"09:00\", \"from2\": \"15:00\""
          },
          "to1": {
            "type": "string",
            "description": "An end of a period. Up to two periods are supported per date, e.g.: \"to1\": \"09:00\", \"to2\": \"15:00\""
          },
          "to2": {
            "type": "string",
            "description": "An end of a period. Up to two periods are supported per date, e.g.: \"to1\": \"09:00\", \"to2\": \"15:00\""
          }
        },
        "description": "Special Opening Hours",
        "example": "\n                    [{\n                        \"date\": \"2017-06-29\",\n                        \"closed\": true\n                    },\n                    {\n                        \"date\": \"2017-06-30\",\n                        \"from1\": \"11:00\",\n                        \"to1\": \"14:00\",\n                        \"from2\": 16:00\",\n                        \"to2\": \"20:00\"\n                    }]"
      },
      "Statistic": {
        "type": "object",
        "properties": {
          "totalListings": {
            "type": "integer",
            "description": "Total Listings",
            "format": "int32"
          },
          "countListingsInSync": {
            "type": "integer",
            "description": "Count of Listings in sync",
            "format": "int32"
          },
          "countListingsSubmitted": {
            "type": "integer",
            "description": "Count of Listings where the latest information has been submitted successfully (however the publisher does not have an online verification)",
            "format": "int32"
          },
          "countListingsBeingUpdated": {
            "type": "integer",
            "description": "Count of Listings which are being updated",
            "format": "int32"
          },
          "countListingsLinked": {
            "type": "integer",
            "description": "Count of Listings which we have linked but do not update location data",
            "format": "int32"
          },
          "countListingsActionRequired": {
            "type": "integer",
            "description": "Count of Listings where action is required by the customer",
            "format": "int32"
          }
        },
        "description": "Statistics model"
      },
      "StoreFinderFilters": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "description": "All filters with their possible values, including services",
              "items": {
                "$ref": "#/components/schemas/StoreFinderFiltersFilter"
              }
            },
            "description": "All filters with their possible values, including services"
          }
        },
        "description": "Store Finder Filters Model"
      },
      "StoreFinderFiltersFilter": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "All filters with their possible values, including services"
      },
      "StoreFinderFiltersObject": {
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/StoreFinderFilters"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "StoreFinderFiltersWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/StoreFinderFiltersObject"
          }
        }
      },
      "StoreFinderResponse": {
        "type": "object",
        "properties": {
          "addressExtra": {
            "type": "string",
            "description": "Additional address information, e.g. building, floor, etc.",
            "example": "building, floor, etc."
          },
          "averageRating": {
            "type": "number",
            "description": "The average rating of all Google Reviews",
            "format": "float"
          },
          "brands": {
            "uniqueItems": true,
            "type": "array",
            "description": "The brands offered by the location to its customers",
            "items": {
              "type": "string",
              "description": "The brands offered by the location to its customers"
            }
          },
          "businessId": {
            "type": "integer",
            "description": "The id of the business associated with this location",
            "format": "int64"
          },
          "businessName": {
            "type": "string",
            "description": "Name of the business"
          },
          "businessIdentifier": {
            "type": "string",
            "description": "The business identifier based on your internal identification system"
          },
          "callToActions": {
            "type": "array",
            "description": "A list of callToAction objects, each with a title and URL, formatted as <pre>callToActions: [&#123; text: ''cta_text1'', url: ''cta_url1'' &#125;, &#123; text: ''cta_text2'', url: ''cta_url2'' &#125;]</pre>",
            "items": {
              "$ref": "#/components/schemas/CallToAction"
            }
          },
          "categories": {
            "type": "array",
            "description": "A list of category IDs describing the location",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "cellphone": {
            "type": "string",
            "description": "A contact mobile phone number"
          },
          "city": {
            "type": "string",
            "description": "The city the location is residing in."
          },
          "country": {
            "type": "string",
            "description": "The country the location is residing in.",
            "enum": [
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BQ",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "XK",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "NO",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "BL",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "SS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "UK",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          },
          "customItems": {
            "type": "array",
            "description": "Custom, rich content related specifically to this location (such as company values)",
            "items": {
              "$ref": "#/components/schemas/CustomItem"
            }
          },
          "descriptionLong": {
            "type": "string",
            "description": "A long description - up to 1000 characters"
          },
          "descriptionShort": {
            "type": "string",
            "description": "A short description - up to 200 characters"
          },
          "email": {
            "type": "string",
            "description": "A contact email for the location"
          },
          "events": {
            "type": "array",
            "description": "Events offered by this location",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          },
          "fax": {
            "type": "string",
            "description": "The location fax number"
          },
          "id": {
            "type": "integer",
            "description": "The uberall unique id for the location.",
            "format": "int64"
          },
          "identifier": {
            "type": "string",
            "description": "The location identifier based on your internal identification system."
          },
          "imprint": {
            "type": "string",
            "description": "The imprint of the location"
          },
          "keywords": {
            "type": "array",
            "description": "Keywords describing the locations activity",
            "items": {
              "type": "string",
              "description": "Keywords describing the locations activity"
            }
          },
          "languages": {
            "uniqueItems": true,
            "type": "array",
            "description": "The language(s) in which customers can interact with the location''s staff",
            "items": {
              "type": "string",
              "description": "The language(s) in which customers can interact with the location's staff"
            }
          },
          "lat": {
            "type": "number",
            "description": "The latitude coordinate of the location.",
            "format": "double"
          },
          "lng": {
            "type": "number",
            "description": "The longitude coordinate of the location.",
            "format": "double"
          },
          "menus": {
            "type": "array",
            "description": "Menu items offered by this location",
            "items": {
              "$ref": "#/components/schemas/MenuItem"
            }
          },
          "name": {
            "type": "string",
            "description": "The location''s name."
          },
          "nextOpen": {
            "$ref": "#/components/schemas/NextOpen"
          },
          "openingHours": {
            "uniqueItems": true,
            "type": "array",
            "description": "The location''s opening hours.",
            "items": {
              "$ref": "#/components/schemas/OpeningHours"
            }
          },
          "openingHoursNotes": {
            "type": "string",
            "description": "Additional information about the location''s opening hours."
          },
          "specialOpeningHours": {
            "uniqueItems": true,
            "type": "array",
            "description": "The location''s special opening hours",
            "items": {
              "$ref": "#/components/schemas/SpecialOpeningHours"
            }
          },
          "openNow": {
            "type": "boolean",
            "description": "Shows if the location is currently open."
          },
          "paymentOptions": {
            "uniqueItems": true,
            "type": "array",
            "description": "The payment options accepted at the location (eg. cash, bank transfer, ...)",
            "items": {
              "type": "string",
              "description": "The payment options accepted at the location",
              "example": "cash, bank transfer, ..."
            }
          },
          "people": {
            "type": "array",
            "description": "People associated with this location",
            "items": {
              "$ref": "#/components/schemas/Person"
            }
          },
          "phone": {
            "type": "string",
            "description": "The location''s contact phone number."
          },
          "photos": {
            "uniqueItems": true,
            "type": "array",
            "description": "The location''s photos.",
            "items": {
              "type": "object",
              "description": "The location's photos"
            }
          },
          "products": {
            "type": "array",
            "description": "Products offered by this location",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          },
          "province": {
            "type": "string",
            "description": "The province the location is residing in."
          },
          "reviewCount": {
            "type": "integer",
            "description": "How many Google Reviews this location has in total",
            "format": "int32"
          },
          "reviews": {
            "type": "array",
            "description": "A list of up to five Google Reviews",
            "items": {
              "$ref": "#/components/schemas/StoreFinderReview"
            }
          },
          "services": {
            "type": "array",
            "description": "The services offered by the location (eg. ''catering'' for a restaurant)",
            "items": {
              "$ref": "#/components/schemas/ServiceItem"
            }
          },
          "socialProfiles": {
            "uniqueItems": true,
            "type": "array",
            "description": "The profiles of the location on social and professional networks (FACEBOOK, FOURSQUARE, INSTAGRAM, LINKEDIN, PINTEREST, TWITTER, VIMEO, XING, YOUTUBE)",
            "items": {
              "$ref": "#/components/schemas/SocialProfile"
            }
          },
          "socialPost": {
            "type": "object",
            "description": "Social posts published for this location"
          },
          "streetAndNumber": {
            "type": "string",
            "description": "The location''s street address."
          },
          "taxNumber": {
            "type": "string",
            "description": "The tax number of the location. CIF/NIF in Spain"
          },
          "timezone": {
            "type": "string",
            "description": "The location''s timezone"
          },
          "videos": {
            "uniqueItems": true,
            "type": "array",
            "description": "The location''s videos",
            "items": {
              "$ref": "#/components/schemas/Video"
            }
          },
          "zip": {
            "type": "string",
            "description": "The location''s ZIP code."
          },
          "website": {
            "type": "string",
            "description": "A valid url for the location''s website"
          },
          "googlePlaceId": {
            "type": "string",
            "description": "A unique textual identifier to identify a place in the Google Places database and on Google Maps."
          },
          "street": {
            "type": "string",
            "description": "The location''s street address"
          },
          "streetNo": {
            "type": "string",
            "description": "The location''s street number"
          }
        },
        "description": "This is a response object that is being used in storefinder calls"
      },
      "StoreFinderResponseListObject": {
        "type": "object",
        "properties": {
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreFinderResponse"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "StoreFinderResponseListWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/StoreFinderResponseListObject"
          }
        }
      },
      "StoreFinderResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/StoreFinderResponse"
          }
        }
      },
      "StoreFinderReview": {
        "type": "object",
        "description": "A list of up to five Google Reviews"
      },
      "StringListResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "type": "array",
            "description": "The actual response object of the response, optional for non 200 responses",
            "items": {
              "type": "string",
              "description": "The actual response object of the response, optional for non 200 responses"
            }
          }
        }
      },
      "SubscribableEventTypesObject": {
        "type": "object",
        "properties": {
          "subscribableEventTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "SubscribableEventTypesWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/SubscribableEventTypesObject"
          }
        }
      },
      "SuccessResponseObject": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Success",
            "example": true
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "SuccessResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/SuccessResponseObject"
          }
        }
      },
      "Suggestion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "id of the Suggestion",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "description": "ACCEPTED, DECLINED or ACTIVE (if no decision was made for accepting/declining the suggestion)",
            "enum": [
              "HIDDEN",
              "PENDING",
              "ACCEPTED",
              "DECLINED",
              "DECLINED_OLD_API"
            ]
          },
          "value": {
            "type": "object",
            "description": "Suggestion Value"
          },
          "directory": {
            "description": "Suggestion from directory",
            "$ref": "#/components/schemas/DirectoryType"
          }
        },
        "description": "Suggestion"
      },
      "SuggestionListWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "type": "array",
            "description": "The actual response object of the response, optional for non 200 responses",
            "items": {
              "$ref": "#/components/schemas/Suggestion"
            }
          }
        }
      },
      "SuggestionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of the location",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Name of the location"
          },
          "streetAndNumber": {
            "type": "string",
            "description": "Street and streetNumber of the location"
          },
          "zip": {
            "type": "string",
            "description": "Zip of the location"
          },
          "city": {
            "type": "string",
            "description": "City of the location"
          },
          "country": {
            "type": "string",
            "description": "Country of the location",
            "enum": [
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BQ",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "KH",
              "CM",
              "CA",
              "CV",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "XK",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MK",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MP",
              "NO",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "BL",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "SS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SZ",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "UK",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW"
            ]
          },
          "status": {
            "type": "string",
            "description": "Status of the location",
            "enum": [
              "CREATED",
              "ACTIVE",
              "INACTIVE",
              "CANCELLED",
              "DELETED",
              "CLOSED"
            ]
          },
          "suggestionsForFields": {
            "type": "array",
            "description": "Map containing fields and the suggested values from different directories.",
            "items": {
              "type": "object",
              "description": "Map containing fields and the suggested values from different directories"
            }
          }
        },
        "description": "Suggestion Response Model"
      },
      "SuggestionResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/SuggestionResponse"
          }
        }
      },
      "SuggestionSearchParams": {
        "type": "object"
      },
      "SuggestionSearchResponseObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "Offset for pagination",
            "format": "int32",
            "example": 0
          },
          "max": {
            "type": "integer",
            "description": "Maximum number of results per page",
            "format": "int32",
            "example": 10
          },
          "count": {
            "type": "integer",
            "description": "Total count of results",
            "format": "int32",
            "example": 100
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuggestionResponse"
            }
          }
        },
        "description": "Search response object containing pagination details and a list of suggestion responses"
      },
      "SuggestionSearchResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/SuggestionSearchResponseObject"
          }
        }
      },
      "SuppressedDuplicates": {
        "type": "object",
        "properties": {
          "countByDirectory": {
            "type": "array",
            "description": "A Map with the number of suppressed duplicates divided by DirectoryType",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "A map with the number of suppressed duplicates divided by DirectoryType"
              },
              "description": "A map with the number of suppressed duplicates divided by DirectoryType"
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The total number of suppressed duplicates",
            "format": "int32"
          }
        },
        "description": "SuppressedDuplicates Model"
      },
      "SuppressedDuplicatesWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/SuppressedDuplicates"
          }
        }
      },
      "TimeSeriesSegment": {
        "type": "object",
        "properties": {
          "period": {
            "type": "string",
            "description": "The segment of the whole time period this object represents."
          },
          "value": {
            "type": "number",
            "description": "The value for this segment of the whole period."
          }
        },
        "description": "TimeSeriesSegment Model"
      },
      "UTM": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "string",
            "description": "The UTM parameter that should be appended to the location website url"
          },
          "type": {
            "description": "Google, Facebook, or Bing",
            "$ref": "#/components/schemas/DirectoryType"
          }
        },
        "description": "UTM"
      },
      "UnsubscribeActionLinkObject": {
        "type": "object",
        "properties": {
          "unsubscribeActionLink": {
            "type": "string",
            "description": "The unsubscribe action link"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "UnsubscribeActionLinkWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/UnsubscribeActionLinkObject"
          }
        }
      },
      "UpdateResponseObject": {
        "type": "object",
        "properties": {
          "updatedCount": {
            "type": "integer",
            "description": "Total count of updated items",
            "format": "int32",
            "example": 10
          },
          "failedCount": {
            "type": "integer",
            "description": "Total count of failed items",
            "format": "int32",
            "example": 2
          },
          "missingIdCount": {
            "type": "integer",
            "description": "Total count of missing IDs",
            "format": "int32",
            "example": 1
          },
          "updatedIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "failed": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "UpdateResponseWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/UpdateResponseObject"
          }
        }
      },
      "User": {
        "required": [
          "firstname",
          "lastname",
          "role"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The uberall unique id for the user",
            "format": "int64"
          },
          "salutation": {
            "type": "string",
            "description": "One of MALE, FEMALE or OTHER",
            "enum": [
              "MALE",
              "FEMALE",
              "OTHER"
            ]
          },
          "email": {
            "type": "string",
            "description": "User email"
          },
          "firstname": {
            "type": "string",
            "description": "First Name"
          },
          "lastname": {
            "type": "string",
            "description": "Last name"
          },
          "phone": {
            "type": "string",
            "description": "The user''s phone number"
          },
          "status": {
            "type": "string",
            "description": "The status of the current user. One of CREATED, VERIFIED, UNVERIFIED, INVITED, INACTIVE, NO_LOGIN",
            "enum": [
              "INVITED",
              "CREATED",
              "VERIFIED",
              "UNVERIFIED",
              "INACTIVE",
              "DELETED",
              "NO_LOGIN"
            ]
          },
          "role": {
            "type": "string",
            "description": "User Role",
            "enum": [
              "UBER_API_ADMIN",
              "API_ADMIN",
              "ADMIN",
              "ACCOUNT_MANAGER",
              "BUSINESS_MANAGER",
              "LOCATION_MANAGER",
              "BUSINESS_MANAGER_INBOX"
            ]
          },
          "managedLocations": {
            "uniqueItems": true,
            "type": "array",
            "description": "A list of locations managed by this user",
            "items": {
              "type": "integer"
            }
          },
          "managedBusinesses": {
            "uniqueItems": true,
            "type": "array",
            "description": "A list of business ids managed by this user",
            "items": {
              "type": "number"
            }
          },
          "salesPartner": {
            "$ref": "#/components/schemas/SalesPartner"
          },
          "preferredLanguage": {
            "type": "string",
            "description": "Preferred language of a user. If not set, this will default to the language in context, e.g., location''s for e-mails and browser language for our applications."
          },
          "identifier": {
            "type": "string",
            "description": "The unique user identifier based on your internal identification system"
          },
          "features": {
            "uniqueItems": true,
            "type": "array",
            "description": "A list of features this user can work with. Values: \n<pre>ADS_READ\nADS_WRITE\nADVANCED_ANALYTICS\nAI_SUGGESTED_REPLIES\nAPPLE_POSTING_WRITE\nAUTO_RESPONSE_WRITE\nBULK_UPDATES\nBUSINESS_LEVEL_CONNECT\nCAN_PAY_INVOICE\nCAN_SEE_HELP_SECTION\nCHAT_READ\nCHAT_WRITE\nCHATBOT_READ\nCHATBOT_WRITE\nDAM\nENTERPRISE_ONBOARDING\nFIRST_PARTY_REVIEW_APPROVAL\nFORMS\nINBOX_2_0_BETA_READ\nINBOX_2_0_BETA_WRITE\nINBOX_APPROVAL\nINBOX_READ\nINBOX_WRITE\nINSTAGRAM_POSTING_WRITE\nLISTINGS_PAGE_NEW\nLISTINGS\nLIVE_CHAT\nLOCATION_GROUP\nLOCATION_READ\nLOCATION_SCHEDULED_UPDATES\nLOCATION_STATUS_CHANGE\nLOCATION_WRITE\nPOSTING_APPROVAL\nPOSTING_READ\nPOSTING_WRITE\nPRICE_INFO\nRESPONSE_LIBRARY_READ\nRESPONSE_LIBRARY_WRITE\nREVIEW_GENERATION_CREATE\nREVIEW_GENERATION_SEND\nSINGLE_SIGN_ON\nSOCIAL_ADS\nSUPPRESSION\nTRACKING\nUPGRADE\nUSER_OTHERS_EDIT\nUSER_SELF_EDIT</pre>",
            "items": {
              "type": "string",
              "description": "A list of features this user can work with",
              "enum": [
                "NEW_PHOTO_TYPES",
                "ADS",
                "ADS_READ",
                "ADS_WRITE",
                "ADVANCED_ANALYTICS",
                "ADVANCED_ANALYTICS_2_0",
                "AI_KNOWLEDGEBASE",
                "AI_LOCALISATION",
                "AI_SUGGESTED_REPLIES",
                "APPLE_POSTING",
                "APPLE_POSTING_WRITE",
                "AUTO_RESPONSE",
                "AUTO_RESPONSE_WRITE",
                "AUTOMATION",
                "BASIC",
                "BASIC_PLUS",
                "BULK_UPDATES",
                "INSTAGRAM_POSTING",
                "INSTAGRAM_POSTING_WRITE",
                "BUSINESS_LEVEL_CONNECT",
                "CALL_TRACKING_NUMBERS",
                "CAN_PAY_INVOICE",
                "CAN_SEE_HELP_SECTION",
                "CHATBOT",
                "CHATBOT_READ",
                "CHATBOT_WRITE",
                "CHAT_READ",
                "CHAT_WRITE",
                "CLEANSING",
                "CONTENT_COLLECTION",
                "DAM",
                "DASHBOARD",
                "ENTERPRISE_ONBOARDING",
                "FACEBOOK_UNOWNED_PAGE_CREATE",
                "FIRST_PARTY_REVIEW_APPROVAL",
                "FORMS",
                "GOOGLE_POSTING",
                "HOMEPAGE",
                "INBOX",
                "INBOX_APPROVAL",
                "INBOX_PREVIEW",
                "INBOX_TEASER",
                "INBOX_TWITTER",
                "INBOX_READ",
                "INBOX_WRITE",
                "INBOX_2_0_BETA",
                "INBOX_2_0_BETA_READ",
                "INBOX_2_0_BETA_WRITE",
                "INBOX_FLAG",
                "LISTINGS",
                "LIVE_CHAT",
                "LOCAL_SEO_REPORT",
                "LOCATION_APPROVAL_REQUESTS",
                "LOCATION_GROUP",
                "LOCATION_STATUS_CHANGE",
                "LOCATION_TRANSLATION",
                "LOCATION_READ",
                "LOCATION_WRITE",
                "LOCAL_INVENTORY",
                "MANUAL_LISTINGS",
                "NEAR_ME_CHECK",
                "PHONE_OPTIONAL",
                "POSTING",
                "POSTING_APPROVAL",
                "POSTING_READ",
                "POSTING_TONE_ADJUST",
                "POSTING_WRITE",
                "POSTING_PREVIEW",
                "PRICE_INFO",
                "QR_CODE_GENERATION",
                "RESPONSE_LIBRARY",
                "RESPONSE_LIBRARY_READ",
                "RESPONSE_LIBRARY_WRITE",
                "REVIEW_GENERATION_EMAIL",
                "REVIEW_GENERATION_SMS",
                "REVIEW_GENERATION_CREATE",
                "REVIEW_GENERATION_SEND",
                "LOCATION_APPROVAL",
                "LOCATION_SCHEDULED_UPDATES",
                "SINGLE_SIGN_ON",
                "SOCIAL_ADS",
                "STOREFINDER",
                "STOREFINDER_TRIAL_MODE",
                "LOCATOR_PAGES_BUILDER",
                "STOREFINDER_ANALYTICS",
                "STOREFINDER_GOOGLE",
                "STOREFINDER_MAPBOX",
                "SUPPORT",
                "SUPPRESSION",
                "TRACKING",
                "TRANSACTION_LINKS",
                "TWITTER_INBOX_READ",
                "TWITTER_INBOX_WRITE",
                "TWITTER_POSTING",
                "TWITTER_POSTING_WRITE",
                "UPGRADE",
                "USER_OTHERS_EDIT",
                "USER_SELF_EDIT",
                "UTMS",
                "WEBSITE_WIDGETS",
                "EXPANDED_REVIEWS_RESTAURANT",
                "EXPANDED_REVIEWS_FINANCE",
                "WHATS_APP_MESSAGES",
                "ACCESS_REQUEST_INVITATIONS",
                "AI_BULK_REPLIES"
              ]
            }
          },
          "emailSettings": {
            "uniqueItems": true,
            "type": "array",
            "description": "A list of EmailSettings for this user. Only one EmailSettings object per EmailType possible.",
            "items": {
              "$ref": "#/components/schemas/EmailSettings"
            }
          },
          "featuresDetailed": {
            "type": "object",
            "description": "Map containing the feature names and corresponding feature-specific parameters. \"featuresDetailed\" is supported for the features LOCATION_WRITE and ADVANCED_ANALYTICS. \nFor LOCATION_WRITE a list of fields that this user can update is expected. \nFor ADVANCED_ANALYTICS a list of dashboards the user has access to is expected.\nFor example:\n<pre>\n\"featuresDetailed\": '{'\n'{'\n   \"featuresDetailed\":'{'\n      \"LOCATION_WRITE\":[\n         \"fax\",\n         \"openingHours\",\n         \"callTrackingNumbers\",\n         \"streetNo\",\n         \"openingHoursNotes\",\n         \"specialOpeningHours\",\n         \"street\",\n         \"languages\",\n         \"customFields\",\n         \"contentLists\",\n         \"photos\",\n         \"services\",\n         \"moreHours\",\n         \"descriptionLong\",\n         \"zip\",\n         \"lat\",\n         \"openingDate\",\n         \"email\",\n         \"addressDisplay\",\n         \"labels\",\n         \"taxNumber\",\n         \"city\",\n         \"cellphone\",\n         \"contentCollections\",\n         \"attributes\",\n         \"categories\",\n         \"imprint\",\n         \"phone\",\n         \"utms\",\n         \"addressExtra\",\n         \"keywords\",\n         \"legalIdent\",\n         \"lng\",\n         \"paymentOptions\",\n         \"descriptionShort\",\n         \"socialProfiles\",\n         \"identifier\",\n         \"website\",\n         \"country\",\n         \"province\",\n         \"name\",\n         \"videos\",\n         \"brands\",\n         \"serviceAreas\"\n      ],\n      \"ADVANCED_ANALYTICS\":[\n         \"overview\",\n         \"listings-google\",\n         \"customer-feedback\"\n      ]\n   '}'\n'}'\n</pre>"
          },
          "locationGroupIds": {
            "type": "array",
            "description": "A list of all location IDs the user can manage because of assignment to certain group(s)",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "managedLocationsViaGroups": {
            "type": "array",
            "description": "A list of all location IDs the user can manage because of assignment to certain group(s)",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "whitelabelInformationIdentifier": {
            "type": "string",
            "description": "Mandatory If there is more than one whitelabel for the sales partner</br>\nParameter not provided: If there is only one whitelabel for the sales partner we default to it</br>\nParameter not provided: If a child sales partner does not have whitelabels and the father has only one we default to the father whitelabel</br>"
          }
        },
        "description": "User Model"
      },
      "UserLeftObject": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "usersLeft": {
            "type": "integer",
            "description": "The number of users left",
            "format": "int32",
            "example": 1
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "UserLeftWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/UserLeftObject"
          }
        }
      },
      "UserMissingConnectionWarnings": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "A Map with keys as missingConnection and missingPermission. missingConnection is a Map with list of all connections missing connection.\n        missingPermission is a Map with the list of accounts connected, but missing a required permission for insights."
            },
            "description": "A Map with keys as missingConnection and missingPermission. \nmissingConnection is a Map with list of all connections missing connection. \nmissingPermission is a Map with the list of accounts connected, but missing a required permission for insights."
          },
          "totalItemsCount": {
            "type": "integer",
            "description": "Used for pagination. Total number of results of the request",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "description": "Used for pagination. Maximum number of results per page",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "description": "Offset used for pagination. Default: 0",
            "format": "int32"
          },
          "connectedLocations": {
            "type": "array",
            "description": "A Map with key as directory types and values the number of connected locations",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "A Map with key as directory types and values the number of connected locations"
              },
              "description": "A Map with key as directory types and values the number of connected locations"
            }
          },
          "notConnectedLocations": {
            "type": "array",
            "description": "A Map with key as directory types and values the number of not connected locations",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "A Map with key as directory types and values the number of not connected locations"
              },
              "description": "A Map with key as directory types and values the number of not connected locations"
            }
          }
        },
        "description": "UserMissingConnectionWarnings Model"
      },
      "UserMissingConnectionWarningsWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/UserMissingConnectionWarnings"
          }
        }
      },
      "UserObject": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "UserSearchObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "The offset for pagination",
            "format": "int32",
            "example": 0
          },
          "max": {
            "type": "integer",
            "description": "The maximum number of results to return",
            "format": "int32",
            "example": 10
          },
          "count": {
            "type": "integer",
            "description": "The total count of users",
            "format": "int32",
            "example": 100
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "UserSearchWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/UserSearchObject"
          }
        }
      },
      "UserWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/UserObject"
          }
        }
      },
      "Video": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identifier of the video in our system",
            "format": "int64"
          },
          "url": {
            "type": "string",
            "description": "Url of the video"
          },
          "description": {
            "type": "string",
            "description": "Text description of the Video"
          },
          "type": {
            "type": "string",
            "description": "Video Platform. Values: [YOUTUBE, VIMEO]",
            "enum": [
              "YOUTUBE",
              "VIMEO",
              "UBERALL"
            ]
          }
        },
        "description": "Video"
      },
      "VisibilityIndex": {
        "type": "object",
        "properties": {
          "score": {
            "type": "integer",
            "description": "A score between 0 and 100 for the Visibility Index",
            "format": "int32"
          },
          "maxPoints": {
            "type": "integer",
            "description": "The total number of available points",
            "format": "int32"
          },
          "pointsReached": {
            "type": "integer",
            "description": "The actual number of points reached",
            "format": "int32"
          },
          "summary": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Detailed info about each directory"
            },
            "description": "Detailed info about each directory"
          },
          "reasons": {
            "type": "array",
            "description": "Reasons explaining the current Visibility Index",
            "items": {
              "$ref": "#/components/schemas/LoggingEvent"
            }
          },
          "dateCreated": {
            "type": "string",
            "description": "The date the Visibility Index was created",
            "format": "date-time"
          },
          "forDay": {
            "type": "string",
            "description": "The date the Visibility Index reflects",
            "format": "date-time"
          },
          "result": {
            "type": "string",
            "description": "An overview of in sync/not in sync directories"
          }
        },
        "description": "VisibilityIndex Model"
      },
      "VisibilityIndexObject": {
        "type": "object",
        "properties": {
          "visibilityIndex": {
            "$ref": "#/components/schemas/VisibilityIndex"
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "VisibilityIndexWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/VisibilityIndexObject"
          }
        }
      },
      "VisibilityIndexesObject": {
        "type": "object",
        "properties": {
          "indexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VisibilityIndex"
            }
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "VisibilityIndexesWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/VisibilityIndexesObject"
          }
        }
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "description": "Date of the creation",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "description": "Date of last update",
            "format": "date-time"
          },
          "pushUrl": {
            "type": "string",
            "description": "URL where selected webhook event should be sent to "
          },
          "type": {
            "type": "string",
            "description": "Event type the SalesPartner wants to receive push messages for via webhook functionality. For a list of all possible types use the GET /api/sales-partners/subscribable-event-types.",
            "enum": [
              "ADMIN_ALERT",
              "BRAND_DATA_POINT_REPLIED",
              "BRAND_DATA_POINT_REPLIED_PENDING_APPROVAL",
              "BRAND_DATA_POINT_REPLY_APPROVE",
              "BRAND_DATA_POINT_REPLY_REJECT",
              "BUSINESS_CHAIN_UPDATE",
              "BUSINESS_CHANGED_SALES_PARTNER",
              "BUSINESS_COMMENT",
              "BUSINESS_CREATED",
              "BUSINESS_CSV_EXPORT",
              "BUSINESS_DIRECTORY_ACCOUNT",
              "BUSINESS_DIRECTORY_CONNECT",
              "BUSINESS_DUPLICATE_CHECK",
              "BUSINESS_FACEBOOK_PAGE_INVALIDATE",
              "BUSINESS_INVOICE_CHANGED",
              "BUSINESS_INVOICE_CREATED",
              "BUSINESS_INVOICE_CREATED_ANOTHER_BASIC",
              "BUSINESS_INVOICE_CREATED_ANOTHER_PREMIUM",
              "BUSINESS_INVOICE_CREATED_FIRST_BASIC",
              "BUSINESS_INVOICE_CREATED_FIRST_PREMIUM",
              "BUSINESS_INVOICE_CREATED_RENEWAL",
              "BUSINESS_INVOICE_CREATED_UPGRADE_BASIC",
              "BUSINESS_INVOICE_CREATED_UPGRADE_PREMIUM",
              "BUSINESS_INVOICE_RENEWAL_FAIL",
              "BUSINESS_INVOICE_RENEWAL_SUCCESS",
              "BUSINESS_LOCATION_DATA_PULL",
              "BUSINESS_MIGRATE_LOCATION",
              "BUSINESS_NEW_CHATS",
              "BUSINESS_NEW_CONTACT_FORM",
              "BUSINESS_OLO_IMPORT",
              "BUSINESS_OLO_SETTINGS_CREATED",
              "BUSINESS_OLO_SETTINGS_DELETED",
              "BUSINESS_OLO_SETTINGS_UPDATED",
              "BUSINESS_PAGE_INVALIDATE",
              "BUSINESS_PAY_INVOICE",
              "BUSINESS_PRODUCT_PLAN_CHANGED",
              "BUSINESS_STATUS_CHANGED",
              "BUSINESS_TEMPLATE_UPDATE",
              "BUSINESS_UPDATE_PAGE_SOCIAL_POST",
              "BUSINESS_UPDATE_PRICE",
              "DATA_POINT_AUTOMATED_REPLY",
              "DATA_POINT_REPLIED",
              "DATA_POINT_REPLIED_PENDING_APPROVAL",
              "DATA_POINT_REPLY_APPROVE",
              "DATA_POINT_REPLY_REJECT",
              "DATA_POINT_SERVICE_NOW_SUBMITTED",
              "DIRECTORY_BUSINESS_PAGE_DATA_POINT_CHECK",
              "DIRECTORY_BUSINESS_PAGE_DATA_POINT_INVALID",
              "LISTING_AUTOVALIDATION_FAILED",
              "LISTING_BLACKLIST",
              "LISTING_CANCEL",
              "LISTING_DATAPOINT_CHECK",
              "LISTING_DATAPOINT_INVALID",
              "LISTING_DELETE",
              "LISTING_DIRECTORY_CONNECT",
              "LISTING_DIRECTORY_DUPLICATE_REMOVED",
              "LISTING_FACEBOOK_PAGE_INVALIDATE",
              "LISTING_FEED_CREATE",
              "LISTING_FEED_DUPLICATE_REMOVED",
              "LISTING_FEED_IN_SYNC_FIELDS",
              "LISTING_FLAGGED",
              "LISTING_GOOGLE_PAGE_CREATE",
              "LISTING_GOOGLE_PAGE_INVALIDATE",
              "LISTING_GOOGLE_PAGE_UPDATE",
              "LISTING_INITIATE_OWNERSHIP_TRANSFER",
              "LISTING_INVITATION_SENT",
              "LISTING_LINK_CHANGE",
              "LISTING_MANUAL",
              "LISTING_NEEDS_REVIEW_DELETED",
              "LISTING_PAGE_INVALIDATE",
              "LISTING_PUBLISHER_UPDATE",
              "LISTING_REMOVAL_STATUS_CHECK",
              "LISTING_REMOVAL_SUPPRESS",
              "LISTING_REVIEWED",
              "LISTING_STATUS_CHANGE",
              "LISTING_SUGGESTION",
              "LISTING_SUPPRESS",
              "LISTING_SUPPRESS_NOT_ALLOWED",
              "LISTING_SYNC_CHECK",
              "LISTING_UPDATE",
              "LISTING_UPDATE_PAGE_SOCIAL_POST",
              "LISTING_UPDATE_SOCIAL_POST",
              "LISTING_WAITING_DIRECTORY_ACTION",
              "LOCATION_BILLING",
              "LOCATION_BUSINESS_CHANGED",
              "LOCATION_CHECKOUT",
              "LOCATION_CHECKOUT_FREE",
              "LOCATION_CHECKOUT_SALESPARTNER",
              "LOCATION_CHECKOUT_UPGRADE",
              "LOCATION_CLEANSING",
              "LOCATION_CONTRACT_UPDATED",
              "LOCATION_CREATED",
              "LOCATION_DUPLICATE_LISTING_CHECK",
              "LOCATION_DUPLICATE_LISTING_DETECTION",
              "LOCATION_FEED_CLOSED",
              "LOCATION_FEED_PROFILE_CHANGED",
              "LOCATION_GEOCODING_MANUAL",
              "LOCATION_GOOGLE_RANK_CHECK",
              "LOCATION_GROUP_CREATED",
              "LOCATION_GROUP_DELETED",
              "LOCATION_GROUP_UPDATED",
              "LOCATION_INVOICE_CHANGED",
              "LOCATION_LISTING_ADDED",
              "LOCATION_NEEDS_REVIEW_DELETED",
              "LOCATION_NEW_CHATS",
              "LOCATION_NEW_CONTACT_FORM",
              "LOCATION_NORMALIZATION_STATUS_CHANGED",
              "LOCATION_OLO_IMPORT",
              "LOCATION_PARTIAL_UPDATE",
              "LOCATION_PAY_INVOICE",
              "LOCATION_PROFILE_CHANGED",
              "LOCATION_PROFILE_SUGGESTION_DECLINE",
              "LOCATION_STATUS_CHANGED",
              "LOCATION_SUBSCRIPTION_CHANGED",
              "LOCATION_SUGGESTION_CREATED",
              "LOCATION_SUGGESTION_UPDATED",
              "LOCATION_SYNC_STARTED",
              "LOCATION_VISIBILITY_INDEX_CHANGED",
              "PRODUCT_PLAN_CREATED",
              "PRODUCT_PLAN_DELETED",
              "PRODUCT_PLAN_UPDATED",
              "SALES_PARTNER_APPROVAL",
              "SALES_PARTNER_CHILDREN_UPDATED",
              "SALES_PARTNER_CREATED",
              "SALES_PARTNER_DIRECTORY_BRAND",
              "SALES_PARTNER_DIRECTORY_CONNECT",
              "SALES_PARTNER_ENTERPRISE_ONBOARDING",
              "SALES_PARTNER_INVOICE_CHANGED",
              "SALES_PARTNER_INVOICE_PAYMENT_INFORMATION_CHANGED",
              "SALES_PARTNER_ONE_AND_ONE_AUTHENTICATION",
              "SALES_PARTNER_ONE_AND_ONE_CONTRACT_INFORMATION",
              "SALES_PARTNER_PASSWORD_RESET",
              "SALES_PARTNER_PAYMENT_METHOD_RESET",
              "SALES_PARTNER_PAY_INVOICE",
              "SALES_PARTNER_REPRESENTATIVE_UPDATE",
              "SALES_PARTNER_SIGNUP",
              "SALES_PARTNER_STATUS_CHANGED",
              "SALES_PARTNER_TYPE_CHANGED",
              "SALES_PARTNER_UPDATED",
              "SALES_REPRESENTATIVE_UPDATE",
              "SEARCH_DATA_RECHECK_LINK_SHARED",
              "USER_ACTIVATION_EMAIL_SENT",
              "USER_DASHBOARD_EXPORT_COMPLETE",
              "USER_DIGEST_EMAIL_SENT",
              "USER_FINISH_VERIFICATION_GOOGLE_EMAIL_SENT",
              "USER_INVITATION",
              "USER_INVITATION_EMAIL_SENT",
              "USER_INVOICE_INVITATION",
              "USER_MODIFY_EMAIL_SETTING",
              "USER_NOTIFICATION_EMAIL_SENT",
              "USER_PASSWORD_RESET",
              "USER_PENDING_APPROVAL_REPLY_NOTIFICATION_EMAIL_SENT",
              "USER_READ_DATA_POINT",
              "USER_START_VERIFICATION_GOOGLE_EMAIL_SENT",
              "USER_STATUS_CHANGED",
              "USER_TIER1_EMAIL_SENT",
              "USER_TIER2_EMAIL_SENT",
              "USER_TIER3_EMAIL_SENT",
              "USER_UNREAD_DATA_POINT",
              "USER_UNREAD_REVIEW_NOTIFICATION_EMAIL_SENT",
              "USER_UPDATED",
              "USER_SOCIAL_POST_PENDING_APPROVAL_EMAIL_SENT",
              "WIDGET_CONFIG_CREATED",
              "WIDGET_CONFIG_DELETED",
              "WIDGET_CONFIG_PUBLISHED",
              "SOCIAL_POST_PENDING_APPROVAL"
            ]
          }
        },
        "description": "Webhook Model"
      },
      "WebhookCommand": {
        "required": [
          "pushUrl",
          "type"
        ],
        "type": "object",
        "properties": {
          "pushUrl": {
            "type": "string",
            "description": "URL to receive webhooks"
          },
          "type": {
            "type": "string",
            "description": "Logging event type to subscribe to",
            "enum": [
              "ADMIN_ALERT",
              "BRAND_DATA_POINT_REPLIED",
              "BRAND_DATA_POINT_REPLIED_PENDING_APPROVAL",
              "BRAND_DATA_POINT_REPLY_APPROVE",
              "BRAND_DATA_POINT_REPLY_REJECT",
              "BUSINESS_CHAIN_UPDATE",
              "BUSINESS_CHANGED_SALES_PARTNER",
              "BUSINESS_COMMENT",
              "BUSINESS_CREATED",
              "BUSINESS_CSV_EXPORT",
              "BUSINESS_DIRECTORY_ACCOUNT",
              "BUSINESS_DIRECTORY_CONNECT",
              "BUSINESS_DUPLICATE_CHECK",
              "BUSINESS_FACEBOOK_PAGE_INVALIDATE",
              "BUSINESS_INVOICE_CHANGED",
              "BUSINESS_INVOICE_CREATED",
              "BUSINESS_INVOICE_CREATED_ANOTHER_BASIC",
              "BUSINESS_INVOICE_CREATED_ANOTHER_PREMIUM",
              "BUSINESS_INVOICE_CREATED_FIRST_BASIC",
              "BUSINESS_INVOICE_CREATED_FIRST_PREMIUM",
              "BUSINESS_INVOICE_CREATED_RENEWAL",
              "BUSINESS_INVOICE_CREATED_UPGRADE_BASIC",
              "BUSINESS_INVOICE_CREATED_UPGRADE_PREMIUM",
              "BUSINESS_INVOICE_RENEWAL_FAIL",
              "BUSINESS_INVOICE_RENEWAL_SUCCESS",
              "BUSINESS_LOCATION_DATA_PULL",
              "BUSINESS_MIGRATE_LOCATION",
              "BUSINESS_NEW_CHATS",
              "BUSINESS_NEW_CONTACT_FORM",
              "BUSINESS_OLO_IMPORT",
              "BUSINESS_OLO_SETTINGS_CREATED",
              "BUSINESS_OLO_SETTINGS_DELETED",
              "BUSINESS_OLO_SETTINGS_UPDATED",
              "BUSINESS_PAGE_INVALIDATE",
              "BUSINESS_PAY_INVOICE",
              "BUSINESS_PRODUCT_PLAN_CHANGED",
              "BUSINESS_STATUS_CHANGED",
              "BUSINESS_TEMPLATE_UPDATE",
              "BUSINESS_UPDATE_PAGE_SOCIAL_POST",
              "BUSINESS_UPDATE_PRICE",
              "DATA_POINT_AUTOMATED_REPLY",
              "DATA_POINT_REPLIED",
              "DATA_POINT_REPLIED_PENDING_APPROVAL",
              "DATA_POINT_REPLY_APPROVE",
              "DATA_POINT_REPLY_REJECT",
              "DATA_POINT_SERVICE_NOW_SUBMITTED",
              "DIRECTORY_BUSINESS_PAGE_DATA_POINT_CHECK",
              "DIRECTORY_BUSINESS_PAGE_DATA_POINT_INVALID",
              "LISTING_AUTOVALIDATION_FAILED",
              "LISTING_BLACKLIST",
              "LISTING_CANCEL",
              "LISTING_DATAPOINT_CHECK",
              "LISTING_DATAPOINT_INVALID",
              "LISTING_DELETE",
              "LISTING_DIRECTORY_CONNECT",
              "LISTING_DIRECTORY_DUPLICATE_REMOVED",
              "LISTING_FACEBOOK_PAGE_INVALIDATE",
              "LISTING_FEED_CREATE",
              "LISTING_FEED_DUPLICATE_REMOVED",
              "LISTING_FEED_IN_SYNC_FIELDS",
              "LISTING_FLAGGED",
              "LISTING_GOOGLE_PAGE_CREATE",
              "LISTING_GOOGLE_PAGE_INVALIDATE",
              "LISTING_GOOGLE_PAGE_UPDATE",
              "LISTING_INITIATE_OWNERSHIP_TRANSFER",
              "LISTING_INVITATION_SENT",
              "LISTING_LINK_CHANGE",
              "LISTING_MANUAL",
              "LISTING_NEEDS_REVIEW_DELETED",
              "LISTING_PAGE_INVALIDATE",
              "LISTING_PUBLISHER_UPDATE",
              "LISTING_REMOVAL_STATUS_CHECK",
              "LISTING_REMOVAL_SUPPRESS",
              "LISTING_REVIEWED",
              "LISTING_STATUS_CHANGE",
              "LISTING_SUGGESTION",
              "LISTING_SUPPRESS",
              "LISTING_SUPPRESS_NOT_ALLOWED",
              "LISTING_SYNC_CHECK",
              "LISTING_UPDATE",
              "LISTING_UPDATE_PAGE_SOCIAL_POST",
              "LISTING_UPDATE_SOCIAL_POST",
              "LISTING_WAITING_DIRECTORY_ACTION",
              "LOCATION_BILLING",
              "LOCATION_BUSINESS_CHANGED",
              "LOCATION_CHECKOUT",
              "LOCATION_CHECKOUT_FREE",
              "LOCATION_CHECKOUT_SALESPARTNER",
              "LOCATION_CHECKOUT_UPGRADE",
              "LOCATION_CLEANSING",
              "LOCATION_CONTRACT_UPDATED",
              "LOCATION_CREATED",
              "LOCATION_DUPLICATE_LISTING_CHECK",
              "LOCATION_DUPLICATE_LISTING_DETECTION",
              "LOCATION_FEED_CLOSED",
              "LOCATION_FEED_PROFILE_CHANGED",
              "LOCATION_GEOCODING_MANUAL",
              "LOCATION_GOOGLE_RANK_CHECK",
              "LOCATION_GROUP_CREATED",
              "LOCATION_GROUP_DELETED",
              "LOCATION_GROUP_UPDATED",
              "LOCATION_INVOICE_CHANGED",
              "LOCATION_LISTING_ADDED",
              "LOCATION_NEEDS_REVIEW_DELETED",
              "LOCATION_NEW_CHATS",
              "LOCATION_NEW_CONTACT_FORM",
              "LOCATION_NORMALIZATION_STATUS_CHANGED",
              "LOCATION_OLO_IMPORT",
              "LOCATION_PARTIAL_UPDATE",
              "LOCATION_PAY_INVOICE",
              "LOCATION_PROFILE_CHANGED",
              "LOCATION_PROFILE_SUGGESTION_DECLINE",
              "LOCATION_STATUS_CHANGED",
              "LOCATION_SUBSCRIPTION_CHANGED",
              "LOCATION_SUGGESTION_CREATED",
              "LOCATION_SUGGESTION_UPDATED",
              "LOCATION_SYNC_STARTED",
              "LOCATION_VISIBILITY_INDEX_CHANGED",
              "PRODUCT_PLAN_CREATED",
              "PRODUCT_PLAN_DELETED",
              "PRODUCT_PLAN_UPDATED",
              "SALES_PARTNER_APPROVAL",
              "SALES_PARTNER_CHILDREN_UPDATED",
              "SALES_PARTNER_CREATED",
              "SALES_PARTNER_DIRECTORY_BRAND",
              "SALES_PARTNER_DIRECTORY_CONNECT",
              "SALES_PARTNER_ENTERPRISE_ONBOARDING",
              "SALES_PARTNER_INVOICE_CHANGED",
              "SALES_PARTNER_INVOICE_PAYMENT_INFORMATION_CHANGED",
              "SALES_PARTNER_ONE_AND_ONE_AUTHENTICATION",
              "SALES_PARTNER_ONE_AND_ONE_CONTRACT_INFORMATION",
              "SALES_PARTNER_PASSWORD_RESET",
              "SALES_PARTNER_PAYMENT_METHOD_RESET",
              "SALES_PARTNER_PAY_INVOICE",
              "SALES_PARTNER_REPRESENTATIVE_UPDATE",
              "SALES_PARTNER_SIGNUP",
              "SALES_PARTNER_STATUS_CHANGED",
              "SALES_PARTNER_TYPE_CHANGED",
              "SALES_PARTNER_UPDATED",
              "SALES_REPRESENTATIVE_UPDATE",
              "SEARCH_DATA_RECHECK_LINK_SHARED",
              "USER_ACTIVATION_EMAIL_SENT",
              "USER_DASHBOARD_EXPORT_COMPLETE",
              "USER_DIGEST_EMAIL_SENT",
              "USER_FINISH_VERIFICATION_GOOGLE_EMAIL_SENT",
              "USER_INVITATION",
              "USER_INVITATION_EMAIL_SENT",
              "USER_INVOICE_INVITATION",
              "USER_MODIFY_EMAIL_SETTING",
              "USER_NOTIFICATION_EMAIL_SENT",
              "USER_PASSWORD_RESET",
              "USER_PENDING_APPROVAL_REPLY_NOTIFICATION_EMAIL_SENT",
              "USER_READ_DATA_POINT",
              "USER_START_VERIFICATION_GOOGLE_EMAIL_SENT",
              "USER_STATUS_CHANGED",
              "USER_TIER1_EMAIL_SENT",
              "USER_TIER2_EMAIL_SENT",
              "USER_TIER3_EMAIL_SENT",
              "USER_UNREAD_DATA_POINT",
              "USER_UNREAD_REVIEW_NOTIFICATION_EMAIL_SENT",
              "USER_UPDATED",
              "USER_SOCIAL_POST_PENDING_APPROVAL_EMAIL_SENT",
              "WIDGET_CONFIG_CREATED",
              "WIDGET_CONFIG_DELETED",
              "WIDGET_CONFIG_PUBLISHED",
              "SOCIAL_POST_PENDING_APPROVAL"
            ]
          }
        },
        "description": "Webhook Command Model"
      },
      "WebhookListWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "type": "array",
            "description": "The actual response object of the response, optional for non 200 responses",
            "items": {
              "$ref": "#/components/schemas/Webhook"
            }
          }
        }
      },
      "WebhookWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/Webhook"
          }
        }
      },
      "WhitelabelInformation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "id",
            "format": "int64",
            "example": 1
          },
          "headerBackgroundColor": {
            "type": "string",
            "description": "The background color of the header",
            "example": "#FFFFFF"
          },
          "logoUrl": {
            "type": "string",
            "description": "The URL of the logo",
            "example": "https://example.com/logo.png"
          },
          "logoTransparentUrl": {
            "type": "string",
            "description": "The URL of the transparent logo",
            "example": "https://example.com/logo-transparent.png"
          },
          "logoResizedUrl": {
            "type": "string",
            "description": "The URL of the resized logo",
            "example": "https://example.com/logo-resized.png"
          },
          "textColor": {
            "type": "string",
            "description": "The text color",
            "example": "#000000"
          },
          "address": {
            "type": "string",
            "description": "The address",
            "example": "123 Main St, Anytown, USA"
          },
          "ctaPrimary": {
            "type": "string",
            "description": "The primary call to action",
            "example": "Sign Up"
          },
          "fromAddressPersonal": {
            "type": "string",
            "description": "The personal from address",
            "example": "noreply@example.com"
          },
          "fromAddress": {
            "type": "string",
            "description": "The from address",
            "example": "support@example.com"
          },
          "identifier": {
            "type": "string",
            "description": "Url path of the white-label information",
            "example": "example-identifier"
          },
          "url": {
            "type": "string",
            "description": "The URL",
            "example": "https://example.com"
          },
          "isSendgridVerified": {
            "type": "boolean",
            "description": "Indicates if the SendGrid is verified",
            "example": true
          }
        },
        "description": "The actual response object of the response, optional for non 200 responses"
      },
      "WhitelabelInformationWrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "QUOTA_LIMIT_EXCEED",
              "NOT_AUTHORIZED",
              "FORBIDDEN",
              "BAD_ACCESS_TOKEN",
              "BAD_PRIVATE_KEY",
              "BAD_PUBLIC_KEY",
              "MISSING_PARAMETER",
              "INVALID_PARAMETER",
              "WRONG_PARAMETER_TYPE",
              "CONFLICT",
              "RESOURCE_LOCKED",
              "SERVER_ERROR",
              "ERROR",
              "NOT_FOUND",
              "BAD_REQUEST",
              "USER_ERROR",
              "PARTIAL_ERROR",
              "METHOD_NOT_ALLOWED"
            ]
          },
          "message": {
            "type": "string",
            "description": "(optional) Holds further information about the response"
          },
          "errorCode": {
            "type": "string",
            "enum": [
              "NORMALIZATION_FAILED",
              "DATA_CORRUPTED",
              "INVALID_INPUT",
              "NOT_SYNCABLE",
              "PAYMENT_FAILED",
              "FREE_TIER_REACHED",
              "LIMIT_REACHED",
              "INACTIVE",
              "UNKNOWN",
              "IDENTIFIER_NOT_UNIQUE",
              "ACCOUNT_WAITING_FOR_AUTO_PAGE_SELECT",
              "NO_ACCOUNT_CONNECTED",
              "NO_PAGE_SELECTED",
              "PAGE_NOT_CREATED",
              "PAGE_IN_REVIEW",
              "PAGE_CLAIMED_BY_OTHERS",
              "OVERLAPPING_SOCIALPOST",
              "TOO_MANY_REPLIES",
              "REPLY_TOO_LONG",
              "DEPRECATED"
            ]
          },
          "warnings": {
            "type": "array",
            "description": "(optional) Holds further warnings",
            "items": {
              "type": "string",
              "description": "(optional) Holds further warnings"
            }
          },
          "response": {
            "$ref": "#/components/schemas/WhitelabelInformation"
          }
        }
      }
    },
    "securitySchemes": {
      "authToken": {
        "type": "apiKey",
        "description": "Auth Token key",
        "name": "authToken",
        "in": "header"
      }
    }
  }
}
